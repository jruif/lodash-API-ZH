{"name":"Lodash-api-zh","tagline":"lodash中文API，英文原版请移步：https://lodash.com/","body":"# lodash v3.10.1-pre（API中文）\r\n\r\n一切关于lodash的使用请移步[lodash](https://lodash.com/) 查看，本文档暂时只做翻译API。\r\n\r\n\r\n<!-- div class=\"toc-container\" -->\r\n\r\n<!-- div -->\r\n\r\n## `Array`\r\n* <a href=\"#_chunkarray-size1\">`_.chunk`</a>\r\n* <a href=\"#_compactarray\">`_.compact`</a>\r\n* <a href=\"#_differencearray-values\">`_.difference`</a>\r\n* <a href=\"#_droparray-n1\">`_.drop`</a>\r\n* <a href=\"#_droprightarray-n1\">`_.dropRight`</a>\r\n* <a href=\"#_droprightwhilearray-predicate_identity-thisarg\">`_.dropRightWhile`</a>\r\n* <a href=\"#_dropwhilearray-predicate_identity-thisarg\">`_.dropWhile`</a>\r\n* <a href=\"#_fillarray-value-start0-endarraylength\">`_.fill`</a>\r\n* <a href=\"#_findindexarray-predicate_identity-thisarg\">`_.findIndex`</a>\r\n* <a href=\"#_findlastindexarray-predicate_identity-thisarg\">`_.findLastIndex`</a>\r\n* <a href=\"#_firstarray\">`_.first`</a>\r\n* <a href=\"#_flattenarray-isdeep\">`_.flatten`</a>\r\n* <a href=\"#_flattendeeparray\">`_.flattenDeep`</a>\r\n* <a href=\"#_firstarray\" class=\"alias\">`_.head` -> `first`</a>\r\n* <a href=\"#_indexofarray-value-fromindex0\">`_.indexOf`</a>\r\n* <a href=\"#_initialarray\">`_.initial`</a>\r\n* <a href=\"#_intersectionarrays\">`_.intersection`</a>\r\n* <a href=\"#_lastarray\">`_.last`</a>\r\n* <a href=\"#_lastindexofarray-value-fromindexarraylength-1\">`_.lastIndexOf`</a>\r\n* <a href=\"#_zipobjectprops-values\" class=\"alias\">`_.object` -> `zipObject`</a>\r\n* <a href=\"#_pullarray-values\">`_.pull`</a>\r\n* <a href=\"#_pullatarray-indexes\">`_.pullAt`</a>\r\n* <a href=\"#_removearray-predicate_identity-thisarg\">`_.remove`</a>\r\n* <a href=\"#_restarray\">`_.rest`</a>\r\n* <a href=\"#_slicearray-start0-endarraylength\">`_.slice`</a>\r\n* <a href=\"#_sortedindexarray-value-iteratee_identity-thisarg\">`_.sortedIndex`</a>\r\n* <a href=\"#_sortedlastindexarray-value-iteratee_identity-thisarg\">`_.sortedLastIndex`</a>\r\n* <a href=\"#_restarray\" class=\"alias\">`_.tail` -> `rest`</a>\r\n* <a href=\"#_takearray-n1\">`_.take`</a>\r\n* <a href=\"#_takerightarray-n1\">`_.takeRight`</a>\r\n* <a href=\"#_takerightwhilearray-predicate_identity-thisarg\">`_.takeRightWhile`</a>\r\n* <a href=\"#_takewhilearray-predicate_identity-thisarg\">`_.takeWhile`</a>\r\n* <a href=\"#_unionarrays\">`_.union`</a>\r\n* <a href=\"#_uniqarray-issorted-iteratee-thisarg\">`_.uniq`</a>\r\n* <a href=\"#_uniqarray-issorted-iteratee-thisarg\" class=\"alias\">`_.unique` -> `uniq`</a>\r\n* <a href=\"#_unziparray\">`_.unzip`</a>\r\n* <a href=\"#_unzipwitharray-iteratee-thisarg\">`_.unzipWith`</a>\r\n* <a href=\"#_withoutarray-values\">`_.without`</a>\r\n* <a href=\"#_xorarrays\">`_.xor`</a>\r\n* <a href=\"#_ziparrays\">`_.zip`</a>\r\n* <a href=\"#_zipobjectprops-values\">`_.zipObject`</a>\r\n* <a href=\"#_zipwitharrays-iteratee-thisarg\">`_.zipWith`</a>\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `Chain`\r\n* <a href=\"#_value\">`_`</a>\r\n* <a href=\"#_chainvalue\">`_.chain`</a>\r\n* <a href=\"#_tapvalue-interceptor-thisarg\">`_.tap`</a>\r\n* <a href=\"#_thruvalue-interceptor-thisarg\">`_.thru`</a>\r\n* <a href=\"#_prototypechain\">`_.prototype.chain`</a>\r\n* <a href=\"#_prototypecommit\">`_.prototype.commit`</a>\r\n* <a href=\"#_prototypeconcatvalues\">`_.prototype.concat`</a>\r\n* <a href=\"#_prototypeplant\">`_.prototype.plant`</a>\r\n* <a href=\"#_prototypereverse\">`_.prototype.reverse`</a>\r\n* <a href=\"#_prototypevalue\" class=\"alias\">`_.prototype.run` -> `value`</a>\r\n* <a href=\"#_prototypevalue\" class=\"alias\">`_.prototype.toJSON` -> `value`</a>\r\n* <a href=\"#_prototypetostring\">`_.prototype.toString`</a>\r\n* <a href=\"#_prototypevalue\">`_.prototype.value`</a>\r\n* <a href=\"#_prototypevalue\" class=\"alias\">`_.prototype.valueOf` -> `value`</a>\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `Collection`\r\n* <a href=\"#_everycollection-predicate_identity-thisarg\" class=\"alias\">`_.all` -> `every`</a>\r\n* <a href=\"#_somecollection-predicate_identity-thisarg\" class=\"alias\">`_.any` -> `some`</a>\r\n* <a href=\"#_atcollection-props\">`_.at`</a>\r\n* <a href=\"#_mapcollection-iteratee_identity-thisarg\" class=\"alias\">`_.collect` -> `map`</a>\r\n* <a href=\"#_includescollection-target-fromindex0\" class=\"alias\">`_.contains` -> `includes`</a>\r\n* <a href=\"#_countbycollection-iteratee_identity-thisarg\">`_.countBy`</a>\r\n* <a href=\"#_findcollection-predicate_identity-thisarg\" class=\"alias\">`_.detect` -> `find`</a>\r\n* <a href=\"#_foreachcollection-iteratee_identity-thisarg\" class=\"alias\">`_.each` -> `forEach`</a>\r\n* <a href=\"#_foreachrightcollection-iteratee_identity-thisarg\" class=\"alias\">`_.eachRight` -> `forEachRight`</a>\r\n* <a href=\"#_everycollection-predicate_identity-thisarg\">`_.every`</a>\r\n* <a href=\"#_filtercollection-predicate_identity-thisarg\">`_.filter`</a>\r\n* <a href=\"#_findcollection-predicate_identity-thisarg\">`_.find`</a>\r\n* <a href=\"#_findlastcollection-predicate_identity-thisarg\">`_.findLast`</a>\r\n* <a href=\"#_findwherecollection-source\">`_.findWhere`</a>\r\n* <a href=\"#_reducecollection-iteratee_identity-accumulator-thisarg\" class=\"alias\">`_.foldl` -> `reduce`</a>\r\n* <a href=\"#_reducerightcollection-iteratee_identity-accumulator-thisarg\" class=\"alias\">`_.foldr` -> `reduceRight`</a>\r\n* <a href=\"#_foreachcollection-iteratee_identity-thisarg\">`_.forEach`</a>\r\n* <a href=\"#_foreachrightcollection-iteratee_identity-thisarg\">`_.forEachRight`</a>\r\n* <a href=\"#_groupbycollection-iteratee_identity-thisarg\">`_.groupBy`</a>\r\n* <a href=\"#_includescollection-target-fromindex0\" class=\"alias\">`_.include` -> `includes`</a>\r\n* <a href=\"#_includescollection-target-fromindex0\">`_.includes`</a>\r\n* <a href=\"#_indexbycollection-iteratee_identity-thisarg\">`_.indexBy`</a>\r\n* <a href=\"#_reducecollection-iteratee_identity-accumulator-thisarg\" class=\"alias\">`_.inject` -> `reduce`</a>\r\n* <a href=\"#_invokecollection-path-args\">`_.invoke`</a>\r\n* <a href=\"#_mapcollection-iteratee_identity-thisarg\">`_.map`</a>\r\n* <a href=\"#_partitioncollection-predicate_identity-thisarg\">`_.partition`</a>\r\n* <a href=\"#_pluckcollection-path\">`_.pluck`</a>\r\n* <a href=\"#_reducecollection-iteratee_identity-accumulator-thisarg\">`_.reduce`</a>\r\n* <a href=\"#_reducerightcollection-iteratee_identity-accumulator-thisarg\">`_.reduceRight`</a>\r\n* <a href=\"#_rejectcollection-predicate_identity-thisarg\">`_.reject`</a>\r\n* <a href=\"#_samplecollection-n\">`_.sample`</a>\r\n* <a href=\"#_filtercollection-predicate_identity-thisarg\" class=\"alias\">`_.select` -> `filter`</a>\r\n* <a href=\"#_shufflecollection\">`_.shuffle`</a>\r\n* <a href=\"#_sizecollection\">`_.size`</a>\r\n* <a href=\"#_somecollection-predicate_identity-thisarg\">`_.some`</a>\r\n* <a href=\"#_sortbycollection-iteratee_identity-thisarg\">`_.sortBy`</a>\r\n* <a href=\"#_sortbyallcollection-iteratees\">`_.sortByAll`</a>\r\n* <a href=\"#_sortbyordercollection-iteratees-orders\">`_.sortByOrder`</a>\r\n* <a href=\"#_wherecollection-source\">`_.where`</a>\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `Date`\r\n* <a href=\"#_now\">`_.now`</a>\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `Function`\r\n* <a href=\"#_aftern-func\">`_.after`</a>\r\n* <a href=\"#_aryfunc-nfunclength\">`_.ary`</a>\r\n* <a href=\"#_flowrightfuncs\" class=\"alias\">`_.backflow` -> `flowRight`</a>\r\n* <a href=\"#_beforen-func\">`_.before`</a>\r\n* <a href=\"#_bindfunc-thisarg-partials\">`_.bind`</a>\r\n* <a href=\"#_bindallobject-methodnames\">`_.bindAll`</a>\r\n* <a href=\"#_bindkeyobject-key-partials\">`_.bindKey`</a>\r\n* <a href=\"#_flowrightfuncs\" class=\"alias\">`_.compose` -> `flowRight`</a>\r\n* <a href=\"#_curryfunc-arityfunclength\">`_.curry`</a>\r\n* <a href=\"#_curryrightfunc-arityfunclength\">`_.curryRight`</a>\r\n* <a href=\"#_debouncefunc-wait0-options\">`_.debounce`</a>\r\n* <a href=\"#_deferfunc-args\">`_.defer`</a>\r\n* <a href=\"#_delayfunc-wait-args\">`_.delay`</a>\r\n* <a href=\"#_flowfuncs\">`_.flow`</a>\r\n* <a href=\"#_flowrightfuncs\">`_.flowRight`</a>\r\n* <a href=\"#_memoizefunc-resolver\">`_.memoize`</a>\r\n* <a href=\"#_modargsfunc-transforms\">`_.modArgs`</a>\r\n* <a href=\"#_negatepredicate\">`_.negate`</a>\r\n* <a href=\"#_oncefunc\">`_.once`</a>\r\n* <a href=\"#_partialfunc-partials\">`_.partial`</a>\r\n* <a href=\"#_partialrightfunc-partials\">`_.partialRight`</a>\r\n* <a href=\"#_reargfunc-indexes\">`_.rearg`</a>\r\n* <a href=\"#_restparamfunc-startfunclength-1\">`_.restParam`</a>\r\n* <a href=\"#_spreadfunc\">`_.spread`</a>\r\n* <a href=\"#_throttlefunc-wait0-options\">`_.throttle`</a>\r\n* <a href=\"#_wrapvalue-wrapper\">`_.wrap`</a>\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `Lang`\r\n* <a href=\"#_clonevalue-isdeep-customizer-thisarg\">`_.clone`</a>\r\n* <a href=\"#_clonedeepvalue-customizer-thisarg\">`_.cloneDeep`</a>\r\n* <a href=\"#_isequalvalue-other-customizer-thisarg\" class=\"alias\">`_.eq` -> `isEqual`</a>\r\n* <a href=\"#_gtvalue-other\">`_.gt`</a>\r\n* <a href=\"#_gtevalue-other\">`_.gte`</a>\r\n* <a href=\"#_isargumentsvalue\">`_.isArguments`</a>\r\n* <a href=\"#_isarrayvalue\">`_.isArray`</a>\r\n* <a href=\"#_isbooleanvalue\">`_.isBoolean`</a>\r\n* <a href=\"#_isdatevalue\">`_.isDate`</a>\r\n* <a href=\"#_iselementvalue\">`_.isElement`</a>\r\n* <a href=\"#_isemptyvalue\">`_.isEmpty`</a>\r\n* <a href=\"#_isequalvalue-other-customizer-thisarg\">`_.isEqual`</a>\r\n* <a href=\"#_iserrorvalue\">`_.isError`</a>\r\n* <a href=\"#_isfinitevalue\">`_.isFinite`</a>\r\n* <a href=\"#_isfunctionvalue\">`_.isFunction`</a>\r\n* <a href=\"#_ismatchobject-source-customizer-thisarg\">`_.isMatch`</a>\r\n* <a href=\"#_isnanvalue\">`_.isNaN`</a>\r\n* <a href=\"#_isnativevalue\">`_.isNative`</a>\r\n* <a href=\"#_isnullvalue\">`_.isNull`</a>\r\n* <a href=\"#_isnumbervalue\">`_.isNumber`</a>\r\n* <a href=\"#_isobjectvalue\">`_.isObject`</a>\r\n* <a href=\"#_isplainobjectvalue\">`_.isPlainObject`</a>\r\n* <a href=\"#_isregexpvalue\">`_.isRegExp`</a>\r\n* <a href=\"#_isstringvalue\">`_.isString`</a>\r\n* <a href=\"#_istypedarrayvalue\">`_.isTypedArray`</a>\r\n* <a href=\"#_isundefinedvalue\">`_.isUndefined`</a>\r\n* <a href=\"#_ltvalue-other\">`_.lt`</a>\r\n* <a href=\"#_ltevalue-other\">`_.lte`</a>\r\n* <a href=\"#_toarrayvalue\">`_.toArray`</a>\r\n* <a href=\"#_toplainobjectvalue\">`_.toPlainObject`</a>\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `Math`\r\n* <a href=\"#_addaugend-addend\">`_.add`</a>\r\n* <a href=\"#_ceiln-precision0\">`_.ceil`</a>\r\n* <a href=\"#_floorn-precision0\">`_.floor`</a>\r\n* <a href=\"#_maxcollection-iteratee-thisarg\">`_.max`</a>\r\n* <a href=\"#_mincollection-iteratee-thisarg\">`_.min`</a>\r\n* <a href=\"#_roundn-precision0\">`_.round`</a>\r\n* <a href=\"#_sumcollection-iteratee-thisarg\">`_.sum`</a>\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `Number`\r\n* <a href=\"#_inrangen-start0-end\">`_.inRange`</a>\r\n* <a href=\"#_randommin0-max1-floating\">`_.random`</a>\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `Object`\r\n* <a href=\"#_assignobject-sources-customizer-thisarg\">`_.assign`</a>\r\n* <a href=\"#_createprototype-properties\">`_.create`</a>\r\n* <a href=\"#_defaultsobject-sources\">`_.defaults`</a>\r\n* <a href=\"#_defaultsdeepobject-sources\">`_.defaultsDeep`</a>\r\n* <a href=\"#_assignobject-sources-customizer-thisarg\" class=\"alias\">`_.extend` -> `assign`</a>\r\n* <a href=\"#_findkeyobject-predicate_identity-thisarg\">`_.findKey`</a>\r\n* <a href=\"#_findlastkeyobject-predicate_identity-thisarg\">`_.findLastKey`</a>\r\n* <a href=\"#_forinobject-iteratee_identity-thisarg\">`_.forIn`</a>\r\n* <a href=\"#_forinrightobject-iteratee_identity-thisarg\">`_.forInRight`</a>\r\n* <a href=\"#_forownobject-iteratee_identity-thisarg\">`_.forOwn`</a>\r\n* <a href=\"#_forownrightobject-iteratee_identity-thisarg\">`_.forOwnRight`</a>\r\n* <a href=\"#_functionsobject\">`_.functions`</a>\r\n* <a href=\"#_getobject-path-defaultvalue\">`_.get`</a>\r\n* <a href=\"#_hasobject-path\">`_.has`</a>\r\n* <a href=\"#_invertobject-multivalue\">`_.invert`</a>\r\n* <a href=\"#_keysobject\">`_.keys`</a>\r\n* <a href=\"#_keysinobject\">`_.keysIn`</a>\r\n* <a href=\"#_mapkeysobject-iteratee_identity-thisarg\">`_.mapKeys`</a>\r\n* <a href=\"#_mapvaluesobject-iteratee_identity-thisarg\">`_.mapValues`</a>\r\n* <a href=\"#_mergeobject-sources-customizer-thisarg\">`_.merge`</a>\r\n* <a href=\"#_functionsobject\" class=\"alias\">`_.methods` -> `functions`</a>\r\n* <a href=\"#_omitobject-predicate-thisarg\">`_.omit`</a>\r\n* <a href=\"#_pairsobject\">`_.pairs`</a>\r\n* <a href=\"#_pickobject-predicate-thisarg\">`_.pick`</a>\r\n* <a href=\"#_resultobject-path-defaultvalue\">`_.result`</a>\r\n* <a href=\"#_setobject-path-value\">`_.set`</a>\r\n* <a href=\"#_transformobject-iteratee_identity-accumulator-thisarg\">`_.transform`</a>\r\n* <a href=\"#_valuesobject\">`_.values`</a>\r\n* <a href=\"#_valuesinobject\">`_.valuesIn`</a>\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `String`\r\n* <a href=\"#_camelcasestring\">`_.camelCase`</a>\r\n* <a href=\"#_capitalizestring\">`_.capitalize`</a>\r\n* <a href=\"#_deburrstring\">`_.deburr`</a>\r\n* <a href=\"#_endswithstring-target-positionstringlength\">`_.endsWith`</a>\r\n* <a href=\"#_escapestring\">`_.escape`</a>\r\n* <a href=\"#_escaperegexpstring\">`_.escapeRegExp`</a>\r\n* <a href=\"#_kebabcasestring\">`_.kebabCase`</a>\r\n* <a href=\"#_padstring-length0-chars\">`_.pad`</a>\r\n* <a href=\"#_padleftstring-length0-chars\">`_.padLeft`</a>\r\n* <a href=\"#_padrightstring-length0-chars\">`_.padRight`</a>\r\n* <a href=\"#_parseintstring-radix\">`_.parseInt`</a>\r\n* <a href=\"#_repeatstring-n0\">`_.repeat`</a>\r\n* <a href=\"#_snakecasestring\">`_.snakeCase`</a>\r\n* <a href=\"#_startcasestring\">`_.startCase`</a>\r\n* <a href=\"#_startswithstring-target-position0\">`_.startsWith`</a>\r\n* <a href=\"#_templatestring-options\">`_.template`</a>\r\n* <a href=\"#_trimstring-charswhitespace\">`_.trim`</a>\r\n* <a href=\"#_trimleftstring-charswhitespace\">`_.trimLeft`</a>\r\n* <a href=\"#_trimrightstring-charswhitespace\">`_.trimRight`</a>\r\n* <a href=\"#_truncstring-options-optionslength30-optionsomission-optionsseparator\">`_.trunc`</a>\r\n* <a href=\"#_unescapestring\">`_.unescape`</a>\r\n* <a href=\"#_wordsstring-pattern\">`_.words`</a>\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `Utility`\r\n* <a href=\"#_attemptfunc\">`_.attempt`</a>\r\n* <a href=\"#_callbackfunc_identity-thisarg\">`_.callback`</a>\r\n* <a href=\"#_constantvalue\">`_.constant`</a>\r\n* <a href=\"#_identityvalue\">`_.identity`</a>\r\n* <a href=\"#_callbackfunc_identity-thisarg\" class=\"alias\">`_.iteratee` -> `callback`</a>\r\n* <a href=\"#_matchessource\">`_.matches`</a>\r\n* <a href=\"#_matchespropertypath-srcvalue\">`_.matchesProperty`</a>\r\n* <a href=\"#_methodpath-args\">`_.method`</a>\r\n* <a href=\"#_methodofobject-args\">`_.methodOf`</a>\r\n* <a href=\"#_mixinobjectlodash-source-options\">`_.mixin`</a>\r\n* <a href=\"#_noconflict\">`_.noConflict`</a>\r\n* <a href=\"#_noop\">`_.noop`</a>\r\n* <a href=\"#_propertypath\">`_.property`</a>\r\n* <a href=\"#_propertyofobject\">`_.propertyOf`</a>\r\n* <a href=\"#_rangestart0-end-step1\">`_.range`</a>\r\n* <a href=\"#_runincontextcontextroot\">`_.runInContext`</a>\r\n* <a href=\"#_timesn-iteratee_identity-thisarg\">`_.times`</a>\r\n* <a href=\"#_uniqueidprefix\">`_.uniqueId`</a>\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `Methods`\r\n* <a href=\"#_templatesettingsimports_\">`_.templateSettings.imports._`</a>\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `Properties`\r\n* <a href=\"#_version\">`_.VERSION`</a>\r\n* <a href=\"#_support\">`_.support`</a>\r\n* <a href=\"#_supportenumerrorprops\">`_.support.enumErrorProps`</a>\r\n* <a href=\"#_supportenumprototypes\">`_.support.enumPrototypes`</a>\r\n* <a href=\"#_supportnonenumshadows\">`_.support.nonEnumShadows`</a>\r\n* <a href=\"#_supportownlast\">`_.support.ownLast`</a>\r\n* <a href=\"#_supportspliceobjects\">`_.support.spliceObjects`</a>\r\n* <a href=\"#_supportunindexedchars\">`_.support.unindexedChars`</a>\r\n* <a href=\"#_templatesettings\">`_.templateSettings`</a>\r\n* <a href=\"#_templatesettingsescape\">`_.templateSettings.escape`</a>\r\n* <a href=\"#_templatesettingsevaluate\">`_.templateSettings.evaluate`</a>\r\n* <a href=\"#_templatesettingsimports\">`_.templateSettings.imports`</a>\r\n* <a href=\"#_templatesettingsinterpolate\">`_.templateSettings.interpolate`</a>\r\n* <a href=\"#_templatesettingsvariable\">`_.templateSettings.variable`</a>\r\n\r\n<!-- /div -->\r\n\r\n<!-- /div -->\r\n\r\n<!-- div class=\"doc-container\" -->\r\n\r\n<!-- div -->\r\n\r\n## `“Array” Methods`\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_chunkarray-size1\"></a>`_.chunk(array, [size=1])`\r\n<a href=\"#_chunkarray-size1\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L4624 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.chunk \"See the npm package\")\r\n\r\n以size为步长分割array，如果array不能够被平均分配，最后一部分剩下的元素为一组。\r\n\r\n#### 参数\r\n1. `array` *(Array)*: 待分割的数组。\r\n2. `[size=1]` *(number)*: 步长.\r\n\r\n#### 返回值\r\n*(Array)*:  返回已分割新数组.\r\n\r\n#### 示例\r\n```js\r\n_.chunk(['a', 'b', 'c', 'd'], 2);\r\n// => [['a', 'b'], ['c', 'd']]\r\n\r\n_.chunk(['a', 'b', 'c', 'd'], 3);\r\n// => [['a', 'b', 'c'], ['d']]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_compactarray\"></a>`_.compact(array)`\r\n<a href=\"#_compactarray\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L4655 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.compact \"See the npm package\")\r\n\r\nCreates an array with all falsey values removed. The values `false`, `null`,\r\n`0`, `\"\"`, `undefined`, and `NaN` are falsey.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to compact.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new array of filtered values.\r\n\r\n#### Example\r\n```js\r\n_.compact([0, 1, false, 2, '', 3]);\r\n// => [1, 2, 3]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_differencearray-values\"></a>`_.difference(array, [values])`\r\n<a href=\"#_differencearray-values\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L4686 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.difference \"See the npm package\")\r\n\r\nCreates an array of unique `array` values not included in the other\r\nprovided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\r\nfor equality comparisons.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to inspect.\r\n2. `[values]` *(...Array)*: The arrays of values to exclude.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new array of filtered values.\r\n\r\n#### Example\r\n```js\r\n_.difference([1, 2, 3], [4, 2]);\r\n// => [1, 3]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_droparray-n1\"></a>`_.drop(array, [n=1])`\r\n<a href=\"#_droparray-n1\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L4716 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.drop \"See the npm package\")\r\n\r\nCreates a slice of `array` with `n` elements dropped from the beginning.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to query.\r\n2. `[n=1]` *(number)*: The number of elements to drop.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the slice of `array`.\r\n\r\n#### Example\r\n```js\r\n_.drop([1, 2, 3]);\r\n// => [2, 3]\r\n\r\n_.drop([1, 2, 3], 2);\r\n// => [3]\r\n\r\n_.drop([1, 2, 3], 5);\r\n// => []\r\n\r\n_.drop([1, 2, 3], 0);\r\n// => [1, 2, 3]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_droprightarray-n1\"></a>`_.dropRight(array, [n=1])`\r\n<a href=\"#_droprightarray-n1\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L4751 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.dropright \"See the npm package\")\r\n\r\nCreates a slice of `array` with `n` elements dropped from the end.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to query.\r\n2. `[n=1]` *(number)*: The number of elements to drop.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the slice of `array`.\r\n\r\n#### Example\r\n```js\r\n_.dropRight([1, 2, 3]);\r\n// => [1, 2]\r\n\r\n_.dropRight([1, 2, 3], 2);\r\n// => [1]\r\n\r\n_.dropRight([1, 2, 3], 5);\r\n// => []\r\n\r\n_.dropRight([1, 2, 3], 0);\r\n// => [1, 2, 3]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_droprightwhilearray-predicate_identity-thisarg\"></a>`_.dropRightWhile(array, [predicate=_.identity], [thisArg])`\r\n<a href=\"#_droprightwhilearray-predicate_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L4812 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.droprightwhile \"See the npm package\")\r\n\r\nCreates a slice of `array` excluding elements dropped from the end.\r\nElements are dropped until `predicate` returns falsey. The predicate is\r\nbound to `thisArg` and invoked with three arguments: (value, index, array).\r\n<br>\r\n<br>\r\nIf a property name is provided for `predicate` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `predicate` the created `_.matches` style\r\ncallback returns `true` for elements that match the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to query.\r\n2. `[predicate=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the slice of `array`.\r\n\r\n#### Example\r\n```js\r\n_.dropRightWhile([1, 2, 3], function(n) {\r\n  return n > 1;\r\n});\r\n// => [1]\r\n\r\nvar users = [\r\n  { 'user': 'barney',  'active': true },\r\n  { 'user': 'fred',    'active': false },\r\n  { 'user': 'pebbles', 'active': false }\r\n];\r\n\r\n// using the `_.matches` callback shorthand\r\n_.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\r\n// => ['barney', 'fred']\r\n\r\n// using the `_.matchesProperty` callback shorthand\r\n_.pluck(_.dropRightWhile(users, 'active', false), 'user');\r\n// => ['barney']\r\n\r\n// using the `_.property` callback shorthand\r\n_.pluck(_.dropRightWhile(users, 'active'), 'user');\r\n// => ['barney', 'fred', 'pebbles']\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_dropwhilearray-predicate_identity-thisarg\"></a>`_.dropWhile(array, [predicate=_.identity], [thisArg])`\r\n<a href=\"#_dropwhilearray-predicate_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L4867 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.dropwhile \"See the npm package\")\r\n\r\nCreates a slice of `array` excluding elements dropped from the beginning.\r\nElements are dropped until `predicate` returns falsey. The predicate is\r\nbound to `thisArg` and invoked with three arguments: (value, index, array).\r\n<br>\r\n<br>\r\nIf a property name is provided for `predicate` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `predicate` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to query.\r\n2. `[predicate=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the slice of `array`.\r\n\r\n#### Example\r\n```js\r\n_.dropWhile([1, 2, 3], function(n) {\r\n  return n < 3;\r\n});\r\n// => [3]\r\n\r\nvar users = [\r\n  { 'user': 'barney',  'active': false },\r\n  { 'user': 'fred',    'active': false },\r\n  { 'user': 'pebbles', 'active': true }\r\n];\r\n\r\n// using the `_.matches` callback shorthand\r\n_.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\r\n// => ['fred', 'pebbles']\r\n\r\n// using the `_.matchesProperty` callback shorthand\r\n_.pluck(_.dropWhile(users, 'active', false), 'user');\r\n// => ['pebbles']\r\n\r\n// using the `_.property` callback shorthand\r\n_.pluck(_.dropWhile(users, 'active'), 'user');\r\n// => ['barney', 'fred', 'pebbles']\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_fillarray-value-start0-endarraylength\"></a>`_.fill(array, value, [start=0], [end=array.length])`\r\n<a href=\"#_fillarray-value-start0-endarraylength\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L4901 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.fill \"See the npm package\")\r\n\r\nFills elements of `array` with `value` from `start` up to, but not\r\nincluding, `end`.\r\n<br>\r\n<br>\r\n**Note:** This method mutates `array`.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to fill.\r\n2. `value` *(&#42;)*: The value to fill `array` with.\r\n3. `[start=0]` *(number)*: The start position.\r\n4. `[end=array.length]` *(number)*: The end position.\r\n\r\n#### Returns\r\n*(Array)*:  Returns `array`.\r\n\r\n#### Example\r\n```js\r\nvar array = [1, 2, 3];\r\n\r\n_.fill(array, 'a');\r\nconsole.log(array);\r\n// => ['a', 'a', 'a']\r\n\r\n_.fill(Array(3), 2);\r\n// => [2, 2, 2]\r\n\r\n_.fill([4, 6, 8], '*', 1, 2);\r\n// => [4, '*', 8]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_findindexarray-predicate_identity-thisarg\"></a>`_.findIndex(array, [predicate=_.identity], [thisArg])`\r\n<a href=\"#_findindexarray-predicate_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L4961 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.findindex \"See the npm package\")\r\n\r\nThis method is like `_.find` except that it returns the index of the first\r\nelement `predicate` returns truthy for instead of the element itself.\r\n<br>\r\n<br>\r\nIf a property name is provided for `predicate` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `predicate` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to search.\r\n2. `[predicate=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(number)*:  Returns the index of the found element, else `-1`.\r\n\r\n#### Example\r\n```js\r\nvar users = [\r\n  { 'user': 'barney',  'active': false },\r\n  { 'user': 'fred',    'active': false },\r\n  { 'user': 'pebbles', 'active': true }\r\n];\r\n\r\n_.findIndex(users, function(chr) {\r\n  return chr.user == 'barney';\r\n});\r\n// => 0\r\n\r\n// using the `_.matches` callback shorthand\r\n_.findIndex(users, { 'user': 'fred', 'active': false });\r\n// => 1\r\n\r\n// using the `_.matchesProperty` callback shorthand\r\n_.findIndex(users, 'active', false);\r\n// => 0\r\n\r\n// using the `_.property` callback shorthand\r\n_.findIndex(users, 'active');\r\n// => 2\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_findlastindexarray-predicate_identity-thisarg\"></a>`_.findLastIndex(array, [predicate=_.identity], [thisArg])`\r\n<a href=\"#_findlastindexarray-predicate_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5011 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.findlastindex \"See the npm package\")\r\n\r\nThis method is like `_.findIndex` except that it iterates over elements\r\nof `collection` from right to left.\r\n<br>\r\n<br>\r\nIf a property name is provided for `predicate` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `predicate` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to search.\r\n2. `[predicate=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(number)*:  Returns the index of the found element, else `-1`.\r\n\r\n#### Example\r\n```js\r\nvar users = [\r\n  { 'user': 'barney',  'active': true },\r\n  { 'user': 'fred',    'active': false },\r\n  { 'user': 'pebbles', 'active': false }\r\n];\r\n\r\n_.findLastIndex(users, function(chr) {\r\n  return chr.user == 'pebbles';\r\n});\r\n// => 2\r\n\r\n// using the `_.matches` callback shorthand\r\n_.findLastIndex(users, { 'user': 'barney', 'active': true });\r\n// => 0\r\n\r\n// using the `_.matchesProperty` callback shorthand\r\n_.findLastIndex(users, 'active', false);\r\n// => 2\r\n\r\n// using the `_.property` callback shorthand\r\n_.findLastIndex(users, 'active');\r\n// => 0\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_firstarray\"></a>`_.first(array)`\r\n<a href=\"#_firstarray\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5030 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.first \"See the npm package\")\r\n\r\nGets the first element of `array`.\r\n\r\n#### Aliases\r\n*_.head*\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to query.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the first element of `array`.\r\n\r\n#### Example\r\n```js\r\n_.first([1, 2, 3]);\r\n// => 1\r\n\r\n_.first([]);\r\n// => undefined\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_flattenarray-isdeep\"></a>`_.flatten(array, [isDeep])`\r\n<a href=\"#_flattenarray-isdeep\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5054 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.flatten \"See the npm package\")\r\n\r\nFlattens a nested array. If `isDeep` is `true` the array is recursively\r\nflattened, otherwise it's only flattened a single level.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to flatten.\r\n2. `[isDeep]` *(boolean)*: Specify a deep flatten.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new flattened array.\r\n\r\n#### Example\r\n```js\r\n_.flatten([1, [2, 3, [4]]]);\r\n// => [1, 2, 3, [4]]\r\n\r\n// using `isDeep`\r\n_.flatten([1, [2, 3, [4]]], true);\r\n// => [1, 2, 3, 4]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_flattendeeparray\"></a>`_.flattenDeep(array)`\r\n<a href=\"#_flattendeeparray\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5075 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.flattendeep \"See the npm package\")\r\n\r\nRecursively flattens a nested array.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to recursively flatten.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new flattened array.\r\n\r\n#### Example\r\n```js\r\n_.flattenDeep([1, [2, 3, [4]]]);\r\n// => [1, 2, 3, 4]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_indexofarray-value-fromindex0\"></a>`_.indexOf(array, value, [fromIndex=0])`\r\n<a href=\"#_indexofarray-value-fromindex0\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5108 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.indexof \"See the npm package\")\r\n\r\nGets the index at which the first occurrence of `value` is found in `array`\r\nusing [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\r\nfor equality comparisons. If `fromIndex` is negative, it's used as the offset\r\nfrom the end of `array`. If `array` is sorted providing `true` for `fromIndex`\r\nperforms a faster binary search.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to search.\r\n2. `value` *(&#42;)*: The value to search for.\r\n3. `[fromIndex=0]` *(boolean|number)*: The index to search from or `true` to perform a binary search on a sorted array.\r\n\r\n#### Returns\r\n*(number)*:  Returns the index of the matched value, else `-1`.\r\n\r\n#### Example\r\n```js\r\n_.indexOf([1, 2, 1, 2], 2);\r\n// => 1\r\n\r\n// using `fromIndex`\r\n_.indexOf([1, 2, 1, 2], 2, 2);\r\n// => 3\r\n\r\n// performing a binary search\r\n_.indexOf([1, 1, 2, 2], 2, true);\r\n// => 2\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_initialarray\"></a>`_.initial(array)`\r\n<a href=\"#_initialarray\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5139 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.initial \"See the npm package\")\r\n\r\nGets all but the last element of `array`.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to query.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the slice of `array`.\r\n\r\n#### Example\r\n```js\r\n_.initial([1, 2, 3]);\r\n// => [1, 2]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_intersectionarrays\"></a>`_.intersection([arrays])`\r\n<a href=\"#_intersectionarrays\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5157 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.intersection \"See the npm package\")\r\n\r\nCreates an array of unique values that are included in all of the provided\r\narrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\r\nfor equality comparisons.\r\n\r\n#### Arguments\r\n1. `[arrays]` *(...Array)*: The arrays to inspect.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new array of shared values.\r\n\r\n#### Example\r\n```js\r\n_.intersection([1, 2], [4, 2], [2, 1]);\r\n// => [2]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_lastarray\"></a>`_.last(array)`\r\n<a href=\"#_lastarray\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5207 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.last \"See the npm package\")\r\n\r\nGets the last element of `array`.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to query.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the last element of `array`.\r\n\r\n#### Example\r\n```js\r\n_.last([1, 2, 3]);\r\n// => 3\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_lastindexofarray-value-fromindexarraylength-1\"></a>`_.lastIndexOf(array, value, [fromIndex=array.length-1])`\r\n<a href=\"#_lastindexofarray-value-fromindexarraylength-1\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5237 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.lastindexof \"See the npm package\")\r\n\r\nThis method is like `_.indexOf` except that it iterates over elements of\r\n`array` from right to left.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to search.\r\n2. `value` *(&#42;)*: The value to search for.\r\n3. `[fromIndex=array.length-1]` *(boolean|number)*: The index to search from or `true` to perform a binary search on a sorted array.\r\n\r\n#### Returns\r\n*(number)*:  Returns the index of the matched value, else `-1`.\r\n\r\n#### Example\r\n```js\r\n_.lastIndexOf([1, 2, 1, 2], 2);\r\n// => 3\r\n\r\n// using `fromIndex`\r\n_.lastIndexOf([1, 2, 1, 2], 2, 2);\r\n// => 1\r\n\r\n// performing a binary search\r\n_.lastIndexOf([1, 1, 2, 2], 2, true);\r\n// => 3\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_pullarray-values\"></a>`_.pull(array, [values])`\r\n<a href=\"#_pullarray-values\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5285 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.pull \"See the npm package\")\r\n\r\nRemoves all provided values from `array` using\r\n[`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\r\nfor equality comparisons.\r\n<br>\r\n<br>\r\n**Note:** Unlike `_.without`, this method mutates `array`.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to modify.\r\n2. `[values]` *(...&#42;)*: The values to remove.\r\n\r\n#### Returns\r\n*(Array)*:  Returns `array`.\r\n\r\n#### Example\r\n```js\r\nvar array = [1, 2, 3, 1, 2, 3];\r\n\r\n_.pull(array, 2, 3);\r\nconsole.log(array);\r\n// => [1, 1]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_pullatarray-indexes\"></a>`_.pullAt(array, [indexes])`\r\n<a href=\"#_pullatarray-indexes\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5332 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.pullat \"See the npm package\")\r\n\r\nRemoves elements from `array` corresponding to the given indexes and returns\r\nan array of the removed elements. Indexes may be specified as an array of\r\nindexes or as individual arguments.\r\n<br>\r\n<br>\r\n**Note:** Unlike `_.at`, this method mutates `array`.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to modify.\r\n2. `[indexes]` *(...(number|number&#91;&#93;)*: The indexes of elements to remove, specified as individual indexes or arrays of indexes.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new array of removed elements.\r\n\r\n#### Example\r\n```js\r\nvar array = [5, 10, 15, 20];\r\nvar evens = _.pullAt(array, 1, 3);\r\n\r\nconsole.log(array);\r\n// => [5, 15]\r\n\r\nconsole.log(evens);\r\n// => [10, 20]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_removearray-predicate_identity-thisarg\"></a>`_.remove(array, [predicate=_.identity], [thisArg])`\r\n<a href=\"#_removearray-predicate_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5379 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.remove \"See the npm package\")\r\n\r\nRemoves all elements from `array` that `predicate` returns truthy for\r\nand returns an array of the removed elements. The predicate is bound to\r\n`thisArg` and invoked with three arguments: (value, index, array).\r\n<br>\r\n<br>\r\nIf a property name is provided for `predicate` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `predicate` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n<br>\r\n<br>\r\n**Note:** Unlike `_.filter`, this method mutates `array`.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to modify.\r\n2. `[predicate=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new array of removed elements.\r\n\r\n#### Example\r\n```js\r\nvar array = [1, 2, 3, 4];\r\nvar evens = _.remove(array, function(n) {\r\n  return n % 2 == 0;\r\n});\r\n\r\nconsole.log(array);\r\n// => [1, 3]\r\n\r\nconsole.log(evens);\r\n// => [2, 4]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_restarray\"></a>`_.rest(array)`\r\n<a href=\"#_restarray\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5414 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.rest \"See the npm package\")\r\n\r\nGets all but the first element of `array`.\r\n\r\n#### Aliases\r\n*_.tail*\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to query.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the slice of `array`.\r\n\r\n#### Example\r\n```js\r\n_.rest([1, 2, 3]);\r\n// => [2, 3]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_slicearray-start0-endarraylength\"></a>`_.slice(array, [start=0], [end=array.length])`\r\n<a href=\"#_slicearray-start0-endarraylength\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5432 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.slice \"See the npm package\")\r\n\r\nCreates a slice of `array` from `start` up to, but not including, `end`.\r\n<br>\r\n<br>\r\n**Note:** This method is used instead of `Array#slice` to support node\r\nlists in IE < 9 and to ensure dense arrays are returned.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to slice.\r\n2. `[start=0]` *(number)*: The start position.\r\n3. `[end=array.length]` *(number)*: The end position.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the slice of `array`.\r\n\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_sortedindexarray-value-iteratee_identity-thisarg\"></a>`_.sortedIndex(array, value, [iteratee=_.identity], [thisArg])`\r\n<a href=\"#_sortedindexarray-value-iteratee_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5492 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.sortedindex \"See the npm package\")\r\n\r\nUses a binary search to determine the lowest index at which `value` should\r\nbe inserted into `array` in order to maintain its sort order. If an iteratee\r\nfunction is provided it's invoked for `value` and each element of `array`\r\nto compute their sort ranking. The iteratee is bound to `thisArg` and\r\ninvoked with one argument; (value).\r\n<br>\r\n<br>\r\nIf a property name is provided for `iteratee` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `iteratee` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The sorted array to inspect.\r\n2. `value` *(&#42;)*: The value to evaluate.\r\n3. `[iteratee=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n4. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(number)*:  Returns the index at which `value` should be inserted\r\ninto `array`.\r\n\r\n#### Example\r\n```js\r\n_.sortedIndex([30, 50], 40);\r\n// => 1\r\n\r\n_.sortedIndex([4, 4, 5, 5], 5);\r\n// => 2\r\n\r\nvar dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\r\n\r\n// using an iteratee function\r\n_.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\r\n  return this.data[word];\r\n}, dict);\r\n// => 1\r\n\r\n// using the `_.property` callback shorthand\r\n_.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\r\n// => 1\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_sortedlastindexarray-value-iteratee_identity-thisarg\"></a>`_.sortedLastIndex(array, value, [iteratee=_.identity], [thisArg])`\r\n<a href=\"#_sortedlastindexarray-value-iteratee_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5514 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.sortedlastindex \"See the npm package\")\r\n\r\nThis method is like `_.sortedIndex` except that it returns the highest\r\nindex at which `value` should be inserted into `array` in order to\r\nmaintain its sort order.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The sorted array to inspect.\r\n2. `value` *(&#42;)*: The value to evaluate.\r\n3. `[iteratee=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n4. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(number)*:  Returns the index at which `value` should be inserted\r\ninto `array`.\r\n\r\n#### Example\r\n```js\r\n_.sortedLastIndex([4, 4, 5, 5], 5);\r\n// => 4\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_takearray-n1\"></a>`_.take(array, [n=1])`\r\n<a href=\"#_takearray-n1\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5540 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.take \"See the npm package\")\r\n\r\nCreates a slice of `array` with `n` elements taken from the beginning.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to query.\r\n2. `[n=1]` *(number)*: The number of elements to take.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the slice of `array`.\r\n\r\n#### Example\r\n```js\r\n_.take([1, 2, 3]);\r\n// => [1]\r\n\r\n_.take([1, 2, 3], 2);\r\n// => [1, 2]\r\n\r\n_.take([1, 2, 3], 5);\r\n// => [1, 2, 3]\r\n\r\n_.take([1, 2, 3], 0);\r\n// => []\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_takerightarray-n1\"></a>`_.takeRight(array, [n=1])`\r\n<a href=\"#_takerightarray-n1\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5575 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.takeright \"See the npm package\")\r\n\r\nCreates a slice of `array` with `n` elements taken from the end.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to query.\r\n2. `[n=1]` *(number)*: The number of elements to take.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the slice of `array`.\r\n\r\n#### Example\r\n```js\r\n_.takeRight([1, 2, 3]);\r\n// => [3]\r\n\r\n_.takeRight([1, 2, 3], 2);\r\n// => [2, 3]\r\n\r\n_.takeRight([1, 2, 3], 5);\r\n// => [1, 2, 3]\r\n\r\n_.takeRight([1, 2, 3], 0);\r\n// => []\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_takerightwhilearray-predicate_identity-thisarg\"></a>`_.takeRightWhile(array, [predicate=_.identity], [thisArg])`\r\n<a href=\"#_takerightwhilearray-predicate_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5636 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.takerightwhile \"See the npm package\")\r\n\r\nCreates a slice of `array` with elements taken from the end. Elements are\r\ntaken until `predicate` returns falsey. The predicate is bound to `thisArg`\r\nand invoked with three arguments: (value, index, array).\r\n<br>\r\n<br>\r\nIf a property name is provided for `predicate` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `predicate` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to query.\r\n2. `[predicate=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the slice of `array`.\r\n\r\n#### Example\r\n```js\r\n_.takeRightWhile([1, 2, 3], function(n) {\r\n  return n > 1;\r\n});\r\n// => [2, 3]\r\n\r\nvar users = [\r\n  { 'user': 'barney',  'active': true },\r\n  { 'user': 'fred',    'active': false },\r\n  { 'user': 'pebbles', 'active': false }\r\n];\r\n\r\n// using the `_.matches` callback shorthand\r\n_.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\r\n// => ['pebbles']\r\n\r\n// using the `_.matchesProperty` callback shorthand\r\n_.pluck(_.takeRightWhile(users, 'active', false), 'user');\r\n// => ['fred', 'pebbles']\r\n\r\n// using the `_.property` callback shorthand\r\n_.pluck(_.takeRightWhile(users, 'active'), 'user');\r\n// => []\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_takewhilearray-predicate_identity-thisarg\"></a>`_.takeWhile(array, [predicate=_.identity], [thisArg])`\r\n<a href=\"#_takewhilearray-predicate_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5691 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.takewhile \"See the npm package\")\r\n\r\nCreates a slice of `array` with elements taken from the beginning. Elements\r\nare taken until `predicate` returns falsey. The predicate is bound to\r\n`thisArg` and invoked with three arguments: (value, index, array).\r\n<br>\r\n<br>\r\nIf a property name is provided for `predicate` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `predicate` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to query.\r\n2. `[predicate=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the slice of `array`.\r\n\r\n#### Example\r\n```js\r\n_.takeWhile([1, 2, 3], function(n) {\r\n  return n < 3;\r\n});\r\n// => [1, 2]\r\n\r\nvar users = [\r\n  { 'user': 'barney',  'active': false },\r\n  { 'user': 'fred',    'active': false},\r\n  { 'user': 'pebbles', 'active': true }\r\n];\r\n\r\n// using the `_.matches` callback shorthand\r\n_.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\r\n// => ['barney']\r\n\r\n// using the `_.matchesProperty` callback shorthand\r\n_.pluck(_.takeWhile(users, 'active', false), 'user');\r\n// => ['barney', 'fred']\r\n\r\n// using the `_.property` callback shorthand\r\n_.pluck(_.takeWhile(users, 'active'), 'user');\r\n// => []\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_unionarrays\"></a>`_.union([arrays])`\r\n<a href=\"#_unionarrays\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5712 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.union \"See the npm package\")\r\n\r\nCreates an array of unique values, in order, from all of the provided arrays\r\nusing [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\r\nfor equality comparisons.\r\n\r\n#### Arguments\r\n1. `[arrays]` *(...Array)*: The arrays to inspect.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new array of combined values.\r\n\r\n#### Example\r\n```js\r\n_.union([1, 2], [4, 2], [2, 1]);\r\n// => [1, 2, 4]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_uniqarray-issorted-iteratee-thisarg\"></a>`_.uniq(array, [isSorted], [iteratee], [thisArg])`\r\n<a href=\"#_uniqarray-issorted-iteratee-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5765 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.uniq \"See the npm package\")\r\n\r\nCreates a duplicate-free version of an array, using\r\n[`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\r\nfor equality comparisons, in which only the first occurence of each element\r\nis kept. Providing `true` for `isSorted` performs a faster search algorithm\r\nfor sorted arrays. If an iteratee function is provided it's invoked for\r\neach element in the array to generate the criterion by which uniqueness\r\nis computed. The `iteratee` is bound to `thisArg` and invoked with three\r\narguments: (value, index, array).\r\n<br>\r\n<br>\r\nIf a property name is provided for `iteratee` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `iteratee` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Aliases\r\n*_.unique*\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to inspect.\r\n2. `[isSorted]` *(boolean)*: Specify the array is sorted.\r\n3. `[iteratee]` *(Function|Object|string)*: The function invoked per iteration.\r\n4. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new duplicate-value-free array.\r\n\r\n#### Example\r\n```js\r\n_.uniq([2, 1, 2]);\r\n// => [2, 1]\r\n\r\n// using `isSorted`\r\n_.uniq([1, 1, 2], true);\r\n// => [1, 2]\r\n\r\n// using an iteratee function\r\n_.uniq([1, 2.5, 1.5, 2], function(n) {\r\n  return this.floor(n);\r\n}, Math);\r\n// => [1, 2.5]\r\n\r\n// using the `_.property` callback shorthand\r\n_.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\r\n// => [{ 'x': 1 }, { 'x': 2 }]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_unziparray\"></a>`_.unzip(array)`\r\n<a href=\"#_unziparray\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5802 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.unzip \"See the npm package\")\r\n\r\nThis method is like `_.zip` except that it accepts an array of grouped\r\nelements and creates an array regrouping the elements to their pre-zip\r\nconfiguration.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array of grouped elements to process.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new array of regrouped elements.\r\n\r\n#### Example\r\n```js\r\nvar zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\r\n// => [['fred', 30, true], ['barney', 40, false]]\r\n\r\n_.unzip(zipped);\r\n// => [['fred', 'barney'], [30, 40], [true, false]]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_unzipwitharray-iteratee-thisarg\"></a>`_.unzipWith(array, [iteratee], [thisArg])`\r\n<a href=\"#_unzipwitharray-iteratee-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5842 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.unzipwith \"See the npm package\")\r\n\r\nThis method is like `_.unzip` except that it accepts an iteratee to specify\r\nhow regrouped values should be combined. The `iteratee` is bound to `thisArg`\r\nand invoked with four arguments: (accumulator, value, index, group).\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array of grouped elements to process.\r\n2. `[iteratee]` *(Function)*: The function to combine regrouped values.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new array of regrouped elements.\r\n\r\n#### Example\r\n```js\r\nvar zipped = _.zip([1, 2], [10, 20], [100, 200]);\r\n// => [[1, 10, 100], [2, 20, 200]]\r\n\r\n_.unzipWith(zipped, _.add);\r\n// => [3, 30, 300]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_withoutarray-values\"></a>`_.without(array, [values])`\r\n<a href=\"#_withoutarray-values\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5873 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.without \"See the npm package\")\r\n\r\nCreates an array excluding all provided values using\r\n[`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\r\nfor equality comparisons.\r\n\r\n#### Arguments\r\n1. `array` *(Array)*: The array to filter.\r\n2. `[values]` *(...&#42;)*: The values to exclude.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new array of filtered values.\r\n\r\n#### Example\r\n```js\r\n_.without([1, 2, 1, 3], 1, 2);\r\n// => [3]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_xorarrays\"></a>`_.xor([arrays])`\r\n<a href=\"#_xorarrays\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5893 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.xor \"See the npm package\")\r\n\r\nCreates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\r\nof the provided arrays.\r\n\r\n#### Arguments\r\n1. `[arrays]` *(...Array)*: The arrays to inspect.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new array of values.\r\n\r\n#### Example\r\n```js\r\n_.xor([1, 2], [4, 2]);\r\n// => [1, 4]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_ziparrays\"></a>`_.zip([arrays])`\r\n<a href=\"#_ziparrays\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5923 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.zip \"See the npm package\")\r\n\r\nCreates an array of grouped elements, the first of which contains the first\r\nelements of the given arrays, the second of which contains the second elements\r\nof the given arrays, and so on.\r\n\r\n#### Arguments\r\n1. `[arrays]` *(...Array)*: The arrays to process.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new array of grouped elements.\r\n\r\n#### Example\r\n```js\r\n_.zip(['fred', 'barney'], [30, 40], [true, false]);\r\n// => [['fred', 30, true], ['barney', 40, false]]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_zipobjectprops-values\"></a>`_.zipObject(props, [values=[]])`\r\n<a href=\"#_zipobjectprops-values\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5946 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.zipobject \"See the npm package\")\r\n\r\nThe inverse of `_.pairs`; this method returns an object composed from arrays\r\nof property names and values. Provide either a single two dimensional array,\r\ne.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\r\nand one of corresponding values.\r\n\r\n#### Aliases\r\n*_.object*\r\n\r\n#### Arguments\r\n1. `props` *(Array)*: The property names.\r\n2. `[values=[]]` *(Array)*: The property values.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the new object.\r\n\r\n#### Example\r\n```js\r\n_.zipObject([['fred', 30], ['barney', 40]]);\r\n// => { 'fred': 30, 'barney': 40 }\r\n\r\n_.zipObject(['fred', 'barney'], [30, 40]);\r\n// => { 'fred': 30, 'barney': 40 }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_zipwitharrays-iteratee-thisarg\"></a>`_.zipWith([arrays], [iteratee], [thisArg])`\r\n<a href=\"#_zipwitharrays-iteratee-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L5982 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.zipwith \"See the npm package\")\r\n\r\nThis method is like `_.zip` except that it accepts an iteratee to specify\r\nhow grouped values should be combined. The `iteratee` is bound to `thisArg`\r\nand invoked with four arguments: (accumulator, value, index, group).\r\n\r\n#### Arguments\r\n1. `[arrays]` *(...Array)*: The arrays to process.\r\n2. `[iteratee]` *(Function)*: The function to combine grouped values.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new array of grouped elements.\r\n\r\n#### Example\r\n```js\r\n_.zipWith([1, 2], [10, 20], [100, 200], _.add);\r\n// => [111, 222]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `“Chain” Methods`\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_value\"></a>`_(value)`\r\n<a href=\"#_value\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L944 \"View in source\") [&#x24C9;][1]\r\n\r\nCreates a `lodash` object which wraps `value` to enable implicit chaining.\r\nMethods that operate on and return arrays, collections, and functions can\r\nbe chained together. Methods that retrieve a single value or may return a\r\nprimitive value will automatically end the chain returning the unwrapped\r\nvalue. Explicit chaining may be enabled using `_.chain`. The execution of\r\nchained methods is lazy, that is, execution is deferred until `_#value`\r\nis implicitly or explicitly called.\r\n<br>\r\n<br>\r\nLazy evaluation allows several methods to support shortcut fusion. Shortcut\r\nfusion is an optimization strategy which merge iteratee calls; this can help\r\nto avoid the creation of intermediate data structures and greatly reduce the\r\nnumber of iteratee executions.\r\n<br>\r\n<br>\r\nChaining is supported in custom builds as long as the `_#value` method is\r\ndirectly or indirectly included in the build.\r\n<br>\r\n<br>\r\nIn addition to lodash methods, wrappers have `Array` and `String` methods.\r\n<br>\r\n<br>\r\nThe wrapper `Array` methods are:<br>\r\n`concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\r\n`splice`, and `unshift`\r\n<br>\r\n<br>\r\nThe wrapper `String` methods are:<br>\r\n`replace` and `split`\r\n<br>\r\n<br>\r\nThe wrapper methods that support shortcut fusion are:<br>\r\n`compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\r\n`first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\r\n`slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\r\nand `where`\r\n<br>\r\n<br>\r\nThe chainable wrapper methods are:<br>\r\n`after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\r\n`callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\r\n`countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\r\n`defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\r\n`dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\r\n`forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\r\n`functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\r\n`invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\r\n`matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\r\n`modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\r\n`partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\r\n`pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\r\n`reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\r\n`sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\r\n`takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\r\n`transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\r\n`valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\r\n<br>\r\n<br>\r\nThe wrapper methods that are **not** chainable by default are:<br>\r\n`add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\r\n`deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\r\n`findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\r\n`floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\r\n`inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\r\n`isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\r\n`isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\r\n`isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\r\n`last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\r\n`now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\r\n`reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\r\n`snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\r\n`startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\r\n`unescape`, `uniqueId`, `value`, and `words`\r\n<br>\r\n<br>\r\nThe wrapper method `sample` will return a wrapped value when `n` is provided,\r\notherwise an unwrapped value is returned.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to wrap in a `lodash` instance.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the new `lodash` wrapper instance.\r\n\r\n#### Example\r\n```js\r\nvar wrapped = _([1, 2, 3]);\r\n\r\n// returns an unwrapped value\r\nwrapped.reduce(function(total, n) {\r\n  return total + n;\r\n});\r\n// => 6\r\n\r\n// returns a wrapped value\r\nvar squares = wrapped.map(function(n) {\r\n  return n * n;\r\n});\r\n\r\n_.isArray(squares);\r\n// => false\r\n\r\n_.isArray(squares.value());\r\n// => true\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_chainvalue\"></a>`_.chain(value)`\r\n<a href=\"#_chainvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6025 \"View in source\") [&#x24C9;][1]\r\n\r\nCreates a `lodash` object that wraps `value` with explicit method\r\nchaining enabled.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to wrap.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the new `lodash` wrapper instance.\r\n\r\n#### Example\r\n```js\r\nvar users = [\r\n  { 'user': 'barney',  'age': 36 },\r\n  { 'user': 'fred',    'age': 40 },\r\n  { 'user': 'pebbles', 'age': 1 }\r\n];\r\n\r\nvar youngest = _.chain(users)\r\n  .sortBy('age')\r\n  .map(function(chr) {\r\n    return chr.user + ' is ' + chr.age;\r\n  })\r\n  .first()\r\n  .value();\r\n// => 'pebbles is 1'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_tapvalue-interceptor-thisarg\"></a>`_.tap(value, interceptor, [thisArg])`\r\n<a href=\"#_tapvalue-interceptor-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6054 \"View in source\") [&#x24C9;][1]\r\n\r\nThis method invokes `interceptor` and returns `value`. The interceptor is\r\nbound to `thisArg` and invoked with one argument; (value). The purpose of\r\nthis method is to \"tap into\" a method chain in order to perform operations\r\non intermediate results within the chain.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to provide to `interceptor`.\r\n2. `interceptor` *(Function)*: The function to invoke.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `interceptor`.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns `value`.\r\n\r\n#### Example\r\n```js\r\n_([1, 2, 3])\r\n .tap(function(array) {\r\n   array.pop();\r\n })\r\n .reverse()\r\n .value();\r\n// => [2, 1]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_thruvalue-interceptor-thisarg\"></a>`_.thru(value, interceptor, [thisArg])`\r\n<a href=\"#_thruvalue-interceptor-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6080 \"View in source\") [&#x24C9;][1]\r\n\r\nThis method is like `_.tap` except that it returns the result of `interceptor`.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to provide to `interceptor`.\r\n2. `interceptor` *(Function)*: The function to invoke.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `interceptor`.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the result of `interceptor`.\r\n\r\n#### Example\r\n```js\r\n_('  abc  ')\r\n .chain()\r\n .trim()\r\n .thru(function(value) {\r\n   return [value];\r\n })\r\n .value();\r\n// => ['abc']\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_prototypechain\"></a>`_.prototype.chain()`\r\n<a href=\"#_prototypechain\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6109 \"View in source\") [&#x24C9;][1]\r\n\r\nEnables explicit method chaining on the wrapper object.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the new `lodash` wrapper instance.\r\n\r\n#### Example\r\n```js\r\nvar users = [\r\n  { 'user': 'barney', 'age': 36 },\r\n  { 'user': 'fred',   'age': 40 }\r\n];\r\n\r\n// without explicit chaining\r\n_(users).first();\r\n// => { 'user': 'barney', 'age': 36 }\r\n\r\n// with explicit chaining\r\n_(users).chain()\r\n  .first()\r\n  .pick('user')\r\n  .value();\r\n// => { 'user': 'barney' }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_prototypecommit\"></a>`_.prototype.commit()`\r\n<a href=\"#_prototypecommit\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6138 \"View in source\") [&#x24C9;][1]\r\n\r\nExecutes the chained sequence and returns the wrapped result.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the new `lodash` wrapper instance.\r\n\r\n#### Example\r\n```js\r\nvar array = [1, 2];\r\nvar wrapped = _(array).push(3);\r\n\r\nconsole.log(array);\r\n// => [1, 2]\r\n\r\nwrapped = wrapped.commit();\r\nconsole.log(array);\r\n// => [1, 2, 3]\r\n\r\nwrapped.last();\r\n// => 3\r\n\r\nconsole.log(array);\r\n// => [1, 2, 3]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_prototypeconcatvalues\"></a>`_.prototype.concat([values])`\r\n<a href=\"#_prototypeconcatvalues\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6162 \"View in source\") [&#x24C9;][1]\r\n\r\nCreates a new array joining a wrapped array with any additional arrays\r\nand/or values.\r\n\r\n#### Arguments\r\n1. `[values]` *(...&#42;)*: The values to concatenate.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new concatenated array.\r\n\r\n#### Example\r\n```js\r\nvar array = [1];\r\nvar wrapped = _(array).concat(2, [3], [[4]]);\r\n\r\nconsole.log(wrapped.value());\r\n// => [1, 2, 3, [4]]\r\n\r\nconsole.log(array);\r\n// => [1]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_prototypeplant\"></a>`_.prototype.plant()`\r\n<a href=\"#_prototypeplant\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6192 \"View in source\") [&#x24C9;][1]\r\n\r\nCreates a clone of the chained sequence planting `value` as the wrapped value.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the new `lodash` wrapper instance.\r\n\r\n#### Example\r\n```js\r\nvar array = [1, 2];\r\nvar wrapped = _(array).map(function(value) {\r\n  return Math.pow(value, 2);\r\n});\r\n\r\nvar other = [3, 4];\r\nvar otherWrapped = wrapped.plant(other);\r\n\r\notherWrapped.value();\r\n// => [9, 16]\r\n\r\nwrapped.value();\r\n// => [1, 4]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_prototypereverse\"></a>`_.prototype.reverse()`\r\n<a href=\"#_prototypereverse\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6230 \"View in source\") [&#x24C9;][1]\r\n\r\nReverses the wrapped array so the first element becomes the last, the\r\nsecond element becomes the second to last, and so on.\r\n<br>\r\n<br>\r\n**Note:** This method mutates the wrapped array.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the new reversed `lodash` wrapper instance.\r\n\r\n#### Example\r\n```js\r\nvar array = [1, 2, 3];\r\n\r\n_(array).reverse().value()\r\n// => [3, 2, 1]\r\n\r\nconsole.log(array);\r\n// => [3, 2, 1]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_prototypetostring\"></a>`_.prototype.toString()`\r\n<a href=\"#_prototypetostring\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6260 \"View in source\") [&#x24C9;][1]\r\n\r\nProduces the result of coercing the unwrapped value to a string.\r\n\r\n#### Returns\r\n*(string)*:  Returns the coerced string value.\r\n\r\n#### Example\r\n```js\r\n_([1, 2, 3]).toString();\r\n// => '1,2,3'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_prototypevalue\"></a>`_.prototype.value()`\r\n<a href=\"#_prototypevalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6277 \"View in source\") [&#x24C9;][1]\r\n\r\nExecutes the chained sequence to extract the unwrapped value.\r\n\r\n#### Aliases\r\n*_.prototype.run, _.prototype.toJSON, _.prototype.valueOf*\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the resolved unwrapped value.\r\n\r\n#### Example\r\n```js\r\n_([1, 2, 3]).value();\r\n// => [1, 2, 3]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `“Collection” Methods`\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_atcollection-props\"></a>`_.at(collection, [props])`\r\n<a href=\"#_atcollection-props\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6303 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.at \"See the npm package\")\r\n\r\nCreates an array of elements corresponding to the given keys, or indexes,\r\nof `collection`. Keys may be specified as individual arguments or as arrays\r\nof keys.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[props]` *(...(number|number&#91;&#93;|string|string&#91;&#93;)*: The property names or indexes of elements to pick, specified individually or in arrays.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new array of picked elements.\r\n\r\n#### Example\r\n```js\r\n_.at(['a', 'b', 'c'], [0, 2]);\r\n// => ['a', 'c']\r\n\r\n_.at(['barney', 'fred', 'pebbles'], 0, 2);\r\n// => ['barney', 'pebbles']\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_countbycollection-iteratee_identity-thisarg\"></a>`_.countBy(collection, [iteratee=_.identity], [thisArg])`\r\n<a href=\"#_countbycollection-iteratee_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6351 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.countby \"See the npm package\")\r\n\r\nCreates an object composed of keys generated from the results of running\r\neach element of `collection` through `iteratee`. The corresponding value\r\nof each key is the number of times the key was returned by `iteratee`.\r\nThe `iteratee` is bound to `thisArg` and invoked with three arguments:<br>\r\n(value, index|key, collection).\r\n<br>\r\n<br>\r\nIf a property name is provided for `iteratee` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `iteratee` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[iteratee=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the composed aggregate object.\r\n\r\n#### Example\r\n```js\r\n_.countBy([4.3, 6.1, 6.4], function(n) {\r\n  return Math.floor(n);\r\n});\r\n// => { '4': 1, '6': 2 }\r\n\r\n_.countBy([4.3, 6.1, 6.4], function(n) {\r\n  return this.floor(n);\r\n}, Math);\r\n// => { '4': 1, '6': 2 }\r\n\r\n_.countBy(['one', 'two', 'three'], 'length');\r\n// => { '3': 2, '5': 1 }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_everycollection-predicate_identity-thisarg\"></a>`_.every(collection, [predicate=_.identity], [thisArg])`\r\n<a href=\"#_everycollection-predicate_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6403 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.every \"See the npm package\")\r\n\r\nChecks if `predicate` returns truthy for **all** elements of `collection`.\r\nThe predicate is bound to `thisArg` and invoked with three arguments:<br>\r\n(value, index|key, collection).\r\n<br>\r\n<br>\r\nIf a property name is provided for `predicate` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `predicate` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Aliases\r\n*_.all*\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[predicate=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if all elements pass the predicate check,\r\nelse `false`.\r\n\r\n#### Example\r\n```js\r\n_.every([true, 1, null, 'yes'], Boolean);\r\n// => false\r\n\r\nvar users = [\r\n  { 'user': 'barney', 'active': false },\r\n  { 'user': 'fred',   'active': false }\r\n];\r\n\r\n// using the `_.matches` callback shorthand\r\n_.every(users, { 'user': 'barney', 'active': false });\r\n// => false\r\n\r\n// using the `_.matchesProperty` callback shorthand\r\n_.every(users, 'active', false);\r\n// => true\r\n\r\n// using the `_.property` callback shorthand\r\n_.every(users, 'active');\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_filtercollection-predicate_identity-thisarg\"></a>`_.filter(collection, [predicate=_.identity], [thisArg])`\r\n<a href=\"#_filtercollection-predicate_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6463 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.filter \"See the npm package\")\r\n\r\nIterates over elements of `collection`, returning an array of all elements\r\n`predicate` returns truthy for. The predicate is bound to `thisArg` and\r\ninvoked with three arguments: (value, index|key, collection).\r\n<br>\r\n<br>\r\nIf a property name is provided for `predicate` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `predicate` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Aliases\r\n*_.select*\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[predicate=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new filtered array.\r\n\r\n#### Example\r\n```js\r\n_.filter([4, 5, 6], function(n) {\r\n  return n % 2 == 0;\r\n});\r\n// => [4, 6]\r\n\r\nvar users = [\r\n  { 'user': 'barney', 'age': 36, 'active': true },\r\n  { 'user': 'fred',   'age': 40, 'active': false }\r\n];\r\n\r\n// using the `_.matches` callback shorthand\r\n_.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\r\n// => ['barney']\r\n\r\n// using the `_.matchesProperty` callback shorthand\r\n_.pluck(_.filter(users, 'active', false), 'user');\r\n// => ['fred']\r\n\r\n// using the `_.property` callback shorthand\r\n_.pluck(_.filter(users, 'active'), 'user');\r\n// => ['barney']\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_findcollection-predicate_identity-thisarg\"></a>`_.find(collection, [predicate=_.identity], [thisArg])`\r\n<a href=\"#_findcollection-predicate_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6519 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.find \"See the npm package\")\r\n\r\nIterates over elements of `collection`, returning the first element\r\n`predicate` returns truthy for. The predicate is bound to `thisArg` and\r\ninvoked with three arguments: (value, index|key, collection).\r\n<br>\r\n<br>\r\nIf a property name is provided for `predicate` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `predicate` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Aliases\r\n*_.detect*\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to search.\r\n2. `[predicate=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the matched element, else `undefined`.\r\n\r\n#### Example\r\n```js\r\nvar users = [\r\n  { 'user': 'barney',  'age': 36, 'active': true },\r\n  { 'user': 'fred',    'age': 40, 'active': false },\r\n  { 'user': 'pebbles', 'age': 1,  'active': true }\r\n];\r\n\r\n_.result(_.find(users, function(chr) {\r\n  return chr.age < 40;\r\n}), 'user');\r\n// => 'barney'\r\n\r\n// using the `_.matches` callback shorthand\r\n_.result(_.find(users, { 'age': 1, 'active': true }), 'user');\r\n// => 'pebbles'\r\n\r\n// using the `_.matchesProperty` callback shorthand\r\n_.result(_.find(users, 'active', false), 'user');\r\n// => 'fred'\r\n\r\n// using the `_.property` callback shorthand\r\n_.result(_.find(users, 'active'), 'user');\r\n// => 'barney'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_findlastcollection-predicate_identity-thisarg\"></a>`_.findLast(collection, [predicate=_.identity], [thisArg])`\r\n<a href=\"#_findlastcollection-predicate_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6540 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.findlast \"See the npm package\")\r\n\r\nThis method is like `_.find` except that it iterates over elements of\r\n`collection` from right to left.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to search.\r\n2. `[predicate=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the matched element, else `undefined`.\r\n\r\n#### Example\r\n```js\r\n_.findLast([1, 2, 3, 4], function(n) {\r\n  return n % 2 == 1;\r\n});\r\n// => 3\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_findwherecollection-source\"></a>`_.findWhere(collection, source)`\r\n<a href=\"#_findwherecollection-source\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6571 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.findwhere \"See the npm package\")\r\n\r\nPerforms a deep comparison between each element in `collection` and the\r\nsource object, returning the first element that has equivalent property\r\nvalues.\r\n<br>\r\n<br>\r\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\r\nnumbers, `Object` objects, regexes, and strings. Objects are compared by\r\ntheir own, not inherited, enumerable properties. For comparing a single\r\nown or inherited property value see `_.matchesProperty`.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to search.\r\n2. `source` *(Object)*: The object of property values to match.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the matched element, else `undefined`.\r\n\r\n#### Example\r\n```js\r\nvar users = [\r\n  { 'user': 'barney', 'age': 36, 'active': true },\r\n  { 'user': 'fred',   'age': 40, 'active': false }\r\n];\r\n\r\n_.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\r\n// => 'barney'\r\n\r\n_.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\r\n// => 'fred'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_foreachcollection-iteratee_identity-thisarg\"></a>`_.forEach(collection, [iteratee=_.identity], [thisArg])`\r\n<a href=\"#_foreachcollection-iteratee_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6605 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.foreach \"See the npm package\")\r\n\r\nIterates over elements of `collection` invoking `iteratee` for each element.\r\nThe `iteratee` is bound to `thisArg` and invoked with three arguments:<br>\r\n(value, index|key, collection). Iteratee functions may exit iteration early\r\nby explicitly returning `false`.\r\n<br>\r\n<br>\r\n**Note:** As with other \"Collections\" methods, objects with a \"length\" property\r\nare iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\r\nmay be used for object iteration.\r\n\r\n#### Aliases\r\n*_.each*\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[iteratee=_.identity]` *(Function)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Array|Object|string)*:  Returns `collection`.\r\n\r\n#### Example\r\n```js\r\n_([1, 2]).forEach(function(n) {\r\n  console.log(n);\r\n}).value();\r\n// => logs each value from left to right and returns the array\r\n\r\n_.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\r\n  console.log(n, key);\r\n});\r\n// => logs each value-key pair and returns the object (iteration order is not guaranteed)\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_foreachrightcollection-iteratee_identity-thisarg\"></a>`_.forEachRight(collection, [iteratee=_.identity], [thisArg])`\r\n<a href=\"#_foreachrightcollection-iteratee_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6626 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.foreachright \"See the npm package\")\r\n\r\nThis method is like `_.forEach` except that it iterates over elements of\r\n`collection` from right to left.\r\n\r\n#### Aliases\r\n*_.eachRight*\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[iteratee=_.identity]` *(Function)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Array|Object|string)*:  Returns `collection`.\r\n\r\n#### Example\r\n```js\r\n_([1, 2]).forEachRight(function(n) {\r\n  console.log(n);\r\n}).value();\r\n// => logs each value from right to left and returns the array\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_groupbycollection-iteratee_identity-thisarg\"></a>`_.groupBy(collection, [iteratee=_.identity], [thisArg])`\r\n<a href=\"#_groupbycollection-iteratee_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6670 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.groupby \"See the npm package\")\r\n\r\nCreates an object composed of keys generated from the results of running\r\neach element of `collection` through `iteratee`. The corresponding value\r\nof each key is an array of the elements responsible for generating the key.\r\nThe `iteratee` is bound to `thisArg` and invoked with three arguments:<br>\r\n(value, index|key, collection).\r\n<br>\r\n<br>\r\nIf a property name is provided for `iteratee` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `iteratee` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[iteratee=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the composed aggregate object.\r\n\r\n#### Example\r\n```js\r\n_.groupBy([4.2, 6.1, 6.4], function(n) {\r\n  return Math.floor(n);\r\n});\r\n// => { '4': [4.2], '6': [6.1, 6.4] }\r\n\r\n_.groupBy([4.2, 6.1, 6.4], function(n) {\r\n  return this.floor(n);\r\n}, Math);\r\n// => { '4': [4.2], '6': [6.1, 6.4] }\r\n\r\n// using the `_.property` callback shorthand\r\n_.groupBy(['one', 'two', 'three'], 'length');\r\n// => { '3': ['one', 'two'], '5': ['three'] }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_includescollection-target-fromindex0\"></a>`_.includes(collection, target, [fromIndex=0])`\r\n<a href=\"#_includescollection-target-fromindex0\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6707 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.includes \"See the npm package\")\r\n\r\nChecks if `target` is in `collection` using\r\n[`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\r\nfor equality comparisons. If `fromIndex` is negative, it's used as the offset\r\nfrom the end of `collection`.\r\n\r\n#### Aliases\r\n*_.contains, _.include*\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to search.\r\n2. `target` *(&#42;)*: The value to search for.\r\n3. `[fromIndex=0]` *(number)*: The index to search from.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if a matching element is found, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.includes([1, 2, 3], 1);\r\n// => true\r\n\r\n_.includes([1, 2, 3], 1, 2);\r\n// => false\r\n\r\n_.includes({ 'user': 'fred', 'age': 40 }, 'fred');\r\n// => true\r\n\r\n_.includes('pebbles', 'eb');\r\n// => true\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_indexbycollection-iteratee_identity-thisarg\"></a>`_.indexBy(collection, [iteratee=_.identity], [thisArg])`\r\n<a href=\"#_indexbycollection-iteratee_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6769 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.indexby \"See the npm package\")\r\n\r\nCreates an object composed of keys generated from the results of running\r\neach element of `collection` through `iteratee`. The corresponding value\r\nof each key is the last element responsible for generating the key. The\r\niteratee function is bound to `thisArg` and invoked with three arguments:<br>\r\n(value, index|key, collection).\r\n<br>\r\n<br>\r\nIf a property name is provided for `iteratee` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `iteratee` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[iteratee=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the composed aggregate object.\r\n\r\n#### Example\r\n```js\r\nvar keyData = [\r\n  { 'dir': 'left', 'code': 97 },\r\n  { 'dir': 'right', 'code': 100 }\r\n];\r\n\r\n_.indexBy(keyData, 'dir');\r\n// => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\r\n\r\n_.indexBy(keyData, function(object) {\r\n  return String.fromCharCode(object.code);\r\n});\r\n// => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\r\n\r\n_.indexBy(keyData, function(object) {\r\n  return this.fromCharCode(object.code);\r\n}, String);\r\n// => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_invokecollection-path-args\"></a>`_.invoke(collection, path, [args])`\r\n<a href=\"#_invokecollection-path-args\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6795 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.invoke \"See the npm package\")\r\n\r\nInvokes the method at `path` of each element in `collection`, returning\r\nan array of the results of each invoked method. Any additional arguments\r\nare provided to each invoked method. If `methodName` is a function it's\r\ninvoked for, and `this` bound to, each element in `collection`.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `path` *(Array|Function|string)*: The path of the method to invoke or the function invoked per iteration.\r\n3. `[args]` *(...&#42;)*: The arguments to invoke the method with.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the array of results.\r\n\r\n#### Example\r\n```js\r\n_.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\r\n// => [[1, 5, 7], [1, 2, 3]]\r\n\r\n_.invoke([123, 456], String.prototype.split, '');\r\n// => [['1', '2', '3'], ['4', '5', '6']]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_mapcollection-iteratee_identity-thisarg\"></a>`_.map(collection, [iteratee=_.identity], [thisArg])`\r\n<a href=\"#_mapcollection-iteratee_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6864 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.map \"See the npm package\")\r\n\r\nCreates an array of values by running each element in `collection` through\r\n`iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\r\narguments: (value, index|key, collection).\r\n<br>\r\n<br>\r\nIf a property name is provided for `iteratee` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `iteratee` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n<br>\r\n<br>\r\nMany lodash methods are guarded to work as iteratees for methods like\r\n`_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\r\n<br>\r\n<br>\r\nThe guarded methods are:<br>\r\n`ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\r\n`drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\r\n`parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\r\n`trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\r\n`sum`, `uniq`, and `words`\r\n\r\n#### Aliases\r\n*_.collect*\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[iteratee=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new mapped array.\r\n\r\n#### Example\r\n```js\r\nfunction timesThree(n) {\r\n  return n * 3;\r\n}\r\n\r\n_.map([1, 2], timesThree);\r\n// => [3, 6]\r\n\r\n_.map({ 'a': 1, 'b': 2 }, timesThree);\r\n// => [3, 6] (iteration order is not guaranteed)\r\n\r\nvar users = [\r\n  { 'user': 'barney' },\r\n  { 'user': 'fred' }\r\n];\r\n\r\n// using the `_.property` callback shorthand\r\n_.map(users, 'user');\r\n// => ['barney', 'fred']\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_partitioncollection-predicate_identity-thisarg\"></a>`_.partition(collection, [predicate=_.identity], [thisArg])`\r\n<a href=\"#_partitioncollection-predicate_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6929 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.partition \"See the npm package\")\r\n\r\nCreates an array of elements split into two groups, the first of which\r\ncontains elements `predicate` returns truthy for, while the second of which\r\ncontains elements `predicate` returns falsey for. The predicate is bound\r\nto `thisArg` and invoked with three arguments: (value, index|key, collection).\r\n<br>\r\n<br>\r\nIf a property name is provided for `predicate` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `predicate` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[predicate=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the array of grouped elements.\r\n\r\n#### Example\r\n```js\r\n_.partition([1, 2, 3], function(n) {\r\n  return n % 2;\r\n});\r\n// => [[1, 3], [2]]\r\n\r\n_.partition([1.2, 2.3, 3.4], function(n) {\r\n  return this.floor(n) % 2;\r\n}, Math);\r\n// => [[1.2, 3.4], [2.3]]\r\n\r\nvar users = [\r\n  { 'user': 'barney',  'age': 36, 'active': false },\r\n  { 'user': 'fred',    'age': 40, 'active': true },\r\n  { 'user': 'pebbles', 'age': 1,  'active': false }\r\n];\r\n\r\nvar mapper = function(array) {\r\n  return _.pluck(array, 'user');\r\n};\r\n\r\n// using the `_.matches` callback shorthand\r\n_.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\r\n// => [['pebbles'], ['barney', 'fred']]\r\n\r\n// using the `_.matchesProperty` callback shorthand\r\n_.map(_.partition(users, 'active', false), mapper);\r\n// => [['barney', 'pebbles'], ['fred']]\r\n\r\n// using the `_.property` callback shorthand\r\n_.map(_.partition(users, 'active'), mapper);\r\n// => [['fred'], ['barney', 'pebbles']]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_pluckcollection-path\"></a>`_.pluck(collection, path)`\r\n<a href=\"#_pluckcollection-path\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6956 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.pluck \"See the npm package\")\r\n\r\nGets the property value of `path` from all elements in `collection`.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `path` *(Array|string)*: The path of the property to pluck.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the property values.\r\n\r\n#### Example\r\n```js\r\nvar users = [\r\n  { 'user': 'barney', 'age': 36 },\r\n  { 'user': 'fred',   'age': 40 }\r\n];\r\n\r\n_.pluck(users, 'user');\r\n// => ['barney', 'fred']\r\n\r\nvar userIndex = _.indexBy(users, 'user');\r\n_.pluck(userIndex, 'age');\r\n// => [36, 40] (iteration order is not guaranteed)\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_reducecollection-iteratee_identity-accumulator-thisarg\"></a>`_.reduce(collection, [iteratee=_.identity], [accumulator], [thisArg])`\r\n<a href=\"#_reducecollection-iteratee_identity-accumulator-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L6997 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.reduce \"See the npm package\")\r\n\r\nReduces `collection` to a value which is the accumulated result of running\r\neach element in `collection` through `iteratee`, where each successive\r\ninvocation is supplied the return value of the previous. If `accumulator`\r\nis not provided the first element of `collection` is used as the initial\r\nvalue. The `iteratee` is bound to `thisArg` and invoked with four arguments:<br>\r\n(accumulator, value, index|key, collection).\r\n<br>\r\n<br>\r\nMany lodash methods are guarded to work as iteratees for methods like\r\n`_.reduce`, `_.reduceRight`, and `_.transform`.\r\n<br>\r\n<br>\r\nThe guarded methods are:<br>\r\n`assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\r\nand `sortByOrder`\r\n\r\n#### Aliases\r\n*_.foldl, _.inject*\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[iteratee=_.identity]` *(Function)*: The function invoked per iteration.\r\n3. `[accumulator]` *(&#42;)*: The initial value.\r\n4. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the accumulated value.\r\n\r\n#### Example\r\n```js\r\n_.reduce([1, 2], function(total, n) {\r\n  return total + n;\r\n});\r\n// => 3\r\n\r\n_.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\r\n  result[key] = n * 3;\r\n  return result;\r\n}, {});\r\n// => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_reducerightcollection-iteratee_identity-accumulator-thisarg\"></a>`_.reduceRight(collection, [iteratee=_.identity], [accumulator], [thisArg])`\r\n<a href=\"#_reducerightcollection-iteratee_identity-accumulator-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7021 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.reduceright \"See the npm package\")\r\n\r\nThis method is like `_.reduce` except that it iterates over elements of\r\n`collection` from right to left.\r\n\r\n#### Aliases\r\n*_.foldr*\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[iteratee=_.identity]` *(Function)*: The function invoked per iteration.\r\n3. `[accumulator]` *(&#42;)*: The initial value.\r\n4. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the accumulated value.\r\n\r\n#### Example\r\n```js\r\nvar array = [[0, 1], [2, 3], [4, 5]];\r\n\r\n_.reduceRight(array, function(flattened, other) {\r\n  return flattened.concat(other);\r\n}, []);\r\n// => [4, 5, 2, 3, 0, 1]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_rejectcollection-predicate_identity-thisarg\"></a>`_.reject(collection, [predicate=_.identity], [thisArg])`\r\n<a href=\"#_rejectcollection-predicate_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7059 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.reject \"See the npm package\")\r\n\r\nThe opposite of `_.filter`; this method returns the elements of `collection`\r\nthat `predicate` does **not** return truthy for.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[predicate=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new filtered array.\r\n\r\n#### Example\r\n```js\r\n_.reject([1, 2, 3, 4], function(n) {\r\n  return n % 2 == 0;\r\n});\r\n// => [1, 3]\r\n\r\nvar users = [\r\n  { 'user': 'barney', 'age': 36, 'active': false },\r\n  { 'user': 'fred',   'age': 40, 'active': true }\r\n];\r\n\r\n// using the `_.matches` callback shorthand\r\n_.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\r\n// => ['barney']\r\n\r\n// using the `_.matchesProperty` callback shorthand\r\n_.pluck(_.reject(users, 'active', false), 'user');\r\n// => ['fred']\r\n\r\n// using the `_.property` callback shorthand\r\n_.pluck(_.reject(users, 'active'), 'user');\r\n// => ['barney']\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_samplecollection-n\"></a>`_.sample(collection, [n])`\r\n<a href=\"#_samplecollection-n\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7085 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.sample \"See the npm package\")\r\n\r\nGets a random element or `n` random elements from a collection.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to sample.\r\n2. `[n]` *(number)*: The number of elements to sample.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the random sample(s).\r\n\r\n#### Example\r\n```js\r\n_.sample([1, 2, 3, 4]);\r\n// => 2\r\n\r\n_.sample([1, 2, 3, 4], 2);\r\n// => [3, 1]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_shufflecollection\"></a>`_.shuffle(collection)`\r\n<a href=\"#_shufflecollection\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7122 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.shuffle \"See the npm package\")\r\n\r\nCreates an array of shuffled values, using a version of the\r\n[Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to shuffle.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new shuffled array.\r\n\r\n#### Example\r\n```js\r\n_.shuffle([1, 2, 3, 4]);\r\n// => [4, 1, 3, 2]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_sizecollection\"></a>`_.size(collection)`\r\n<a href=\"#_sizecollection\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7146 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.size \"See the npm package\")\r\n\r\nGets the size of `collection` by returning its length for array-like\r\nvalues or the number of own enumerable properties for objects.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to inspect.\r\n\r\n#### Returns\r\n*(number)*:  Returns the size of `collection`.\r\n\r\n#### Example\r\n```js\r\n_.size([1, 2, 3]);\r\n// => 3\r\n\r\n_.size({ 'a': 1, 'b': 2 });\r\n// => 2\r\n\r\n_.size('pebbles');\r\n// => 7\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_somecollection-predicate_identity-thisarg\"></a>`_.some(collection, [predicate=_.identity], [thisArg])`\r\n<a href=\"#_somecollection-predicate_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7200 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.some \"See the npm package\")\r\n\r\nChecks if `predicate` returns truthy for **any** element of `collection`.\r\nThe function returns as soon as it finds a passing value and does not iterate\r\nover the entire collection. The predicate is bound to `thisArg` and invoked\r\nwith three arguments: (value, index|key, collection).\r\n<br>\r\n<br>\r\nIf a property name is provided for `predicate` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `predicate` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Aliases\r\n*_.any*\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[predicate=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if any element passes the predicate check,\r\nelse `false`.\r\n\r\n#### Example\r\n```js\r\n_.some([null, 0, 'yes', false], Boolean);\r\n// => true\r\n\r\nvar users = [\r\n  { 'user': 'barney', 'active': true },\r\n  { 'user': 'fred',   'active': false }\r\n];\r\n\r\n// using the `_.matches` callback shorthand\r\n_.some(users, { 'user': 'barney', 'active': false });\r\n// => false\r\n\r\n// using the `_.matchesProperty` callback shorthand\r\n_.some(users, 'active', false);\r\n// => true\r\n\r\n// using the `_.property` callback shorthand\r\n_.some(users, 'active');\r\n// => true\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_sortbycollection-iteratee_identity-thisarg\"></a>`_.sortBy(collection, [iteratee=_.identity], [thisArg])`\r\n<a href=\"#_sortbycollection-iteratee_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7259 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.sortby \"See the npm package\")\r\n\r\nCreates an array of elements, sorted in ascending order by the results of\r\nrunning each element in a collection through `iteratee`. This method performs\r\na stable sort, that is, it preserves the original sort order of equal elements.\r\nThe `iteratee` is bound to `thisArg` and invoked with three arguments:<br>\r\n(value, index|key, collection).\r\n<br>\r\n<br>\r\nIf a property name is provided for `iteratee` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `iteratee` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[iteratee=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new sorted array.\r\n\r\n#### Example\r\n```js\r\n_.sortBy([1, 2, 3], function(n) {\r\n  return Math.sin(n);\r\n});\r\n// => [3, 1, 2]\r\n\r\n_.sortBy([1, 2, 3], function(n) {\r\n  return this.sin(n);\r\n}, Math);\r\n// => [3, 1, 2]\r\n\r\nvar users = [\r\n  { 'user': 'fred' },\r\n  { 'user': 'pebbles' },\r\n  { 'user': 'barney' }\r\n];\r\n\r\n// using the `_.property` callback shorthand\r\n_.pluck(_.sortBy(users, 'user'), 'user');\r\n// => ['barney', 'fred', 'pebbles']\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_sortbyallcollection-iteratees\"></a>`_.sortByAll(collection, iteratees)`\r\n<a href=\"#_sortbyallcollection-iteratees\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7310 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.sortbyall \"See the npm package\")\r\n\r\nThis method is like `_.sortBy` except that it can sort by multiple iteratees\r\nor property names.\r\n<br>\r\n<br>\r\nIf a property name is provided for an iteratee the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf an object is provided for an iteratee the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `iteratees` *(...(Function|Function&#91;&#93;|Object|Object&#91;&#93;|string|string&#91;&#93;)*:  The iteratees to sort by, specified as individual values or arrays of values.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new sorted array.\r\n\r\n#### Example\r\n```js\r\nvar users = [\r\n  { 'user': 'fred',   'age': 48 },\r\n  { 'user': 'barney', 'age': 36 },\r\n  { 'user': 'fred',   'age': 42 },\r\n  { 'user': 'barney', 'age': 34 }\r\n];\r\n\r\n_.map(_.sortByAll(users, ['user', 'age']), _.values);\r\n// => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\r\n\r\n_.map(_.sortByAll(users, 'user', function(chr) {\r\n  return Math.floor(chr.age / 10);\r\n}), _.values);\r\n// => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_sortbyordercollection-iteratees-orders\"></a>`_.sortByOrder(collection, iteratees, [orders])`\r\n<a href=\"#_sortbyordercollection-iteratees-orders\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7355 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.sortbyorder \"See the npm package\")\r\n\r\nThis method is like `_.sortByAll` except that it allows specifying the\r\nsort orders of the iteratees to sort by. If `orders` is unspecified, all\r\nvalues are sorted in ascending order. Otherwise, a value is sorted in\r\nascending order if its corresponding order is \"asc\", and descending if \"desc\".\r\n<br>\r\n<br>\r\nIf a property name is provided for an iteratee the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf an object is provided for an iteratee the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `iteratees` *(Function&#91;&#93;|Object&#91;&#93;|string&#91;&#93;)*: The iteratees to sort by.\r\n3. `[orders]` *(boolean&#91;&#93;)*: The sort orders of `iteratees`.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new sorted array.\r\n\r\n#### Example\r\n```js\r\nvar users = [\r\n  { 'user': 'fred',   'age': 48 },\r\n  { 'user': 'barney', 'age': 34 },\r\n  { 'user': 'fred',   'age': 42 },\r\n  { 'user': 'barney', 'age': 36 }\r\n];\r\n\r\n// sort by `user` in ascending order and by `age` in descending order\r\n_.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\r\n// => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_wherecollection-source\"></a>`_.where(collection, source)`\r\n<a href=\"#_wherecollection-source\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7400 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.where \"See the npm package\")\r\n\r\nPerforms a deep comparison between each element in `collection` and the\r\nsource object, returning an array of all elements that have equivalent\r\nproperty values.\r\n<br>\r\n<br>\r\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\r\nnumbers, `Object` objects, regexes, and strings. Objects are compared by\r\ntheir own, not inherited, enumerable properties. For comparing a single\r\nown or inherited property value see `_.matchesProperty`.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to search.\r\n2. `source` *(Object)*: The object of property values to match.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new filtered array.\r\n\r\n#### Example\r\n```js\r\nvar users = [\r\n  { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\r\n  { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\r\n];\r\n\r\n_.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\r\n// => ['barney']\r\n\r\n_.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\r\n// => ['fred']\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `“Date” Methods`\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_now\"></a>`_.now`\r\n<a href=\"#_now\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7420 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.now \"See the npm package\")\r\n\r\nGets the number of milliseconds that have elapsed since the Unix epoch\r\n(1 January 1970 00:00:00 UTC).\r\n\r\n#### Example\r\n```js\r\n_.defer(function(stamp) {\r\n  console.log(_.now() - stamp);\r\n}, _.now());\r\n// => logs the number of milliseconds it took for the deferred function to be invoked\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `“Function” Methods`\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_aftern-func\"></a>`_.after(n, func)`\r\n<a href=\"#_aftern-func\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7449 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.after \"See the npm package\")\r\n\r\nThe opposite of `_.before`; this method creates a function that invokes\r\n`func` once it's called `n` or more times.\r\n\r\n#### Arguments\r\n1. `n` *(number)*: The number of calls before `func` is invoked.\r\n2. `func` *(Function)*: The function to restrict.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new restricted function.\r\n\r\n#### Example\r\n```js\r\nvar saves = ['profile', 'settings'];\r\n\r\nvar done = _.after(saves.length, function() {\r\n  console.log('done saving!');\r\n});\r\n\r\n_.forEach(saves, function(type) {\r\n  asyncSave({ 'type': type, 'complete': done });\r\n});\r\n// => logs 'done saving!' after the two async saves have completed\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_aryfunc-nfunclength\"></a>`_.ary(func, [n=func.length])`\r\n<a href=\"#_aryfunc-nfunclength\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7483 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.ary \"See the npm package\")\r\n\r\nCreates a function that accepts up to `n` arguments ignoring any\r\nadditional arguments.\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to cap arguments for.\r\n2. `[n=func.length]` *(number)*: The arity cap.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new function.\r\n\r\n#### Example\r\n```js\r\n_.map(['6', '8', '10'], _.ary(parseInt, 1));\r\n// => [6, 8, 10]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_beforen-func\"></a>`_.before(n, func)`\r\n<a href=\"#_beforen-func\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7507 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.before \"See the npm package\")\r\n\r\nCreates a function that invokes `func`, with the `this` binding and arguments\r\nof the created function, while it's called less than `n` times. Subsequent\r\ncalls to the created function return the result of the last `func` invocation.\r\n\r\n#### Arguments\r\n1. `n` *(number)*: The number of calls at which `func` is no longer invoked.\r\n2. `func` *(Function)*: The function to restrict.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new restricted function.\r\n\r\n#### Example\r\n```js\r\njQuery('#add').on('click', _.before(5, addContactToList));\r\n// => allows adding up to 4 contacts to the list\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_bindfunc-thisarg-partials\"></a>`_.bind(func, thisArg, [partials])`\r\n<a href=\"#_bindfunc-thisarg-partials\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7564 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.bind \"See the npm package\")\r\n\r\nCreates a function that invokes `func` with the `this` binding of `thisArg`\r\nand prepends any additional `_.bind` arguments to those provided to the\r\nbound function.\r\n<br>\r\n<br>\r\nThe `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\r\nmay be used as a placeholder for partially applied arguments.\r\n<br>\r\n<br>\r\n**Note:** Unlike native `Function#bind` this method does not set the \"length\"\r\nproperty of bound functions.\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to bind.\r\n2. `thisArg` *(&#42;)*: The `this` binding of `func`.\r\n3. `[partials]` *(...&#42;)*: The arguments to be partially applied.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new bound function.\r\n\r\n#### Example\r\n```js\r\nvar greet = function(greeting, punctuation) {\r\n  return greeting + ' ' + this.user + punctuation;\r\n};\r\n\r\nvar object = { 'user': 'fred' };\r\n\r\nvar bound = _.bind(greet, object, 'hi');\r\nbound('!');\r\n// => 'hi fred!'\r\n\r\n// using placeholders\r\nvar bound = _.bind(greet, object, _, '!');\r\nbound('hi');\r\n// => 'hi fred!'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_bindallobject-methodnames\"></a>`_.bindAll(object, [methodNames])`\r\n<a href=\"#_bindallobject-methodnames\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7601 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.bindall \"See the npm package\")\r\n\r\nBinds methods of an object to the object itself, overwriting the existing\r\nmethod. Method names may be specified as individual arguments or as arrays\r\nof method names. If no method names are provided all enumerable function\r\nproperties, own and inherited, of `object` are bound.\r\n<br>\r\n<br>\r\n**Note:** This method does not set the \"length\" property of bound functions.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to bind and assign the bound methods to.\r\n2. `[methodNames]` *(...(string|string&#91;&#93;)*: The object method names to bind, specified as individual method names or arrays of method names.\r\n\r\n#### Returns\r\n*(Object)*:  Returns `object`.\r\n\r\n#### Example\r\n```js\r\nvar view = {\r\n  'label': 'docs',\r\n  'onClick': function() {\r\n    console.log('clicked ' + this.label);\r\n  }\r\n};\r\n\r\n_.bindAll(view);\r\njQuery('#docs').on('click', view.onClick);\r\n// => logs 'clicked docs' when the element is clicked\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_bindkeyobject-key-partials\"></a>`_.bindKey(object, key, [partials])`\r\n<a href=\"#_bindkeyobject-key-partials\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7658 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.bindkey \"See the npm package\")\r\n\r\nCreates a function that invokes the method at `object[key]` and prepends\r\nany additional `_.bindKey` arguments to those provided to the bound function.\r\n<br>\r\n<br>\r\nThis method differs from `_.bind` by allowing bound functions to reference\r\nmethods that may be redefined or don't yet exist.\r\nSee [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\r\nfor more details.\r\n<br>\r\n<br>\r\nThe `_.bindKey.placeholder` value, which defaults to `_` in monolithic\r\nbuilds, may be used as a placeholder for partially applied arguments.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object the method belongs to.\r\n2. `key` *(string)*: The key of the method.\r\n3. `[partials]` *(...&#42;)*: The arguments to be partially applied.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new bound function.\r\n\r\n#### Example\r\n```js\r\nvar object = {\r\n  'user': 'fred',\r\n  'greet': function(greeting, punctuation) {\r\n    return greeting + ' ' + this.user + punctuation;\r\n  }\r\n};\r\n\r\nvar bound = _.bindKey(object, 'greet', 'hi');\r\nbound('!');\r\n// => 'hi fred!'\r\n\r\nobject.greet = function(greeting, punctuation) {\r\n  return greeting + 'ya ' + this.user + punctuation;\r\n};\r\n\r\nbound('!');\r\n// => 'hiya fred!'\r\n\r\n// using placeholders\r\nvar bound = _.bindKey(object, 'greet', _, '!');\r\nbound('hi');\r\n// => 'hiya fred!'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_curryfunc-arityfunclength\"></a>`_.curry(func, [arity=func.length])`\r\n<a href=\"#_curryfunc-arityfunclength\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7707 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.curry \"See the npm package\")\r\n\r\nCreates a function that accepts one or more arguments of `func` that when\r\ncalled either invokes `func` returning its result, if all `func` arguments\r\nhave been provided, or returns a function that accepts one or more of the\r\nremaining `func` arguments, and so on. The arity of `func` may be specified\r\nif `func.length` is not sufficient.\r\n<br>\r\n<br>\r\nThe `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\r\nmay be used as a placeholder for provided arguments.\r\n<br>\r\n<br>\r\n**Note:** This method does not set the \"length\" property of curried functions.\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to curry.\r\n2. `[arity=func.length]` *(number)*: The arity of `func`.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new curried function.\r\n\r\n#### Example\r\n```js\r\nvar abc = function(a, b, c) {\r\n  return [a, b, c];\r\n};\r\n\r\nvar curried = _.curry(abc);\r\n\r\ncurried(1)(2)(3);\r\n// => [1, 2, 3]\r\n\r\ncurried(1, 2)(3);\r\n// => [1, 2, 3]\r\n\r\ncurried(1, 2, 3);\r\n// => [1, 2, 3]\r\n\r\n// using placeholders\r\ncurried(1)(_, 3)(2);\r\n// => [1, 2, 3]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_curryrightfunc-arityfunclength\"></a>`_.curryRight(func, [arity=func.length])`\r\n<a href=\"#_curryrightfunc-arityfunclength\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7746 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.curryright \"See the npm package\")\r\n\r\nThis method is like `_.curry` except that arguments are applied to `func`\r\nin the manner of `_.partialRight` instead of `_.partial`.\r\n<br>\r\n<br>\r\nThe `_.curryRight.placeholder` value, which defaults to `_` in monolithic\r\nbuilds, may be used as a placeholder for provided arguments.\r\n<br>\r\n<br>\r\n**Note:** This method does not set the \"length\" property of curried functions.\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to curry.\r\n2. `[arity=func.length]` *(number)*: The arity of `func`.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new curried function.\r\n\r\n#### Example\r\n```js\r\nvar abc = function(a, b, c) {\r\n  return [a, b, c];\r\n};\r\n\r\nvar curried = _.curryRight(abc);\r\n\r\ncurried(3)(2)(1);\r\n// => [1, 2, 3]\r\n\r\ncurried(2, 3)(1);\r\n// => [1, 2, 3]\r\n\r\ncurried(1, 2, 3);\r\n// => [1, 2, 3]\r\n\r\n// using placeholders\r\ncurried(3)(1, _)(2);\r\n// => [1, 2, 3]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_debouncefunc-wait0-options\"></a>`_.debounce(func, [wait=0], [options])`\r\n<a href=\"#_debouncefunc-wait0-options\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7811 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.debounce \"See the npm package\")\r\n\r\nCreates a debounced function that delays invoking `func` until after `wait`\r\nmilliseconds have elapsed since the last time the debounced function was\r\ninvoked. The debounced function comes with a `cancel` method to cancel\r\ndelayed invocations. Provide an options object to indicate that `func`\r\nshould be invoked on the leading and/or trailing edge of the `wait` timeout.\r\nSubsequent calls to the debounced function return the result of the last\r\n`func` invocation.\r\n<br>\r\n<br>\r\n**Note:** If `leading` and `trailing` options are `true`, `func` is invoked\r\non the trailing edge of the timeout only if the the debounced function is\r\ninvoked more than once during the `wait` timeout.\r\n<br>\r\n<br>\r\nSee [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\r\nfor details over the differences between `_.debounce` and `_.throttle`.\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to debounce.\r\n2. `[wait=0]` *(number)*: The number of milliseconds to delay.\r\n3. `[options]` *(Object)*: The options object.\r\n4. `[options.leading=false]` *(boolean)*: Specify invoking on the leading edge of the timeout.\r\n5. `[options.maxWait]` *(number)*: The maximum time `func` is allowed to be delayed before it's invoked.\r\n6. `[options.trailing=true]` *(boolean)*: Specify invoking on the trailing edge of the timeout.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new debounced function.\r\n\r\n#### Example\r\n```js\r\n// avoid costly calculations while the window size is in flux\r\njQuery(window).on('resize', _.debounce(calculateLayout, 150));\r\n\r\n// invoke `sendMail` when the click event is fired, debouncing subsequent calls\r\njQuery('#postbox').on('click', _.debounce(sendMail, 300, {\r\n  'leading': true,\r\n  'trailing': false\r\n}));\r\n\r\n// ensure `batchLog` is invoked once after 1 second of debounced calls\r\nvar source = new EventSource('/stream');\r\njQuery(source).on('message', _.debounce(batchLog, 250, {\r\n  'maxWait': 1000\r\n}));\r\n\r\n// cancel a debounced call\r\nvar todoChanges = _.debounce(batchLog, 1000);\r\nObject.observe(models.todo, todoChanges);\r\n\r\nObject.observe(models, function(changes) {\r\n  if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\r\n    todoChanges.cancel();\r\n  }\r\n}, ['delete']);\r\n\r\n// ...at some point `models.todo` is changed\r\nmodels.todo.completed = true;\r\n\r\n// ...before 1 second has passed `models.todo` is deleted\r\n// which cancels the debounced `todoChanges` call\r\ndelete models.todo;\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_deferfunc-args\"></a>`_.defer(func, [args])`\r\n<a href=\"#_deferfunc-args\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7936 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.defer \"See the npm package\")\r\n\r\nDefers invoking the `func` until the current call stack has cleared. Any\r\nadditional arguments are provided to `func` when it's invoked.\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to defer.\r\n2. `[args]` *(...&#42;)*: The arguments to invoke the function with.\r\n\r\n#### Returns\r\n*(number)*:  Returns the timer id.\r\n\r\n#### Example\r\n```js\r\n_.defer(function(text) {\r\n  console.log(text);\r\n}, 'deferred');\r\n// logs 'deferred' after one or more milliseconds\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_delayfunc-wait-args\"></a>`_.delay(func, wait, [args])`\r\n<a href=\"#_delayfunc-wait-args\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7958 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.delay \"See the npm package\")\r\n\r\nInvokes `func` after `wait` milliseconds. Any additional arguments are\r\nprovided to `func` when it's invoked.\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to delay.\r\n2. `wait` *(number)*: The number of milliseconds to delay invocation.\r\n3. `[args]` *(...&#42;)*: The arguments to invoke the function with.\r\n\r\n#### Returns\r\n*(number)*:  Returns the timer id.\r\n\r\n#### Example\r\n```js\r\n_.delay(function(text) {\r\n  console.log(text);\r\n}, 1000, 'later');\r\n// => logs 'later' after one second\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_flowfuncs\"></a>`_.flow([funcs])`\r\n<a href=\"#_flowfuncs\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L7982 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.flow \"See the npm package\")\r\n\r\nCreates a function that returns the result of invoking the provided\r\nfunctions with the `this` binding of the created function, where each\r\nsuccessive invocation is supplied the return value of the previous.\r\n\r\n#### Arguments\r\n1. `[funcs]` *(...Function)*: Functions to invoke.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new function.\r\n\r\n#### Example\r\n```js\r\nfunction square(n) {\r\n  return n * n;\r\n}\r\n\r\nvar addSquare = _.flow(_.add, square);\r\naddSquare(1, 2);\r\n// => 9\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_flowrightfuncs\"></a>`_.flowRight([funcs])`\r\n<a href=\"#_flowrightfuncs\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8004 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.flowright \"See the npm package\")\r\n\r\nThis method is like `_.flow` except that it creates a function that\r\ninvokes the provided functions from right to left.\r\n\r\n#### Aliases\r\n*_.backflow, _.compose*\r\n\r\n#### Arguments\r\n1. `[funcs]` *(...Function)*: Functions to invoke.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new function.\r\n\r\n#### Example\r\n```js\r\nfunction square(n) {\r\n  return n * n;\r\n}\r\n\r\nvar addSquare = _.flowRight(square, _.add);\r\naddSquare(1, 2);\r\n// => 9\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_memoizefunc-resolver\"></a>`_.memoize(func, [resolver])`\r\n<a href=\"#_memoizefunc-resolver\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8057 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.memoize \"See the npm package\")\r\n\r\nCreates a function that memoizes the result of `func`. If `resolver` is\r\nprovided it determines the cache key for storing the result based on the\r\narguments provided to the memoized function. By default, the first argument\r\nprovided to the memoized function is coerced to a string and used as the\r\ncache key. The `func` is invoked with the `this` binding of the memoized\r\nfunction.\r\n<br>\r\n<br>\r\n**Note:** The cache is exposed as the `cache` property on the memoized\r\nfunction. Its creation may be customized by replacing the `_.memoize.Cache`\r\nconstructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\r\nmethod interface of `get`, `has`, and `set`.\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to have its output memoized.\r\n2. `[resolver]` *(Function)*: The function to resolve the cache key.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new memoizing function.\r\n\r\n#### Example\r\n```js\r\nvar upperCase = _.memoize(function(string) {\r\n  return string.toUpperCase();\r\n});\r\n\r\nupperCase('fred');\r\n// => 'FRED'\r\n\r\n// modifying the result cache\r\nupperCase.cache.set('fred', 'BARNEY');\r\nupperCase('fred');\r\n// => 'BARNEY'\r\n\r\n// replacing `_.memoize.Cache`\r\nvar object = { 'user': 'fred' };\r\nvar other = { 'user': 'barney' };\r\nvar identity = _.memoize(_.identity);\r\n\r\nidentity(object);\r\n// => { 'user': 'fred' }\r\nidentity(other);\r\n// => { 'user': 'fred' }\r\n\r\n_.memoize.Cache = WeakMap;\r\nvar identity = _.memoize(_.identity);\r\n\r\nidentity(object);\r\n// => { 'user': 'fred' }\r\nidentity(other);\r\n// => { 'user': 'barney' }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_modargsfunc-transforms\"></a>`_.modArgs(func, [transforms])`\r\n<a href=\"#_modargsfunc-transforms\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8108 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.modargs \"See the npm package\")\r\n\r\nCreates a function that runs each argument through a corresponding\r\ntransform function.\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to wrap.\r\n2. `[transforms]` *(...(Function|Function&#91;&#93;)*: The functions to transform arguments, specified as individual functions or arrays of functions.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new function.\r\n\r\n#### Example\r\n```js\r\nfunction doubled(n) {\r\n  return n * 2;\r\n}\r\n\r\nfunction square(n) {\r\n  return n * n;\r\n}\r\n\r\nvar modded = _.modArgs(function(x, y) {\r\n  return [x, y];\r\n}, square, doubled);\r\n\r\nmodded(1, 2);\r\n// => [1, 4]\r\n\r\nmodded(5, 10);\r\n// => [25, 20]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_negatepredicate\"></a>`_.negate(predicate)`\r\n<a href=\"#_negatepredicate\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8142 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.negate \"See the npm package\")\r\n\r\nCreates a function that negates the result of the predicate `func`. The\r\n`func` predicate is invoked with the `this` binding and arguments of the\r\ncreated function.\r\n\r\n#### Arguments\r\n1. `predicate` *(Function)*: The predicate to negate.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new function.\r\n\r\n#### Example\r\n```js\r\nfunction isEven(n) {\r\n  return n % 2 == 0;\r\n}\r\n\r\n_.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\r\n// => [1, 3, 5]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_oncefunc\"></a>`_.once(func)`\r\n<a href=\"#_oncefunc\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8168 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.once \"See the npm package\")\r\n\r\nCreates a function that is restricted to invoking `func` once. Repeat calls\r\nto the function return the value of the first call. The `func` is invoked\r\nwith the `this` binding and arguments of the created function.\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to restrict.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new restricted function.\r\n\r\n#### Example\r\n```js\r\nvar initialize = _.once(createApplication);\r\ninitialize();\r\ninitialize();\r\n// `initialize` invokes `createApplication` once\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_partialfunc-partials\"></a>`_.partial(func, [partials])`\r\n<a href=\"#_partialfunc-partials\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8204 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.partial \"See the npm package\")\r\n\r\nCreates a function that invokes `func` with `partial` arguments prepended\r\nto those provided to the new function. This method is like `_.bind` except\r\nit does **not** alter the `this` binding.\r\n<br>\r\n<br>\r\nThe `_.partial.placeholder` value, which defaults to `_` in monolithic\r\nbuilds, may be used as a placeholder for partially applied arguments.\r\n<br>\r\n<br>\r\n**Note:** This method does not set the \"length\" property of partially\r\napplied functions.\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to partially apply arguments to.\r\n2. `[partials]` *(...&#42;)*: The arguments to be partially applied.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new partially applied function.\r\n\r\n#### Example\r\n```js\r\nvar greet = function(greeting, name) {\r\n  return greeting + ' ' + name;\r\n};\r\n\r\nvar sayHelloTo = _.partial(greet, 'hello');\r\nsayHelloTo('fred');\r\n// => 'hello fred'\r\n\r\n// using placeholders\r\nvar greetFred = _.partial(greet, _, 'fred');\r\ngreetFred('hi');\r\n// => 'hi fred'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_partialrightfunc-partials\"></a>`_.partialRight(func, [partials])`\r\n<a href=\"#_partialrightfunc-partials\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8237 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.partialright \"See the npm package\")\r\n\r\nThis method is like `_.partial` except that partially applied arguments\r\nare appended to those provided to the new function.\r\n<br>\r\n<br>\r\nThe `_.partialRight.placeholder` value, which defaults to `_` in monolithic\r\nbuilds, may be used as a placeholder for partially applied arguments.\r\n<br>\r\n<br>\r\n**Note:** This method does not set the \"length\" property of partially\r\napplied functions.\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to partially apply arguments to.\r\n2. `[partials]` *(...&#42;)*: The arguments to be partially applied.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new partially applied function.\r\n\r\n#### Example\r\n```js\r\nvar greet = function(greeting, name) {\r\n  return greeting + ' ' + name;\r\n};\r\n\r\nvar greetFred = _.partialRight(greet, 'fred');\r\ngreetFred('hi');\r\n// => 'hi fred'\r\n\r\n// using placeholders\r\nvar sayHelloTo = _.partialRight(greet, 'hello', _);\r\nsayHelloTo('fred');\r\n// => 'hello fred'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_reargfunc-indexes\"></a>`_.rearg(func, indexes)`\r\n<a href=\"#_reargfunc-indexes\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8267 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.rearg \"See the npm package\")\r\n\r\nCreates a function that invokes `func` with arguments arranged according\r\nto the specified indexes where the argument value at the first index is\r\nprovided as the first argument, the argument value at the second index is\r\nprovided as the second argument, and so on.\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to rearrange arguments for.\r\n2. `indexes` *(...(number|number&#91;&#93;)*: The arranged argument indexes, specified as individual indexes or arrays of indexes.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new function.\r\n\r\n#### Example\r\n```js\r\nvar rearged = _.rearg(function(a, b, c) {\r\n  return [a, b, c];\r\n}, 2, 0, 1);\r\n\r\nrearged('b', 'c', 'a')\r\n// => ['a', 'b', 'c']\r\n\r\nvar map = _.rearg(_.map, [1, 0]);\r\nmap(function(n) {\r\n  return n * 3;\r\n}, [1, 2, 3]);\r\n// => [3, 6, 9]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_restparamfunc-startfunclength-1\"></a>`_.restParam(func, [start=func.length-1])`\r\n<a href=\"#_restparamfunc-startfunclength-1\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8293 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.restparam \"See the npm package\")\r\n\r\nCreates a function that invokes `func` with the `this` binding of the\r\ncreated function and arguments from `start` and beyond provided as an array.\r\n<br>\r\n<br>\r\n**Note:** This method is based on the [rest parameter](https://developer.mozilla.org/Web/JavaScript/Reference/Functions/rest_parameters).\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to apply a rest parameter to.\r\n2. `[start=func.length-1]` *(number)*: The start position of the rest parameter.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new function.\r\n\r\n#### Example\r\n```js\r\nvar say = _.restParam(function(what, names) {\r\n  return what + ' ' + _.initial(names).join(', ') +\r\n    (_.size(names) > 1 ? ', & ' : '') + _.last(names);\r\n});\r\n\r\nsay('hello', 'fred', 'barney', 'pebbles');\r\n// => 'hello fred, barney, & pebbles'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_spreadfunc\"></a>`_.spread(func)`\r\n<a href=\"#_spreadfunc\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8353 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.spread \"See the npm package\")\r\n\r\nCreates a function that invokes `func` with the `this` binding of the created\r\nfunction and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\r\n<br>\r\n<br>\r\n**Note:** This method is based on the [spread operator](https://developer.mozilla.org/Web/JavaScript/Reference/Operators/Spread_operator).\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to spread arguments over.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new function.\r\n\r\n#### Example\r\n```js\r\nvar say = _.spread(function(who, what) {\r\n  return who + ' says ' + what;\r\n});\r\n\r\nsay(['fred', 'hello']);\r\n// => 'fred says hello'\r\n\r\n// with a Promise\r\nvar numbers = Promise.all([\r\n  Promise.resolve(40),\r\n  Promise.resolve(36)\r\n]);\r\n\r\nnumbers.then(_.spread(function(x, y) {\r\n  return x + y;\r\n}));\r\n// => a Promise of 76\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_throttlefunc-wait0-options\"></a>`_.throttle(func, [wait=0], [options])`\r\n<a href=\"#_throttlefunc-wait0-options\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8401 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.throttle \"See the npm package\")\r\n\r\nCreates a throttled function that only invokes `func` at most once per\r\nevery `wait` milliseconds. The throttled function comes with a `cancel`\r\nmethod to cancel delayed invocations. Provide an options object to indicate\r\nthat `func` should be invoked on the leading and/or trailing edge of the\r\n`wait` timeout. Subsequent calls to the throttled function return the\r\nresult of the last `func` call.\r\n<br>\r\n<br>\r\n**Note:** If `leading` and `trailing` options are `true`, `func` is invoked\r\non the trailing edge of the timeout only if the the throttled function is\r\ninvoked more than once during the `wait` timeout.\r\n<br>\r\n<br>\r\nSee [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\r\nfor details over the differences between `_.throttle` and `_.debounce`.\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to throttle.\r\n2. `[wait=0]` *(number)*: The number of milliseconds to throttle invocations to.\r\n3. `[options]` *(Object)*: The options object.\r\n4. `[options.leading=true]` *(boolean)*: Specify invoking on the leading edge of the timeout.\r\n5. `[options.trailing=true]` *(boolean)*: Specify invoking on the trailing edge of the timeout.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new throttled function.\r\n\r\n#### Example\r\n```js\r\n// avoid excessively updating the position while scrolling\r\njQuery(window).on('scroll', _.throttle(updatePosition, 100));\r\n\r\n// invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\r\njQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\r\n  'trailing': false\r\n}));\r\n\r\n// cancel a trailing throttled call\r\njQuery(window).on('popstate', throttled.cancel);\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_wrapvalue-wrapper\"></a>`_.wrap(value, wrapper)`\r\n<a href=\"#_wrapvalue-wrapper\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8438 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.wrap \"See the npm package\")\r\n\r\nCreates a function that provides `value` to the wrapper function as its\r\nfirst argument. Any additional arguments provided to the function are\r\nappended to those provided to the wrapper function. The wrapper is invoked\r\nwith the `this` binding of the created function.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to wrap.\r\n2. `wrapper` *(Function)*: The wrapper function.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new function.\r\n\r\n#### Example\r\n```js\r\nvar p = _.wrap(_.escape, function(func, text) {\r\n  return '<p>' + func(text) + '</p>';\r\n});\r\n\r\np('fred, barney, & pebbles');\r\n// => '<p>fred, barney, &amp; pebbles</p>'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `“Lang” Methods`\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_clonevalue-isdeep-customizer-thisarg\"></a>`_.clone(value, [isDeep], [customizer], [thisArg])`\r\n<a href=\"#_clonevalue-isdeep-customizer-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8496 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.clone \"See the npm package\")\r\n\r\nCreates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\r\notherwise they are assigned by reference. If `customizer` is provided it's\r\ninvoked to produce the cloned values. If `customizer` returns `undefined`\r\ncloning is handled by the method instead. The `customizer` is bound to\r\n`thisArg` and invoked with up to three argument; (value [, index|key, object]).\r\n<br>\r\n<br>\r\n**Note:** This method is loosely based on the\r\n[structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\r\nThe enumerable properties of `arguments` objects and objects created by\r\nconstructors other than `Object` are cloned to plain `Object` objects. An\r\nempty object is returned for uncloneable values such as functions, DOM nodes,\r\nMaps, Sets, and WeakMaps.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to clone.\r\n2. `[isDeep]` *(boolean)*: Specify a deep clone.\r\n3. `[customizer]` *(Function)*: The function to customize cloning values.\r\n4. `[thisArg]` *(&#42;)*: The `this` binding of `customizer`.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the cloned value.\r\n\r\n#### Example\r\n```js\r\nvar users = [\r\n  { 'user': 'barney' },\r\n  { 'user': 'fred' }\r\n];\r\n\r\nvar shallow = _.clone(users);\r\nshallow[0] === users[0];\r\n// => true\r\n\r\nvar deep = _.clone(users, true);\r\ndeep[0] === users[0];\r\n// => false\r\n\r\n// using a customizer callback\r\nvar el = _.clone(document.body, function(value) {\r\n  if (_.isElement(value)) {\r\n    return value.cloneNode(false);\r\n  }\r\n});\r\n\r\nel === document.body\r\n// => false\r\nel.nodeName\r\n// => BODY\r\nel.childNodes.length;\r\n// => 0\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_clonedeepvalue-customizer-thisarg\"></a>`_.cloneDeep(value, [customizer], [thisArg])`\r\n<a href=\"#_clonedeepvalue-customizer-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8555 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.clonedeep \"See the npm package\")\r\n\r\nCreates a deep clone of `value`. If `customizer` is provided it's invoked\r\nto produce the cloned values. If `customizer` returns `undefined` cloning\r\nis handled by the method instead. The `customizer` is bound to `thisArg`\r\nand invoked with up to three argument; (value [, index|key, object]).\r\n<br>\r\n<br>\r\n**Note:** This method is loosely based on the\r\n[structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\r\nThe enumerable properties of `arguments` objects and objects created by\r\nconstructors other than `Object` are cloned to plain `Object` objects. An\r\nempty object is returned for uncloneable values such as functions, DOM nodes,\r\nMaps, Sets, and WeakMaps.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to deep clone.\r\n2. `[customizer]` *(Function)*: The function to customize cloning values.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `customizer`.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the deep cloned value.\r\n\r\n#### Example\r\n```js\r\nvar users = [\r\n  { 'user': 'barney' },\r\n  { 'user': 'fred' }\r\n];\r\n\r\nvar deep = _.cloneDeep(users);\r\ndeep[0] === users[0];\r\n// => false\r\n\r\n// using a customizer callback\r\nvar el = _.cloneDeep(document.body, function(value) {\r\n  if (_.isElement(value)) {\r\n    return value.cloneNode(true);\r\n  }\r\n});\r\n\r\nel === document.body\r\n// => false\r\nel.nodeName\r\n// => BODY\r\nel.childNodes.length;\r\n// => 20\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_gtvalue-other\"></a>`_.gt(value, other)`\r\n<a href=\"#_gtvalue-other\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8581 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.gt \"See the npm package\")\r\n\r\nChecks if `value` is greater than `other`.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to compare.\r\n2. `other` *(&#42;)*: The other value to compare.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is greater than `other`, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.gt(3, 1);\r\n// => true\r\n\r\n_.gt(3, 3);\r\n// => false\r\n\r\n_.gt(1, 3);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_gtevalue-other\"></a>`_.gte(value, other)`\r\n<a href=\"#_gtevalue-other\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8605 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.gte \"See the npm package\")\r\n\r\nChecks if `value` is greater than or equal to `other`.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to compare.\r\n2. `other` *(&#42;)*: The other value to compare.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is greater than or equal to `other`, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.gte(3, 1);\r\n// => true\r\n\r\n_.gte(3, 3);\r\n// => true\r\n\r\n_.gte(1, 3);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isargumentsvalue\"></a>`_.isArguments(value)`\r\n<a href=\"#_isargumentsvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8625 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isarguments \"See the npm package\")\r\n\r\nChecks if `value` is classified as an `arguments` object.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is correctly classified, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isArguments(function() { return arguments; }());\r\n// => true\r\n\r\n_.isArguments([1, 2, 3]);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isarrayvalue\"></a>`_.isArray(value)`\r\n<a href=\"#_isarrayvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8646 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isarray \"See the npm package\")\r\n\r\nChecks if `value` is classified as an `Array` object.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is correctly classified, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isArray([1, 2, 3]);\r\n// => true\r\n\r\n_.isArray(function() { return arguments; }());\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isbooleanvalue\"></a>`_.isBoolean(value)`\r\n<a href=\"#_isbooleanvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8666 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isboolean \"See the npm package\")\r\n\r\nChecks if `value` is classified as a boolean primitive or object.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is correctly classified, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isBoolean(false);\r\n// => true\r\n\r\n_.isBoolean(null);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isdatevalue\"></a>`_.isDate(value)`\r\n<a href=\"#_isdatevalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8686 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isdate \"See the npm package\")\r\n\r\nChecks if `value` is classified as a `Date` object.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is correctly classified, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isDate(new Date);\r\n// => true\r\n\r\n_.isDate('Mon April 23 2012');\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_iselementvalue\"></a>`_.isElement(value)`\r\n<a href=\"#_iselementvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8706 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.iselement \"See the npm package\")\r\n\r\nChecks if `value` is a DOM element.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is a DOM element, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isElement(document.body);\r\n// => true\r\n\r\n_.isElement('<body>');\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isemptyvalue\"></a>`_.isEmpty(value)`\r\n<a href=\"#_isemptyvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8737 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isempty \"See the npm package\")\r\n\r\nChecks if `value` is empty. A value is considered empty unless it's an\r\n`arguments` object, array, string, or jQuery-like collection with a length\r\ngreater than `0` or an object with own enumerable properties.\r\n\r\n#### Arguments\r\n1. `value` *(Array|Object|string)*: The value to inspect.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is empty, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isEmpty(null);\r\n// => true\r\n\r\n_.isEmpty(true);\r\n// => true\r\n\r\n_.isEmpty(1);\r\n// => true\r\n\r\n_.isEmpty([1, 2, 3]);\r\n// => false\r\n\r\n_.isEmpty({ 'a': 1 });\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isequalvalue-other-customizer-thisarg\"></a>`_.isEqual(value, other, [customizer], [thisArg])`\r\n<a href=\"#_isequalvalue-other-customizer-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8792 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isequal \"See the npm package\")\r\n\r\nPerforms a deep comparison between two values to determine if they are\r\nequivalent. If `customizer` is provided it's invoked to compare values.\r\nIf `customizer` returns `undefined` comparisons are handled by the method\r\ninstead. The `customizer` is bound to `thisArg` and invoked with up to\r\nthree arguments: (value, other [, index|key]).\r\n<br>\r\n<br>\r\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\r\nnumbers, `Object` objects, regexes, and strings. Objects are compared by\r\ntheir own, not inherited, enumerable properties. Functions and DOM nodes\r\nare **not** supported. Provide a customizer function to extend support\r\nfor comparing other values.\r\n\r\n#### Aliases\r\n*_.eq*\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to compare.\r\n2. `other` *(&#42;)*: The other value to compare.\r\n3. `[customizer]` *(Function)*: The function to customize value comparisons.\r\n4. `[thisArg]` *(&#42;)*: The `this` binding of `customizer`.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if the values are equivalent, else `false`.\r\n\r\n#### Example\r\n```js\r\nvar object = { 'user': 'fred' };\r\nvar other = { 'user': 'fred' };\r\n\r\nobject == other;\r\n// => false\r\n\r\n_.isEqual(object, other);\r\n// => true\r\n\r\n// using a customizer callback\r\nvar array = ['hello', 'goodbye'];\r\nvar other = ['hi', 'goodbye'];\r\n\r\n_.isEqual(array, other, function(value, other) {\r\n  if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\r\n    return true;\r\n  }\r\n});\r\n// => true\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_iserrorvalue\"></a>`_.isError(value)`\r\n<a href=\"#_iserrorvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8815 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.iserror \"See the npm package\")\r\n\r\nChecks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\r\n`SyntaxError`, `TypeError`, or `URIError` object.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is an error object, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isError(new Error);\r\n// => true\r\n\r\n_.isError(Error);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isfinitevalue\"></a>`_.isFinite(value)`\r\n<a href=\"#_isfinitevalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8846 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isfinite \"See the npm package\")\r\n\r\nChecks if `value` is a finite primitive number.\r\n<br>\r\n<br>\r\n**Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is a finite number, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isFinite(10);\r\n// => true\r\n\r\n_.isFinite('10');\r\n// => false\r\n\r\n_.isFinite(true);\r\n// => false\r\n\r\n_.isFinite(Object(10));\r\n// => false\r\n\r\n_.isFinite(Infinity);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isfunctionvalue\"></a>`_.isFunction(value)`\r\n<a href=\"#_isfunctionvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8866 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isfunction \"See the npm package\")\r\n\r\nChecks if `value` is classified as a `Function` object.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is correctly classified, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isFunction(_);\r\n// => true\r\n\r\n_.isFunction(/abc/);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_ismatchobject-source-customizer-thisarg\"></a>`_.isMatch(object, source, [customizer], [thisArg])`\r\n<a href=\"#_ismatchobject-source-customizer-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8939 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.ismatch \"See the npm package\")\r\n\r\nPerforms a deep comparison between `object` and `source` to determine if\r\n`object` contains equivalent property values. If `customizer` is provided\r\nit's invoked to compare values. If `customizer` returns `undefined`\r\ncomparisons are handled by the method instead. The `customizer` is bound\r\nto `thisArg` and invoked with three arguments: (value, other, index|key).\r\n<br>\r\n<br>\r\n**Note:** This method supports comparing properties of arrays, booleans,\r\n`Date` objects, numbers, `Object` objects, regexes, and strings. Functions\r\nand DOM nodes are **not** supported. Provide a customizer function to extend\r\nsupport for comparing other values.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to inspect.\r\n2. `source` *(Object)*: The object of property values to match.\r\n3. `[customizer]` *(Function)*: The function to customize value comparisons.\r\n4. `[thisArg]` *(&#42;)*: The `this` binding of `customizer`.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `object` is a match, else `false`.\r\n\r\n#### Example\r\n```js\r\nvar object = { 'user': 'fred', 'age': 40 };\r\n\r\n_.isMatch(object, { 'age': 40 });\r\n// => true\r\n\r\n_.isMatch(object, { 'age': 36 });\r\n// => false\r\n\r\n// using a customizer callback\r\nvar object = { 'greeting': 'hello' };\r\nvar source = { 'greeting': 'hi' };\r\n\r\n_.isMatch(object, source, function(value, other) {\r\n  return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\r\n});\r\n// => true\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isnanvalue\"></a>`_.isNaN(value)`\r\n<a href=\"#_isnanvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8969 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isnan \"See the npm package\")\r\n\r\nChecks if `value` is `NaN`.\r\n<br>\r\n<br>\r\n**Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\r\nwhich returns `true` for `undefined` and other non-numeric values.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is `NaN`, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isNaN(NaN);\r\n// => true\r\n\r\n_.isNaN(new Number(NaN));\r\n// => true\r\n\r\nisNaN(undefined);\r\n// => true\r\n\r\n_.isNaN(undefined);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isnativevalue\"></a>`_.isNative(value)`\r\n<a href=\"#_isnativevalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8991 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isnative \"See the npm package\")\r\n\r\nChecks if `value` is a native function.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is a native function, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isNative(Array.prototype.push);\r\n// => true\r\n\r\n_.isNative(_);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isnullvalue\"></a>`_.isNull(value)`\r\n<a href=\"#_isnullvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9017 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isnull \"See the npm package\")\r\n\r\nChecks if `value` is `null`.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is `null`, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isNull(null);\r\n// => true\r\n\r\n_.isNull(void 0);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isnumbervalue\"></a>`_.isNumber(value)`\r\n<a href=\"#_isnumbervalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9043 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isnumber \"See the npm package\")\r\n\r\nChecks if `value` is classified as a `Number` primitive or object.\r\n<br>\r\n<br>\r\n**Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\r\nas numbers, use the `_.isFinite` method.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is correctly classified, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isNumber(8.4);\r\n// => true\r\n\r\n_.isNumber(NaN);\r\n// => true\r\n\r\n_.isNumber('8.4');\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isobjectvalue\"></a>`_.isObject(value)`\r\n<a href=\"#_isobjectvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L8893 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isobject \"See the npm package\")\r\n\r\nChecks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\r\n(e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is an object, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isObject({});\r\n// => true\r\n\r\n_.isObject([1, 2, 3]);\r\n// => true\r\n\r\n_.isObject(1);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isplainobjectvalue\"></a>`_.isPlainObject(value)`\r\n<a href=\"#_isplainobjectvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9077 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isplainobject \"See the npm package\")\r\n\r\nChecks if `value` is a plain object, that is, an object created by the\r\n`Object` constructor or one with a `[[Prototype]]` of `null`.\r\n<br>\r\n<br>\r\n**Note:** This method assumes objects created by the `Object` constructor\r\nhave no inherited enumerable properties.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is a plain object, else `false`.\r\n\r\n#### Example\r\n```js\r\nfunction Foo() {\r\n  this.a = 1;\r\n}\r\n\r\n_.isPlainObject(new Foo);\r\n// => false\r\n\r\n_.isPlainObject([1, 2, 3]);\r\n// => false\r\n\r\n_.isPlainObject({ 'x': 0, 'y': 0 });\r\n// => true\r\n\r\n_.isPlainObject(Object.create(null));\r\n// => true\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isregexpvalue\"></a>`_.isRegExp(value)`\r\n<a href=\"#_isregexpvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9121 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isregexp \"See the npm package\")\r\n\r\nChecks if `value` is classified as a `RegExp` object.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is correctly classified, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isRegExp(/abc/);\r\n// => true\r\n\r\n_.isRegExp('/abc/');\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isstringvalue\"></a>`_.isString(value)`\r\n<a href=\"#_isstringvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9141 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isstring \"See the npm package\")\r\n\r\nChecks if `value` is classified as a `String` primitive or object.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is correctly classified, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isString('abc');\r\n// => true\r\n\r\n_.isString(1);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_istypedarrayvalue\"></a>`_.isTypedArray(value)`\r\n<a href=\"#_istypedarrayvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9161 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.istypedarray \"See the npm package\")\r\n\r\nChecks if `value` is classified as a typed array.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is correctly classified, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isTypedArray(new Uint8Array);\r\n// => true\r\n\r\n_.isTypedArray([]);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_isundefinedvalue\"></a>`_.isUndefined(value)`\r\n<a href=\"#_isundefinedvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9181 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.isundefined \"See the npm package\")\r\n\r\nChecks if `value` is `undefined`.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is `undefined`, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.isUndefined(void 0);\r\n// => true\r\n\r\n_.isUndefined(null);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_ltvalue-other\"></a>`_.lt(value, other)`\r\n<a href=\"#_ltvalue-other\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9205 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.lt \"See the npm package\")\r\n\r\nChecks if `value` is less than `other`.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to compare.\r\n2. `other` *(&#42;)*: The other value to compare.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is less than `other`, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.lt(1, 3);\r\n// => true\r\n\r\n_.lt(3, 3);\r\n// => false\r\n\r\n_.lt(3, 1);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_ltevalue-other\"></a>`_.lte(value, other)`\r\n<a href=\"#_ltevalue-other\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9229 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.lte \"See the npm package\")\r\n\r\nChecks if `value` is less than or equal to `other`.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to compare.\r\n2. `other` *(&#42;)*: The other value to compare.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `value` is less than or equal to `other`, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.lte(1, 3);\r\n// => true\r\n\r\n_.lte(3, 3);\r\n// => true\r\n\r\n_.lte(3, 1);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_toarrayvalue\"></a>`_.toArray(value)`\r\n<a href=\"#_toarrayvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9248 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.toarray \"See the npm package\")\r\n\r\nConverts `value` to an array.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to convert.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the converted array.\r\n\r\n#### Example\r\n```js\r\n(function() {\r\n  return _.toArray(arguments).slice(1);\r\n}(1, 2, 3));\r\n// => [2, 3]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_toplainobjectvalue\"></a>`_.toPlainObject(value)`\r\n<a href=\"#_toplainobjectvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9284 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.toplainobject \"See the npm package\")\r\n\r\nConverts `value` to a plain object flattening inherited enumerable\r\nproperties of `value` to own properties of the plain object.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to convert.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the converted plain object.\r\n\r\n#### Example\r\n```js\r\nfunction Foo() {\r\n  this.b = 2;\r\n}\r\n\r\nFoo.prototype.c = 3;\r\n\r\n_.assign({ 'a': 1 }, new Foo);\r\n// => { 'a': 1, 'b': 2 }\r\n\r\n_.assign({ 'a': 1 }, _.toPlainObject(new Foo));\r\n// => { 'a': 1, 'b': 2, 'c': 3 }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `“Math” Methods`\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_addaugend-addend\"></a>`_.add(augend, addend)`\r\n<a href=\"#_addaugend-addend\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11803 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.add \"See the npm package\")\r\n\r\nAdds two numbers.\r\n\r\n#### Arguments\r\n1. `augend` *(number)*: The first number to add.\r\n2. `addend` *(number)*: The second number to add.\r\n\r\n#### Returns\r\n*(number)*:  Returns the sum.\r\n\r\n#### Example\r\n```js\r\n_.add(6, 4);\r\n// => 10\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_ceiln-precision0\"></a>`_.ceil(n, [precision=0])`\r\n<a href=\"#_ceiln-precision0\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11827 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.ceil \"See the npm package\")\r\n\r\nCalculates `n` rounded up to `precision`.\r\n\r\n#### Arguments\r\n1. `n` *(number)*: The number to round up.\r\n2. `[precision=0]` *(number)*: The precision to round up to.\r\n\r\n#### Returns\r\n*(number)*:  Returns the rounded up number.\r\n\r\n#### Example\r\n```js\r\n_.ceil(4.006);\r\n// => 5\r\n\r\n_.ceil(6.004, 2);\r\n// => 6.01\r\n\r\n_.ceil(6040, -2);\r\n// => 6100\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_floorn-precision0\"></a>`_.floor(n, [precision=0])`\r\n<a href=\"#_floorn-precision0\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11849 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.floor \"See the npm package\")\r\n\r\nCalculates `n` rounded down to `precision`.\r\n\r\n#### Arguments\r\n1. `n` *(number)*: The number to round down.\r\n2. `[precision=0]` *(number)*: The precision to round down to.\r\n\r\n#### Returns\r\n*(number)*:  Returns the rounded down number.\r\n\r\n#### Example\r\n```js\r\n_.floor(4.006);\r\n// => 4\r\n\r\n_.floor(0.046, 2);\r\n// => 0.04\r\n\r\n_.floor(4060, -2);\r\n// => 4000\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_maxcollection-iteratee-thisarg\"></a>`_.max(collection, [iteratee], [thisArg])`\r\n<a href=\"#_maxcollection-iteratee-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11898 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.max \"See the npm package\")\r\n\r\nGets the maximum value of `collection`. If `collection` is empty or falsey\r\n`-Infinity` is returned. If an iteratee function is provided it's invoked\r\nfor each value in `collection` to generate the criterion by which the value\r\nis ranked. The `iteratee` is bound to `thisArg` and invoked with three\r\narguments: (value, index, collection).\r\n<br>\r\n<br>\r\nIf a property name is provided for `iteratee` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `iteratee` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[iteratee]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the maximum value.\r\n\r\n#### Example\r\n```js\r\n_.max([4, 2, 8, 6]);\r\n// => 8\r\n\r\n_.max([]);\r\n// => -Infinity\r\n\r\nvar users = [\r\n  { 'user': 'barney', 'age': 36 },\r\n  { 'user': 'fred',   'age': 40 }\r\n];\r\n\r\n_.max(users, function(chr) {\r\n  return chr.age;\r\n});\r\n// => { 'user': 'fred', 'age': 40 }\r\n\r\n// using the `_.property` callback shorthand\r\n_.max(users, 'age');\r\n// => { 'user': 'fred', 'age': 40 }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_mincollection-iteratee-thisarg\"></a>`_.min(collection, [iteratee], [thisArg])`\r\n<a href=\"#_mincollection-iteratee-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11947 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.min \"See the npm package\")\r\n\r\nGets the minimum value of `collection`. If `collection` is empty or falsey\r\n`Infinity` is returned. If an iteratee function is provided it's invoked\r\nfor each value in `collection` to generate the criterion by which the value\r\nis ranked. The `iteratee` is bound to `thisArg` and invoked with three\r\narguments: (value, index, collection).\r\n<br>\r\n<br>\r\nIf a property name is provided for `iteratee` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `iteratee` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[iteratee]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the minimum value.\r\n\r\n#### Example\r\n```js\r\n_.min([4, 2, 8, 6]);\r\n// => 2\r\n\r\n_.min([]);\r\n// => Infinity\r\n\r\nvar users = [\r\n  { 'user': 'barney', 'age': 36 },\r\n  { 'user': 'fred',   'age': 40 }\r\n];\r\n\r\n_.min(users, function(chr) {\r\n  return chr.age;\r\n});\r\n// => { 'user': 'barney', 'age': 36 }\r\n\r\n// using the `_.property` callback shorthand\r\n_.min(users, 'age');\r\n// => { 'user': 'barney', 'age': 36 }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_roundn-precision0\"></a>`_.round(n, [precision=0])`\r\n<a href=\"#_roundn-precision0\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11969 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.round \"See the npm package\")\r\n\r\nCalculates `n` rounded to `precision`.\r\n\r\n#### Arguments\r\n1. `n` *(number)*: The number to round.\r\n2. `[precision=0]` *(number)*: The precision to round to.\r\n\r\n#### Returns\r\n*(number)*:  Returns the rounded number.\r\n\r\n#### Example\r\n```js\r\n_.round(4.006);\r\n// => 4\r\n\r\n_.round(4.006, 2);\r\n// => 4.01\r\n\r\n_.round(4060, -2);\r\n// => 4100\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_sumcollection-iteratee-thisarg\"></a>`_.sum(collection, [iteratee], [thisArg])`\r\n<a href=\"#_sumcollection-iteratee-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L12003 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.sum \"See the npm package\")\r\n\r\nGets the sum of the values in `collection`.\r\n\r\n#### Arguments\r\n1. `collection` *(Array|Object|string)*: The collection to iterate over.\r\n2. `[iteratee]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(number)*:  Returns the sum.\r\n\r\n#### Example\r\n```js\r\n_.sum([4, 6]);\r\n// => 10\r\n\r\n_.sum({ 'a': 4, 'b': 6 });\r\n// => 10\r\n\r\nvar objects = [\r\n  { 'n': 4 },\r\n  { 'n': 6 }\r\n];\r\n\r\n_.sum(objects, function(object) {\r\n  return object.n;\r\n});\r\n// => 10\r\n\r\n// using the `_.property` callback shorthand\r\n_.sum(objects, 'n');\r\n// => 10\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `“Number” Methods`\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_inrangen-start0-end\"></a>`_.inRange(n, [start=0], end)`\r\n<a href=\"#_inrangen-start0-end\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10321 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.inrange \"See the npm package\")\r\n\r\nChecks if `n` is between `start` and up to but not including, `end`. If\r\n`end` is not specified it's set to `start` with `start` then set to `0`.\r\n\r\n#### Arguments\r\n1. `n` *(number)*: The number to check.\r\n2. `[start=0]` *(number)*: The start of the range.\r\n3. `end` *(number)*: The end of the range.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `n` is in the range, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.inRange(3, 2, 4);\r\n// => true\r\n\r\n_.inRange(4, 8);\r\n// => true\r\n\r\n_.inRange(4, 2);\r\n// => false\r\n\r\n_.inRange(2, 2);\r\n// => false\r\n\r\n_.inRange(1.2, 2);\r\n// => true\r\n\r\n_.inRange(5.2, 4);\r\n// => false\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_randommin0-max1-floating\"></a>`_.random([min=0], [max=1], [floating])`\r\n<a href=\"#_randommin0-max1-floating\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10359 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.random \"See the npm package\")\r\n\r\nProduces a random number between `min` and `max` (inclusive). If only one\r\nargument is provided a number between `0` and the given number is returned.\r\nIf `floating` is `true`, or either `min` or `max` are floats, a floating-point\r\nnumber is returned instead of an integer.\r\n\r\n#### Arguments\r\n1. `[min=0]` *(number)*: The minimum possible value.\r\n2. `[max=1]` *(number)*: The maximum possible value.\r\n3. `[floating]` *(boolean)*: Specify returning a floating-point number.\r\n\r\n#### Returns\r\n*(number)*:  Returns the random number.\r\n\r\n#### Example\r\n```js\r\n_.random(0, 5);\r\n// => an integer between 0 and 5\r\n\r\n_.random(5);\r\n// => also an integer between 0 and 5\r\n\r\n_.random(5, true);\r\n// => a floating-point number between 0 and 5\r\n\r\n_.random(1.2, 5.2);\r\n// => a floating-point number between 1.2 and 5.2\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `“Object” Methods`\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_assignobject-sources-customizer-thisarg\"></a>`_.assign(object, [sources], [customizer], [thisArg])`\r\n<a href=\"#_assignobject-sources-customizer-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9372 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.assign \"See the npm package\")\r\n\r\nAssigns own enumerable properties of source object(s) to the destination\r\nobject. Subsequent sources overwrite property assignments of previous sources.\r\nIf `customizer` is provided it's invoked to produce the assigned values.\r\nThe `customizer` is bound to `thisArg` and invoked with five arguments:<br>\r\n(objectValue, sourceValue, key, object, source).\r\n<br>\r\n<br>\r\n**Note:** This method mutates `object` and is based on\r\n[`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\r\n\r\n#### Aliases\r\n*_.extend*\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The destination object.\r\n2. `[sources]` *(...Object)*: The source objects.\r\n3. `[customizer]` *(Function)*: The function to customize assigned values.\r\n4. `[thisArg]` *(&#42;)*: The `this` binding of `customizer`.\r\n\r\n#### Returns\r\n*(Object)*:  Returns `object`.\r\n\r\n#### Example\r\n```js\r\n_.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\r\n// => { 'user': 'fred', 'age': 40 }\r\n\r\n// using a customizer callback\r\nvar defaults = _.partialRight(_.assign, function(value, other) {\r\n  return _.isUndefined(value) ? other : value;\r\n});\r\n\r\ndefaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\r\n// => { 'user': 'barney', 'age': 36 }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_createprototype-properties\"></a>`_.create(prototype, [properties])`\r\n<a href=\"#_createprototype-properties\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9412 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.create \"See the npm package\")\r\n\r\nCreates an object that inherits from the given `prototype` object. If a\r\n`properties` object is provided its own enumerable properties are assigned\r\nto the created object.\r\n\r\n#### Arguments\r\n1. `prototype` *(Object)*: The object to inherit from.\r\n2. `[properties]` *(Object)*: The properties to assign to the object.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the new object.\r\n\r\n#### Example\r\n```js\r\nfunction Shape() {\r\n  this.x = 0;\r\n  this.y = 0;\r\n}\r\n\r\nfunction Circle() {\r\n  Shape.call(this);\r\n}\r\n\r\nCircle.prototype = _.create(Shape.prototype, {\r\n  'constructor': Circle\r\n});\r\n\r\nvar circle = new Circle;\r\ncircle instanceof Circle;\r\n// => true\r\n\r\ncircle instanceof Shape;\r\n// => true\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_defaultsobject-sources\"></a>`_.defaults(object, [sources])`\r\n<a href=\"#_defaultsobject-sources\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9438 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.defaults \"See the npm package\")\r\n\r\nAssigns own enumerable properties of source object(s) to the destination\r\nobject for all destination properties that resolve to `undefined`. Once a\r\nproperty is set, additional values of the same property are ignored.\r\n<br>\r\n<br>\r\n**Note:** This method mutates `object`.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The destination object.\r\n2. `[sources]` *(...Object)*: The source objects.\r\n\r\n#### Returns\r\n*(Object)*:  Returns `object`.\r\n\r\n#### Example\r\n```js\r\n_.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\r\n// => { 'user': 'barney', 'age': 36 }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_defaultsdeepobject-sources\"></a>`_.defaultsDeep(object, [sources])`\r\n<a href=\"#_defaultsdeepobject-sources\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9458 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.defaultsdeep \"See the npm package\")\r\n\r\nThis method is like `_.defaults` except that it recursively assigns\r\ndefault properties.\r\n<br>\r\n<br>\r\n**Note:** This method mutates `object`.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The destination object.\r\n2. `[sources]` *(...Object)*: The source objects.\r\n\r\n#### Returns\r\n*(Object)*:  Returns `object`.\r\n\r\n#### Example\r\n```js\r\n_.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\r\n// => { 'user': { 'name': 'barney', 'age': 36 } }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_findkeyobject-predicate_identity-thisarg\"></a>`_.findKey(object, [predicate=_.identity], [thisArg])`\r\n<a href=\"#_findkeyobject-predicate_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9508 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.findkey \"See the npm package\")\r\n\r\nThis method is like `_.find` except that it returns the key of the first\r\nelement `predicate` returns truthy for instead of the element itself.\r\n<br>\r\n<br>\r\nIf a property name is provided for `predicate` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `predicate` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to search.\r\n2. `[predicate=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(string|undefined)*:  Returns the key of the matched element, else `undefined`.\r\n\r\n#### Example\r\n```js\r\nvar users = {\r\n  'barney':  { 'age': 36, 'active': true },\r\n  'fred':    { 'age': 40, 'active': false },\r\n  'pebbles': { 'age': 1,  'active': true }\r\n};\r\n\r\n_.findKey(users, function(chr) {\r\n  return chr.age < 40;\r\n});\r\n// => 'barney' (iteration order is not guaranteed)\r\n\r\n// using the `_.matches` callback shorthand\r\n_.findKey(users, { 'age': 1, 'active': true });\r\n// => 'pebbles'\r\n\r\n// using the `_.matchesProperty` callback shorthand\r\n_.findKey(users, 'active', false);\r\n// => 'fred'\r\n\r\n// using the `_.property` callback shorthand\r\n_.findKey(users, 'active');\r\n// => 'barney'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_findlastkeyobject-predicate_identity-thisarg\"></a>`_.findLastKey(object, [predicate=_.identity], [thisArg])`\r\n<a href=\"#_findlastkeyobject-predicate_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9558 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.findlastkey \"See the npm package\")\r\n\r\nThis method is like `_.findKey` except that it iterates over elements of\r\na collection in the opposite order.\r\n<br>\r\n<br>\r\nIf a property name is provided for `predicate` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `predicate` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to search.\r\n2. `[predicate=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(string|undefined)*:  Returns the key of the matched element, else `undefined`.\r\n\r\n#### Example\r\n```js\r\nvar users = {\r\n  'barney':  { 'age': 36, 'active': true },\r\n  'fred':    { 'age': 40, 'active': false },\r\n  'pebbles': { 'age': 1,  'active': true }\r\n};\r\n\r\n_.findLastKey(users, function(chr) {\r\n  return chr.age < 40;\r\n});\r\n// => returns `pebbles` assuming `_.findKey` returns `barney`\r\n\r\n// using the `_.matches` callback shorthand\r\n_.findLastKey(users, { 'age': 36, 'active': true });\r\n// => 'barney'\r\n\r\n// using the `_.matchesProperty` callback shorthand\r\n_.findLastKey(users, 'active', false);\r\n// => 'fred'\r\n\r\n// using the `_.property` callback shorthand\r\n_.findLastKey(users, 'active');\r\n// => 'pebbles'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_forinobject-iteratee_identity-thisarg\"></a>`_.forIn(object, [iteratee=_.identity], [thisArg])`\r\n<a href=\"#_forinobject-iteratee_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9587 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.forin \"See the npm package\")\r\n\r\nIterates over own and inherited enumerable properties of an object invoking\r\n`iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\r\nwith three arguments: (value, key, object). Iteratee functions may exit\r\niteration early by explicitly returning `false`.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to iterate over.\r\n2. `[iteratee=_.identity]` *(Function)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Object)*:  Returns `object`.\r\n\r\n#### Example\r\n```js\r\nfunction Foo() {\r\n  this.a = 1;\r\n  this.b = 2;\r\n}\r\n\r\nFoo.prototype.c = 3;\r\n\r\n_.forIn(new Foo, function(value, key) {\r\n  console.log(key);\r\n});\r\n// => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_forinrightobject-iteratee_identity-thisarg\"></a>`_.forInRight(object, [iteratee=_.identity], [thisArg])`\r\n<a href=\"#_forinrightobject-iteratee_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9614 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.forinright \"See the npm package\")\r\n\r\nThis method is like `_.forIn` except that it iterates over properties of\r\n`object` in the opposite order.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to iterate over.\r\n2. `[iteratee=_.identity]` *(Function)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Object)*:  Returns `object`.\r\n\r\n#### Example\r\n```js\r\nfunction Foo() {\r\n  this.a = 1;\r\n  this.b = 2;\r\n}\r\n\r\nFoo.prototype.c = 3;\r\n\r\n_.forInRight(new Foo, function(value, key) {\r\n  console.log(key);\r\n});\r\n// => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_forownobject-iteratee_identity-thisarg\"></a>`_.forOwn(object, [iteratee=_.identity], [thisArg])`\r\n<a href=\"#_forownobject-iteratee_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9643 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.forown \"See the npm package\")\r\n\r\nIterates over own enumerable properties of an object invoking `iteratee`\r\nfor each property. The `iteratee` is bound to `thisArg` and invoked with\r\nthree arguments: (value, key, object). Iteratee functions may exit iteration\r\nearly by explicitly returning `false`.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to iterate over.\r\n2. `[iteratee=_.identity]` *(Function)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Object)*:  Returns `object`.\r\n\r\n#### Example\r\n```js\r\nfunction Foo() {\r\n  this.a = 1;\r\n  this.b = 2;\r\n}\r\n\r\nFoo.prototype.c = 3;\r\n\r\n_.forOwn(new Foo, function(value, key) {\r\n  console.log(key);\r\n});\r\n// => logs 'a' and 'b' (iteration order is not guaranteed)\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_forownrightobject-iteratee_identity-thisarg\"></a>`_.forOwnRight(object, [iteratee=_.identity], [thisArg])`\r\n<a href=\"#_forownrightobject-iteratee_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9670 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.forownright \"See the npm package\")\r\n\r\nThis method is like `_.forOwn` except that it iterates over properties of\r\n`object` in the opposite order.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to iterate over.\r\n2. `[iteratee=_.identity]` *(Function)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Object)*:  Returns `object`.\r\n\r\n#### Example\r\n```js\r\nfunction Foo() {\r\n  this.a = 1;\r\n  this.b = 2;\r\n}\r\n\r\nFoo.prototype.c = 3;\r\n\r\n_.forOwnRight(new Foo, function(value, key) {\r\n  console.log(key);\r\n});\r\n// => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_functionsobject\"></a>`_.functions(object)`\r\n<a href=\"#_functionsobject\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9687 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.functions \"See the npm package\")\r\n\r\nCreates an array of function property names from all enumerable properties,\r\nown and inherited, of `object`.\r\n\r\n#### Aliases\r\n*_.methods*\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to inspect.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new array of property names.\r\n\r\n#### Example\r\n```js\r\n_.functions(_);\r\n// => ['after', 'ary', 'assign', ...]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_getobject-path-defaultvalue\"></a>`_.get(object, path, [defaultValue])`\r\n<a href=\"#_getobject-path-defaultvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9715 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.get \"See the npm package\")\r\n\r\nGets the property value at `path` of `object`. If the resolved value is\r\n`undefined` the `defaultValue` is used in its place.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to query.\r\n2. `path` *(Array|string)*: The path of the property to get.\r\n3. `[defaultValue]` *(&#42;)*: The value returned if the resolved value is `undefined`.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the resolved value.\r\n\r\n#### Example\r\n```js\r\nvar object = { 'a': [{ 'b': { 'c': 3 } }] };\r\n\r\n_.get(object, 'a[0].b.c');\r\n// => 3\r\n\r\n_.get(object, ['a', '0', 'b', 'c']);\r\n// => 3\r\n\r\n_.get(object, 'a.b.c', 'default');\r\n// => 'default'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_hasobject-path\"></a>`_.has(object, path)`\r\n<a href=\"#_hasobject-path\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9742 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.has \"See the npm package\")\r\n\r\nChecks if `path` is a direct property.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to query.\r\n2. `path` *(Array|string)*: The path to check.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `path` is a direct property, else `false`.\r\n\r\n#### Example\r\n```js\r\nvar object = { 'a': { 'b': { 'c': 3 } } };\r\n\r\n_.has(object, 'a');\r\n// => true\r\n\r\n_.has(object, 'a.b.c');\r\n// => true\r\n\r\n_.has(object, ['a', 'b', 'c']);\r\n// => true\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_invertobject-multivalue\"></a>`_.invert(object, [multiValue])`\r\n<a href=\"#_invertobject-multivalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9783 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.invert \"See the npm package\")\r\n\r\nCreates an object composed of the inverted keys and values of `object`.\r\nIf `object` contains duplicate values, subsequent values overwrite property\r\nassignments of previous values unless `multiValue` is `true`.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to invert.\r\n2. `[multiValue]` *(boolean)*: Allow multiple values per key.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the new inverted object.\r\n\r\n#### Example\r\n```js\r\nvar object = { 'a': 1, 'b': 2, 'c': 1 };\r\n\r\n_.invert(object);\r\n// => { '1': 'c', '2': 'b' }\r\n\r\n// with `multiValue`\r\n_.invert(object, true);\r\n// => { '1': ['a', 'c'], '2': ['b'] }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_keysobject\"></a>`_.keys(object)`\r\n<a href=\"#_keysobject\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9837 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.keys \"See the npm package\")\r\n\r\nCreates an array of the own enumerable property names of `object`.\r\n<br>\r\n<br>\r\n**Note:** Non-object values are coerced to objects. See the\r\n[ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\r\nfor more details.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to query.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the array of property names.\r\n\r\n#### Example\r\n```js\r\nfunction Foo() {\r\n  this.a = 1;\r\n  this.b = 2;\r\n}\r\n\r\nFoo.prototype.c = 3;\r\n\r\n_.keys(new Foo);\r\n// => ['a', 'b'] (iteration order is not guaranteed)\r\n\r\n_.keys('hi');\r\n// => ['0', '1']\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_keysinobject\"></a>`_.keysIn(object)`\r\n<a href=\"#_keysinobject\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9868 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.keysin \"See the npm package\")\r\n\r\nCreates an array of the own and inherited enumerable property names of `object`.\r\n<br>\r\n<br>\r\n**Note:** Non-object values are coerced to objects.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to query.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the array of property names.\r\n\r\n#### Example\r\n```js\r\nfunction Foo() {\r\n  this.a = 1;\r\n  this.b = 2;\r\n}\r\n\r\nFoo.prototype.c = 3;\r\n\r\n_.keysIn(new Foo);\r\n// => ['a', 'b', 'c'] (iteration order is not guaranteed)\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_mapkeysobject-iteratee_identity-thisarg\"></a>`_.mapKeys(object, [iteratee=_.identity], [thisArg])`\r\n<a href=\"#_mapkeysobject-iteratee_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9945 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.mapkeys \"See the npm package\")\r\n\r\nThe opposite of `_.mapValues`; this method creates an object with the\r\nsame values as `object` and keys generated by running each own enumerable\r\nproperty of `object` through `iteratee`.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to iterate over.\r\n2. `[iteratee=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the new mapped object.\r\n\r\n#### Example\r\n```js\r\n_.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\r\n  return key + value;\r\n});\r\n// => { 'a1': 1, 'b2': 2 }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_mapvaluesobject-iteratee_identity-thisarg\"></a>`_.mapValues(object, [iteratee=_.identity], [thisArg])`\r\n<a href=\"#_mapvaluesobject-iteratee_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9988 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.mapvalues \"See the npm package\")\r\n\r\nCreates an object with the same keys as `object` and values generated by\r\nrunning each own enumerable property of `object` through `iteratee`. The\r\niteratee function is bound to `thisArg` and invoked with three arguments:<br>\r\n(value, key, object).\r\n<br>\r\n<br>\r\nIf a property name is provided for `iteratee` the created `_.property`\r\nstyle callback returns the property value of the given element.\r\n<br>\r\n<br>\r\nIf a value is also provided for `thisArg` the created `_.matchesProperty`\r\nstyle callback returns `true` for elements that have a matching property\r\nvalue, else `false`.\r\n<br>\r\n<br>\r\nIf an object is provided for `iteratee` the created `_.matches` style\r\ncallback returns `true` for elements that have the properties of the given\r\nobject, else `false`.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to iterate over.\r\n2. `[iteratee=_.identity]` *(Function|Object|string)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the new mapped object.\r\n\r\n#### Example\r\n```js\r\n_.mapValues({ 'a': 1, 'b': 2 }, function(n) {\r\n  return n * 3;\r\n});\r\n// => { 'a': 3, 'b': 6 }\r\n\r\nvar users = {\r\n  'fred':    { 'user': 'fred',    'age': 40 },\r\n  'pebbles': { 'user': 'pebbles', 'age': 1 }\r\n};\r\n\r\n// using the `_.property` callback shorthand\r\n_.mapValues(users, 'age');\r\n// => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_mergeobject-sources-customizer-thisarg\"></a>`_.merge(object, [sources], [customizer], [thisArg])`\r\n<a href=\"#_mergeobject-sources-customizer-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L9338 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.merge \"See the npm package\")\r\n\r\nRecursively merges own enumerable properties of the source object(s), that\r\ndon't resolve to `undefined` into the destination object. Subsequent sources\r\noverwrite property assignments of previous sources. If `customizer` is\r\nprovided it's invoked to produce the merged values of the destination and\r\nsource properties. If `customizer` returns `undefined` merging is handled\r\nby the method instead. The `customizer` is bound to `thisArg` and invoked\r\nwith five arguments: (objectValue, sourceValue, key, object, source).\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The destination object.\r\n2. `[sources]` *(...Object)*: The source objects.\r\n3. `[customizer]` *(Function)*: The function to customize assigned values.\r\n4. `[thisArg]` *(&#42;)*: The `this` binding of `customizer`.\r\n\r\n#### Returns\r\n*(Object)*:  Returns `object`.\r\n\r\n#### Example\r\n```js\r\nvar users = {\r\n  'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\r\n};\r\n\r\nvar ages = {\r\n  'data': [{ 'age': 36 }, { 'age': 40 }]\r\n};\r\n\r\n_.merge(users, ages);\r\n// => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\r\n\r\n// using a customizer callback\r\nvar object = {\r\n  'fruits': ['apple'],\r\n  'vegetables': ['beet']\r\n};\r\n\r\nvar other = {\r\n  'fruits': ['banana'],\r\n  'vegetables': ['carrot']\r\n};\r\n\r\n_.merge(object, other, function(a, b) {\r\n  if (_.isArray(a)) {\r\n    return a.concat(b);\r\n  }\r\n});\r\n// => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_omitobject-predicate-thisarg\"></a>`_.omit(object, [predicate], [thisArg])`\r\n<a href=\"#_omitobject-predicate-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10013 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.omit \"See the npm package\")\r\n\r\nThe opposite of `_.pick`; this method creates an object composed of the\r\nown and inherited enumerable properties of `object` that are not omitted.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The source object.\r\n2. `[predicate]` *(Function|...(string|string&#91;&#93;)*: The function invoked per iteration or property names to omit, specified as individual property names or arrays of property names.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the new object.\r\n\r\n#### Example\r\n```js\r\nvar object = { 'user': 'fred', 'age': 40 };\r\n\r\n_.omit(object, 'age');\r\n// => { 'user': 'fred' }\r\n\r\n_.omit(object, _.isNumber);\r\n// => { 'user': 'fred' }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_pairsobject\"></a>`_.pairs(object)`\r\n<a href=\"#_pairsobject\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10041 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.pairs \"See the npm package\")\r\n\r\nCreates a two dimensional array of the key-value pairs for `object`,\r\ne.g. `[[key1, value1], [key2, value2]]`.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to query.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new array of key-value pairs.\r\n\r\n#### Example\r\n```js\r\n_.pairs({ 'barney': 36, 'fred': 40 });\r\n// => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_pickobject-predicate-thisarg\"></a>`_.pick(object, [predicate], [thisArg])`\r\n<a href=\"#_pickobject-predicate-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10082 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.pick \"See the npm package\")\r\n\r\nCreates an object composed of the picked `object` properties. Property\r\nnames may be specified as individual arguments or as arrays of property\r\nnames. If `predicate` is provided it's invoked for each property of `object`\r\npicking the properties `predicate` returns truthy for. The predicate is\r\nbound to `thisArg` and invoked with three arguments: (value, key, object).\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The source object.\r\n2. `[predicate]` *(Function|...(string|string&#91;&#93;)*: The function invoked per iteration or property names to pick, specified as individual property names or arrays of property names.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `predicate`.\r\n\r\n#### Returns\r\n*(Object)*:  Returns the new object.\r\n\r\n#### Example\r\n```js\r\nvar object = { 'user': 'fred', 'age': 40 };\r\n\r\n_.pick(object, 'user');\r\n// => { 'user': 'fred' }\r\n\r\n_.pick(object, _.isString);\r\n// => { 'user': 'fred' }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_resultobject-path-defaultvalue\"></a>`_.result(object, path, [defaultValue])`\r\n<a href=\"#_resultobject-path-defaultvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10119 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.result \"See the npm package\")\r\n\r\nThis method is like `_.get` except that if the resolved value is a function\r\nit's invoked with the `this` binding of its parent object and its result\r\nis returned.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to query.\r\n2. `path` *(Array|string)*: The path of the property to resolve.\r\n3. `[defaultValue]` *(&#42;)*: The value returned if the resolved value is `undefined`.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the resolved value.\r\n\r\n#### Example\r\n```js\r\nvar object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\r\n\r\n_.result(object, 'a[0].b.c1');\r\n// => 3\r\n\r\n_.result(object, 'a[0].b.c2');\r\n// => 4\r\n\r\n_.result(object, 'a.b.c', 'default');\r\n// => 'default'\r\n\r\n_.result(object, 'a.b.c', _.constant('default'));\r\n// => 'default'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_setobject-path-value\"></a>`_.set(object, path, value)`\r\n<a href=\"#_setobject-path-value\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10155 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.set \"See the npm package\")\r\n\r\nSets the property value of `path` on `object`. If a portion of `path`\r\ndoes not exist it's created.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to augment.\r\n2. `path` *(Array|string)*: The path of the property to set.\r\n3. `value` *(&#42;)*: The value to set.\r\n\r\n#### Returns\r\n*(Object)*:  Returns `object`.\r\n\r\n#### Example\r\n```js\r\nvar object = { 'a': [{ 'b': { 'c': 3 } }] };\r\n\r\n_.set(object, 'a[0].b.c', 4);\r\nconsole.log(object.a[0].b.c);\r\n// => 4\r\n\r\n_.set(object, 'x[0].y.z', 5);\r\nconsole.log(object.x[0].y.z);\r\n// => 5\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_transformobject-iteratee_identity-accumulator-thisarg\"></a>`_.transform(object, [iteratee=_.identity], [accumulator], [thisArg])`\r\n<a href=\"#_transformobject-iteratee_identity-accumulator-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10210 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.transform \"See the npm package\")\r\n\r\nAn alternative to `_.reduce`; this method transforms `object` to a new\r\n`accumulator` object which is the result of running each of its own enumerable\r\nproperties through `iteratee`, with each invocation potentially mutating\r\nthe `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\r\nwith four arguments: (accumulator, value, key, object). Iteratee functions\r\nmay exit iteration early by explicitly returning `false`.\r\n\r\n#### Arguments\r\n1. `object` *(Array|Object)*: The object to iterate over.\r\n2. `[iteratee=_.identity]` *(Function)*: The function invoked per iteration.\r\n3. `[accumulator]` *(&#42;)*: The custom accumulator value.\r\n4. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the accumulated value.\r\n\r\n#### Example\r\n```js\r\n_.transform([2, 3, 4], function(result, n) {\r\n  result.push(n *= n);\r\n  return n % 2 == 0;\r\n});\r\n// => [4, 9]\r\n\r\n_.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\r\n  result[key] = n * 3;\r\n});\r\n// => { 'a': 3, 'b': 6 }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_valuesobject\"></a>`_.values(object)`\r\n<a href=\"#_valuesobject\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10257 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.values \"See the npm package\")\r\n\r\nCreates an array of the own enumerable property values of `object`.\r\n<br>\r\n<br>\r\n**Note:** Non-object values are coerced to objects.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to query.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the array of property values.\r\n\r\n#### Example\r\n```js\r\nfunction Foo() {\r\n  this.a = 1;\r\n  this.b = 2;\r\n}\r\n\r\nFoo.prototype.c = 3;\r\n\r\n_.values(new Foo);\r\n// => [1, 2] (iteration order is not guaranteed)\r\n\r\n_.values('hi');\r\n// => ['h', 'i']\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_valuesinobject\"></a>`_.valuesIn(object)`\r\n<a href=\"#_valuesinobject\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10284 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.valuesin \"See the npm package\")\r\n\r\nCreates an array of the own and inherited enumerable property values\r\nof `object`.\r\n<br>\r\n<br>\r\n**Note:** Non-object values are coerced to objects.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to query.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the array of property values.\r\n\r\n#### Example\r\n```js\r\nfunction Foo() {\r\n  this.a = 1;\r\n  this.b = 2;\r\n}\r\n\r\nFoo.prototype.c = 3;\r\n\r\n_.valuesIn(new Foo);\r\n// => [1, 2, 3] (iteration order is not guaranteed)\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `“String” Methods`\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_camelcasestring\"></a>`_.camelCase([string=''])`\r\n<a href=\"#_camelcasestring\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10415 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.camelcase \"See the npm package\")\r\n\r\nConverts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to convert.\r\n\r\n#### Returns\r\n*(string)*:  Returns the camel cased string.\r\n\r\n#### Example\r\n```js\r\n_.camelCase('Foo Bar');\r\n// => 'fooBar'\r\n\r\n_.camelCase('--foo-bar');\r\n// => 'fooBar'\r\n\r\n_.camelCase('__foo_bar__');\r\n// => 'fooBar'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_capitalizestring\"></a>`_.capitalize([string=''])`\r\n<a href=\"#_capitalizestring\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10433 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.capitalize \"See the npm package\")\r\n\r\nCapitalizes the first character of `string`.\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to capitalize.\r\n\r\n#### Returns\r\n*(string)*:  Returns the capitalized string.\r\n\r\n#### Example\r\n```js\r\n_.capitalize('fred');\r\n// => 'Fred'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_deburrstring\"></a>`_.deburr([string=''])`\r\n<a href=\"#_deburrstring\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10452 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.deburr \"See the npm package\")\r\n\r\nDeburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\r\nto basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to deburr.\r\n\r\n#### Returns\r\n*(string)*:  Returns the deburred string.\r\n\r\n#### Example\r\n```js\r\n_.deburr('déjà vu');\r\n// => 'deja vu'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_endswithstring-target-positionstringlength\"></a>`_.endsWith([string=''], [target], [position=string.length])`\r\n<a href=\"#_endswithstring-target-positionstringlength\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10478 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.endswith \"See the npm package\")\r\n\r\nChecks if `string` ends with the given target string.\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to search.\r\n2. `[target]` *(string)*: The string to search for.\r\n3. `[position=string.length]` *(number)*: The position to search from.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `string` ends with `target`, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.endsWith('abc', 'c');\r\n// => true\r\n\r\n_.endsWith('abc', 'b');\r\n// => false\r\n\r\n_.endsWith('abc', 'b', 2);\r\n// => true\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_escapestring\"></a>`_.escape([string=''])`\r\n<a href=\"#_escapestring\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10523 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.escape \"See the npm package\")\r\n\r\nConverts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\r\ntheir corresponding HTML entities.\r\n<br>\r\n<br>\r\n**Note:** No other characters are escaped. To escape additional characters\r\nuse a third-party library like [_he_](https://mths.be/he).\r\n<br>\r\n<br>\r\nThough the \">\" character is escaped for symmetry, characters like\r\n\">\" and \"/\" don't need escaping in HTML and have no special meaning\r\nunless they're part of a tag or unquoted attribute value.\r\nSee [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\r\n(under \"semi-related fun fact\") for more details.\r\n<br>\r\n<br>\r\nBackticks are escaped because in Internet Explorer < 9, they can break out\r\nof attribute values or HTML comments. See [#59](https://html5sec.org/#59),\r\n[#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\r\n[#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\r\nfor more details.\r\n<br>\r\n<br>\r\nWhen working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\r\nto reduce XSS vectors.\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to escape.\r\n\r\n#### Returns\r\n*(string)*:  Returns the escaped string.\r\n\r\n#### Example\r\n```js\r\n_.escape('fred, barney, & pebbles');\r\n// => 'fred, barney, &amp; pebbles'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_escaperegexpstring\"></a>`_.escapeRegExp([string=''])`\r\n<a href=\"#_escaperegexpstring\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10545 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.escaperegexp \"See the npm package\")\r\n\r\nEscapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\r\n\"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to escape.\r\n\r\n#### Returns\r\n*(string)*:  Returns the escaped string.\r\n\r\n#### Example\r\n```js\r\n_.escapeRegExp('[lodash](https://lodash.com/)');\r\n// => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_kebabcasestring\"></a>`_.kebabCase([string=''])`\r\n<a href=\"#_kebabcasestring\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10571 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.kebabcase \"See the npm package\")\r\n\r\nConverts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to convert.\r\n\r\n#### Returns\r\n*(string)*:  Returns the kebab cased string.\r\n\r\n#### Example\r\n```js\r\n_.kebabCase('Foo Bar');\r\n// => 'foo-bar'\r\n\r\n_.kebabCase('fooBar');\r\n// => 'foo-bar'\r\n\r\n_.kebabCase('__foo_bar__');\r\n// => 'foo-bar'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_padstring-length0-chars\"></a>`_.pad([string=''], [length=0], [chars=' '])`\r\n<a href=\"#_padstring-length0-chars\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10597 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.pad \"See the npm package\")\r\n\r\nPads `string` on the left and right sides if it's shorter than `length`.\r\nPadding characters are truncated if they can't be evenly divided by `length`.\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to pad.\r\n2. `[length=0]` *(number)*: The padding length.\r\n3. `[chars=' ']` *(string)*: The string used as padding.\r\n\r\n#### Returns\r\n*(string)*:  Returns the padded string.\r\n\r\n#### Example\r\n```js\r\n_.pad('abc', 8);\r\n// => '  abc   '\r\n\r\n_.pad('abc', 8, '_-');\r\n// => '_-abc_-_'\r\n\r\n_.pad('abc', 3);\r\n// => 'abc'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_padleftstring-length0-chars\"></a>`_.padLeft([string=''], [length=0], [chars=' '])`\r\n<a href=\"#_padleftstring-length0-chars\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10635 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.padleft \"See the npm package\")\r\n\r\nPads `string` on the left side if it's shorter than `length`. Padding\r\ncharacters are truncated if they exceed `length`.\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to pad.\r\n2. `[length=0]` *(number)*: The padding length.\r\n3. `[chars=' ']` *(string)*: The string used as padding.\r\n\r\n#### Returns\r\n*(string)*:  Returns the padded string.\r\n\r\n#### Example\r\n```js\r\n_.padLeft('abc', 6);\r\n// => '   abc'\r\n\r\n_.padLeft('abc', 6, '_-');\r\n// => '_-_abc'\r\n\r\n_.padLeft('abc', 3);\r\n// => 'abc'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_padrightstring-length0-chars\"></a>`_.padRight([string=''], [length=0], [chars=' '])`\r\n<a href=\"#_padrightstring-length0-chars\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10659 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.padright \"See the npm package\")\r\n\r\nPads `string` on the right side if it's shorter than `length`. Padding\r\ncharacters are truncated if they exceed `length`.\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to pad.\r\n2. `[length=0]` *(number)*: The padding length.\r\n3. `[chars=' ']` *(string)*: The string used as padding.\r\n\r\n#### Returns\r\n*(string)*:  Returns the padded string.\r\n\r\n#### Example\r\n```js\r\n_.padRight('abc', 6);\r\n// => 'abc   '\r\n\r\n_.padRight('abc', 6, '_-');\r\n// => 'abc_-_'\r\n\r\n_.padRight('abc', 3);\r\n// => 'abc'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_parseintstring-radix\"></a>`_.parseInt(string, [radix])`\r\n<a href=\"#_parseintstring-radix\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10684 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.parseint \"See the npm package\")\r\n\r\nConverts `string` to an integer of the specified radix. If `radix` is\r\n`undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\r\nin which case a `radix` of `16` is used.\r\n<br>\r\n<br>\r\n**Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\r\nof `parseInt`.\r\n\r\n#### Arguments\r\n1. `string` *(string)*: The string to convert.\r\n2. `[radix]` *(number)*: The radix to interpret `value` by.\r\n\r\n#### Returns\r\n*(number)*:  Returns the converted integer.\r\n\r\n#### Example\r\n```js\r\n_.parseInt('08');\r\n// => 8\r\n\r\n_.map(['6', '08', '10'], _.parseInt);\r\n// => [6, 8, 10]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_repeatstring-n0\"></a>`_.repeat([string=''], [n=0])`\r\n<a href=\"#_repeatstring-n0\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10717 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.repeat \"See the npm package\")\r\n\r\nRepeats the given string `n` times.\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to repeat.\r\n2. `[n=0]` *(number)*: The number of times to repeat the string.\r\n\r\n#### Returns\r\n*(string)*:  Returns the repeated string.\r\n\r\n#### Example\r\n```js\r\n_.repeat('*', 3);\r\n// => '***'\r\n\r\n_.repeat('abc', 2);\r\n// => 'abcabc'\r\n\r\n_.repeat('abc', 0);\r\n// => ''\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_snakecasestring\"></a>`_.snakeCase([string=''])`\r\n<a href=\"#_snakecasestring\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10756 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.snakecase \"See the npm package\")\r\n\r\nConverts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to convert.\r\n\r\n#### Returns\r\n*(string)*:  Returns the snake cased string.\r\n\r\n#### Example\r\n```js\r\n_.snakeCase('Foo Bar');\r\n// => 'foo_bar'\r\n\r\n_.snakeCase('fooBar');\r\n// => 'foo_bar'\r\n\r\n_.snakeCase('--foo-bar');\r\n// => 'foo_bar'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_startcasestring\"></a>`_.startCase([string=''])`\r\n<a href=\"#_startcasestring\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10779 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.startcase \"See the npm package\")\r\n\r\nConverts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to convert.\r\n\r\n#### Returns\r\n*(string)*:  Returns the start cased string.\r\n\r\n#### Example\r\n```js\r\n_.startCase('--foo-bar');\r\n// => 'Foo Bar'\r\n\r\n_.startCase('fooBar');\r\n// => 'Foo Bar'\r\n\r\n_.startCase('__foo_bar__');\r\n// => 'Foo Bar'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_startswithstring-target-position0\"></a>`_.startsWith([string=''], [target], [position=0])`\r\n<a href=\"#_startswithstring-target-position0\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10804 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.startswith \"See the npm package\")\r\n\r\nChecks if `string` starts with the given target string.\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to search.\r\n2. `[target]` *(string)*: The string to search for.\r\n3. `[position=0]` *(number)*: The position to search from.\r\n\r\n#### Returns\r\n*(boolean)*:  Returns `true` if `string` starts with `target`, else `false`.\r\n\r\n#### Example\r\n```js\r\n_.startsWith('abc', 'a');\r\n// => true\r\n\r\n_.startsWith('abc', 'b');\r\n// => false\r\n\r\n_.startsWith('abc', 'b', 1);\r\n// => true\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_templatestring-options\"></a>`_.template([string=''], [options])`\r\n<a href=\"#_templatestring-options\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L10909 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.template \"See the npm package\")\r\n\r\nCreates a compiled template function that can interpolate data properties\r\nin \"interpolate\" delimiters, HTML-escape interpolated data properties in\r\n\"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\r\nproperties may be accessed as free variables in the template. If a setting\r\nobject is provided it takes precedence over `_.templateSettings` values.\r\n<br>\r\n<br>\r\n**Note:** In the development build `_.template` utilizes\r\n[sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\r\nfor easier debugging.\r\n<br>\r\n<br>\r\nFor more information on precompiling templates see\r\n[lodash's custom builds documentation](https://lodash.com/custom-builds).\r\n<br>\r\n<br>\r\nFor more information on Chrome extension sandboxes see\r\n[Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The template string.\r\n2. `[options]` *(Object)*: The options object.\r\n3. `[options.escape]` *(RegExp)*: The HTML \"escape\" delimiter.\r\n4. `[options.evaluate]` *(RegExp)*: The \"evaluate\" delimiter.\r\n5. `[options.imports]` *(Object)*: An object to import into the template as free variables.\r\n6. `[options.interpolate]` *(RegExp)*: The \"interpolate\" delimiter.\r\n7. `[options.sourceURL]` *(string)*: The sourceURL of the template's compiled source.\r\n8. `[options.variable]` *(string)*: The data object variable name.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the compiled template function.\r\n\r\n#### Example\r\n```js\r\n// using the \"interpolate\" delimiter to create a compiled template\r\nvar compiled = _.template('hello <%= user %>!');\r\ncompiled({ 'user': 'fred' });\r\n// => 'hello fred!'\r\n\r\n// using the HTML \"escape\" delimiter to escape data property values\r\nvar compiled = _.template('<b><%- value %></b>');\r\ncompiled({ 'value': '<script>' });\r\n// => '<b>&lt;script&gt;</b>'\r\n\r\n// using the \"evaluate\" delimiter to execute JavaScript and generate HTML\r\nvar compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\r\ncompiled({ 'users': ['fred', 'barney'] });\r\n// => '<li>fred</li><li>barney</li>'\r\n\r\n// using the internal `print` function in \"evaluate\" delimiters\r\nvar compiled = _.template('<% print(\"hello \" + user); %>!');\r\ncompiled({ 'user': 'barney' });\r\n// => 'hello barney!'\r\n\r\n// using the ES delimiter as an alternative to the default \"interpolate\" delimiter\r\nvar compiled = _.template('hello ${ user }!');\r\ncompiled({ 'user': 'pebbles' });\r\n// => 'hello pebbles!'\r\n\r\n// using custom template delimiters\r\n_.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\r\nvar compiled = _.template('hello {{ user }}!');\r\ncompiled({ 'user': 'mustache' });\r\n// => 'hello mustache!'\r\n\r\n// using backslashes to treat delimiters as plain text\r\nvar compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\r\ncompiled({ 'value': 'ignored' });\r\n// => '<%- value %>'\r\n\r\n// using the `imports` option to import `jQuery` as `jq`\r\nvar text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\r\nvar compiled = _.template(text, { 'imports': { 'jq': jQuery } });\r\ncompiled({ 'users': ['fred', 'barney'] });\r\n// => '<li>fred</li><li>barney</li>'\r\n\r\n// using the `sourceURL` option to specify a custom sourceURL for the template\r\nvar compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\r\ncompiled(data);\r\n// => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\r\n\r\n// using the `variable` option to ensure a with-statement isn't used in the compiled template\r\nvar compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\r\ncompiled.source;\r\n// => function(data) {\r\n//   var __t, __p = '';\r\n//   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\r\n//   return __p;\r\n// }\r\n\r\n// using the `source` property to inline compiled templates for meaningful\r\n// line numbers in error messages and a stack trace\r\nfs.writeFileSync(path.join(cwd, 'jst.js'), '\\\r\n  var JST = {\\\r\n    \"main\": ' + _.template(mainText).source + '\\\r\n  };\\\r\n');\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_trimstring-charswhitespace\"></a>`_.trim([string=''], [chars=whitespace])`\r\n<a href=\"#_trimstring-charswhitespace\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11036 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.trim \"See the npm package\")\r\n\r\nRemoves leading and trailing whitespace or specified characters from `string`.\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to trim.\r\n2. `[chars=whitespace]` *(string)*: The characters to trim.\r\n\r\n#### Returns\r\n*(string)*:  Returns the trimmed string.\r\n\r\n#### Example\r\n```js\r\n_.trim('  abc  ');\r\n// => 'abc'\r\n\r\n_.trim('-_-abc-_-', '_-');\r\n// => 'abc'\r\n\r\n_.map(['  foo  ', '  bar  '], _.trim);\r\n// => ['foo', 'bar']\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_trimleftstring-charswhitespace\"></a>`_.trimLeft([string=''], [chars=whitespace])`\r\n<a href=\"#_trimleftstring-charswhitespace\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11067 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.trimleft \"See the npm package\")\r\n\r\nRemoves leading whitespace or specified characters from `string`.\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to trim.\r\n2. `[chars=whitespace]` *(string)*: The characters to trim.\r\n\r\n#### Returns\r\n*(string)*:  Returns the trimmed string.\r\n\r\n#### Example\r\n```js\r\n_.trimLeft('  abc  ');\r\n// => 'abc  '\r\n\r\n_.trimLeft('-_-abc-_-', '_-');\r\n// => 'abc-_-'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_trimrightstring-charswhitespace\"></a>`_.trimRight([string=''], [chars=whitespace])`\r\n<a href=\"#_trimrightstring-charswhitespace\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11097 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.trimright \"See the npm package\")\r\n\r\nRemoves trailing whitespace or specified characters from `string`.\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to trim.\r\n2. `[chars=whitespace]` *(string)*: The characters to trim.\r\n\r\n#### Returns\r\n*(string)*:  Returns the trimmed string.\r\n\r\n#### Example\r\n```js\r\n_.trimRight('  abc  ');\r\n// => '  abc'\r\n\r\n_.trimRight('-_-abc-_-', '_-');\r\n// => '-_-abc'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_truncstring-options-optionslength30-optionsomission-optionsseparator\"></a>`_.trunc([string=''], [options], [options.length=30], [options.omission='...'], [options.separator])`\r\n<a href=\"#_truncstring-options-optionslength30-optionsomission-optionsseparator\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11149 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.trunc \"See the npm package\")\r\n\r\nTruncates `string` if it's longer than the given maximum string length.\r\nThe last characters of the truncated string are replaced with the omission\r\nstring which defaults to \"...\".\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to truncate.\r\n2. `[options]` *(Object|number)*: The options object or maximum string length.\r\n3. `[options.length=30]` *(number)*: The maximum string length.\r\n4. `[options.omission='...']` *(string)*: The string to indicate text is omitted.\r\n5. `[options.separator]` *(RegExp|string)*: The separator pattern to truncate to.\r\n\r\n#### Returns\r\n*(string)*:  Returns the truncated string.\r\n\r\n#### Example\r\n```js\r\n_.trunc('hi-diddly-ho there, neighborino');\r\n// => 'hi-diddly-ho there, neighbo...'\r\n\r\n_.trunc('hi-diddly-ho there, neighborino', 24);\r\n// => 'hi-diddly-ho there, n...'\r\n\r\n_.trunc('hi-diddly-ho there, neighborino', {\r\n  'length': 24,\r\n  'separator': ' '\r\n});\r\n// => 'hi-diddly-ho there,...'\r\n\r\n_.trunc('hi-diddly-ho there, neighborino', {\r\n  'length': 24,\r\n  'separator': /,? +/\r\n});\r\n// => 'hi-diddly-ho there...'\r\n\r\n_.trunc('hi-diddly-ho there, neighborino', {\r\n  'omission': ' [...]'\r\n});\r\n// => 'hi-diddly-ho there, neig [...]'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_unescapestring\"></a>`_.unescape([string=''])`\r\n<a href=\"#_unescapestring\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11219 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.unescape \"See the npm package\")\r\n\r\nThe inverse of `_.escape`; this method converts the HTML entities\r\n`&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\r\ncorresponding characters.\r\n<br>\r\n<br>\r\n**Note:** No other HTML entities are unescaped. To unescape additional HTML\r\nentities use a third-party library like [_he_](https://mths.be/he).\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to unescape.\r\n\r\n#### Returns\r\n*(string)*:  Returns the unescaped string.\r\n\r\n#### Example\r\n```js\r\n_.unescape('fred, barney, &amp; pebbles');\r\n// => 'fred, barney, & pebbles'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_wordsstring-pattern\"></a>`_.words([string=''], [pattern])`\r\n<a href=\"#_wordsstring-pattern\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11244 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.words \"See the npm package\")\r\n\r\nSplits `string` into an array of its words.\r\n\r\n#### Arguments\r\n1. `[string='']` *(string)*: The string to inspect.\r\n2. `[pattern]` *(RegExp|string)*: The pattern to match words.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the words of `string`.\r\n\r\n#### Example\r\n```js\r\n_.words('fred, barney, & pebbles');\r\n// => ['fred', 'barney', 'pebbles']\r\n\r\n_.words('fred, barney, & pebbles', /[^, ]+/g);\r\n// => ['fred', 'barney', '&', 'pebbles']\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `“Utility” Methods`\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_attemptfunc\"></a>`_.attempt(func)`\r\n<a href=\"#_attemptfunc\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11274 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.attempt \"See the npm package\")\r\n\r\nAttempts to invoke `func`, returning either the result or the caught error\r\nobject. Any additional arguments are provided to `func` when it's invoked.\r\n\r\n#### Arguments\r\n1. `func` *(Function)*: The function to attempt.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns the `func` result or error object.\r\n\r\n#### Example\r\n```js\r\n// avoid throwing errors for invalid selectors\r\nvar elements = _.attempt(function(selector) {\r\n  return document.querySelectorAll(selector);\r\n}, '>_>');\r\n\r\nif (_.isError(elements)) {\r\n  elements = [];\r\n}\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_callbackfunc_identity-thisarg\"></a>`_.callback([func=_.identity], [thisArg])`\r\n<a href=\"#_callbackfunc_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11320 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.callback \"See the npm package\")\r\n\r\nCreates a function that invokes `func` with the `this` binding of `thisArg`\r\nand arguments of the created function. If `func` is a property name the\r\ncreated callback returns the property value for a given element. If `func`\r\nis an object the created callback returns `true` for elements that contain\r\nthe equivalent object properties, otherwise it returns `false`.\r\n\r\n#### Aliases\r\n*_.iteratee*\r\n\r\n#### Arguments\r\n1. `[func=_.identity]` *(&#42;)*: The value to convert to a callback.\r\n2. `[thisArg]` *(&#42;)*: The `this` binding of `func`.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the callback.\r\n\r\n#### Example\r\n```js\r\nvar users = [\r\n  { 'user': 'barney', 'age': 36 },\r\n  { 'user': 'fred',   'age': 40 }\r\n];\r\n\r\n// wrap to create custom callback shorthands\r\n_.callback = _.wrap(_.callback, function(callback, func, thisArg) {\r\n  var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\r\n  if (!match) {\r\n    return callback(func, thisArg);\r\n  }\r\n  return function(object) {\r\n    return match[2] == 'gt'\r\n      ? object[match[1]] > match[3]\r\n      : object[match[1]] < match[3];\r\n  };\r\n});\r\n\r\n_.filter(users, 'age__gt36');\r\n// => [{ 'user': 'fred', 'age': 40 }]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_constantvalue\"></a>`_.constant(value)`\r\n<a href=\"#_constantvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11345 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.constant \"See the npm package\")\r\n\r\nCreates a function that returns `value`.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: The value to return from the new function.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new function.\r\n\r\n#### Example\r\n```js\r\nvar object = { 'user': 'fred' };\r\nvar getter = _.constant(object);\r\n\r\ngetter() === object;\r\n// => true\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_identityvalue\"></a>`_.identity(value)`\r\n<a href=\"#_identityvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11366 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.identity \"See the npm package\")\r\n\r\nThis method returns the first argument provided to it.\r\n\r\n#### Arguments\r\n1. `value` *(&#42;)*: Any value.\r\n\r\n#### Returns\r\n*(&#42;)*:  Returns `value`.\r\n\r\n#### Example\r\n```js\r\nvar object = { 'user': 'fred' };\r\n\r\n_.identity(object) === object;\r\n// => true\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_matchessource\"></a>`_.matches(source)`\r\n<a href=\"#_matchessource\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11395 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.matches \"See the npm package\")\r\n\r\nCreates a function that performs a deep comparison between a given object\r\nand `source`, returning `true` if the given object has equivalent property\r\nvalues, else `false`.\r\n<br>\r\n<br>\r\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\r\nnumbers, `Object` objects, regexes, and strings. Objects are compared by\r\ntheir own, not inherited, enumerable properties. For comparing a single\r\nown or inherited property value see `_.matchesProperty`.\r\n\r\n#### Arguments\r\n1. `source` *(Object)*: The object of property values to match.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new function.\r\n\r\n#### Example\r\n```js\r\nvar users = [\r\n  { 'user': 'barney', 'age': 36, 'active': true },\r\n  { 'user': 'fred',   'age': 40, 'active': false }\r\n];\r\n\r\n_.filter(users, _.matches({ 'age': 40, 'active': false }));\r\n// => [{ 'user': 'fred', 'age': 40, 'active': false }]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_matchespropertypath-srcvalue\"></a>`_.matchesProperty(path, srcValue)`\r\n<a href=\"#_matchespropertypath-srcvalue\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11423 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.matchesproperty \"See the npm package\")\r\n\r\nCreates a function that compares the property value of `path` on a given\r\nobject to `value`.\r\n<br>\r\n<br>\r\n**Note:** This method supports comparing arrays, booleans, `Date` objects,\r\nnumbers, `Object` objects, regexes, and strings. Objects are compared by\r\ntheir own, not inherited, enumerable properties.\r\n\r\n#### Arguments\r\n1. `path` *(Array|string)*: The path of the property to get.\r\n2. `srcValue` *(&#42;)*: The value to match.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new function.\r\n\r\n#### Example\r\n```js\r\nvar users = [\r\n  { 'user': 'barney' },\r\n  { 'user': 'fred' }\r\n];\r\n\r\n_.find(users, _.matchesProperty('user', 'fred'));\r\n// => { 'user': 'fred' }\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_methodpath-args\"></a>`_.method(path, [args])`\r\n<a href=\"#_methodpath-args\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11450 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.method \"See the npm package\")\r\n\r\nCreates a function that invokes the method at `path` on a given object.\r\nAny additional arguments are provided to the invoked method.\r\n\r\n#### Arguments\r\n1. `path` *(Array|string)*: The path of the method to invoke.\r\n2. `[args]` *(...&#42;)*: The arguments to invoke the method with.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new function.\r\n\r\n#### Example\r\n```js\r\nvar objects = [\r\n  { 'a': { 'b': { 'c': _.constant(2) } } },\r\n  { 'a': { 'b': { 'c': _.constant(1) } } }\r\n];\r\n\r\n_.map(objects, _.method('a.b.c'));\r\n// => [2, 1]\r\n\r\n_.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\r\n// => [1, 2]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_methodofobject-args\"></a>`_.methodOf(object, [args])`\r\n<a href=\"#_methodofobject-args\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11478 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.methodof \"See the npm package\")\r\n\r\nThe opposite of `_.method`; this method creates a function that invokes\r\nthe method at a given path on `object`. Any additional arguments are\r\nprovided to the invoked method.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to query.\r\n2. `[args]` *(...&#42;)*: The arguments to invoke the method with.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new function.\r\n\r\n#### Example\r\n```js\r\nvar array = _.times(3, _.constant),\r\n    object = { 'a': array, 'b': array, 'c': array };\r\n\r\n_.map(['a[2]', 'c[0]'], _.methodOf(object));\r\n// => [2, 0]\r\n\r\n_.map([['a', '2'], ['c', '0']], _.methodOf(object));\r\n// => [2, 0]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_mixinobjectlodash-source-options\"></a>`_.mixin([object=lodash], source, [options])`\r\n<a href=\"#_mixinobjectlodash-source-options\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11520 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.mixin \"See the npm package\")\r\n\r\nAdds all own enumerable function properties of a source object to the\r\ndestination object. If `object` is a function then methods are added to\r\nits prototype as well.\r\n<br>\r\n<br>\r\n**Note:** Use `_.runInContext` to create a pristine `lodash` function to\r\navoid conflicts caused by modifying the original.\r\n\r\n#### Arguments\r\n1. `[object=lodash]` *(Function|Object)*: The destination object.\r\n2. `source` *(Object)*: The object of functions to add.\r\n3. `[options]` *(Object)*: The options object.\r\n4. `[options.chain=true]` *(boolean)*: Specify whether the functions added are chainable.\r\n\r\n#### Returns\r\n*(Function|Object)*:  Returns `object`.\r\n\r\n#### Example\r\n```js\r\nfunction vowels(string) {\r\n  return _.filter(string, function(v) {\r\n    return /[aeiou]/i.test(v);\r\n  });\r\n}\r\n\r\n_.mixin({ 'vowels': vowels });\r\n_.vowels('fred');\r\n// => ['e']\r\n\r\n_('fred').vowels().value();\r\n// => ['e']\r\n\r\n_.mixin({ 'vowels': vowels }, { 'chain': false });\r\n_('fred').vowels();\r\n// => ['e']\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_noconflict\"></a>`_.noConflict()`\r\n<a href=\"#_noconflict\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11583 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.noconflict \"See the npm package\")\r\n\r\nReverts the `_` variable to its previous value and returns a reference to\r\nthe `lodash` function.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the `lodash` function.\r\n\r\n#### Example\r\n```js\r\nvar lodash = _.noConflict();\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_noop\"></a>`_.noop()`\r\n<a href=\"#_noop\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11602 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.noop \"See the npm package\")\r\n\r\nA no-operation function that returns `undefined` regardless of the\r\narguments it receives.\r\n\r\n#### Example\r\n```js\r\nvar object = { 'user': 'fred' };\r\n\r\n_.noop(object) === undefined;\r\n// => true\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_propertypath\"></a>`_.property(path)`\r\n<a href=\"#_propertypath\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11628 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.property \"See the npm package\")\r\n\r\nCreates a function that returns the property value at `path` on a\r\ngiven object.\r\n\r\n#### Arguments\r\n1. `path` *(Array|string)*: The path of the property to get.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new function.\r\n\r\n#### Example\r\n```js\r\nvar objects = [\r\n  { 'a': { 'b': { 'c': 2 } } },\r\n  { 'a': { 'b': { 'c': 1 } } }\r\n];\r\n\r\n_.map(objects, _.property('a.b.c'));\r\n// => [2, 1]\r\n\r\n_.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\r\n// => [1, 2]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_propertyofobject\"></a>`_.propertyOf(object)`\r\n<a href=\"#_propertyofobject\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11652 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.propertyof \"See the npm package\")\r\n\r\nThe opposite of `_.property`; this method creates a function that returns\r\nthe property value at a given path on `object`.\r\n\r\n#### Arguments\r\n1. `object` *(Object)*: The object to query.\r\n\r\n#### Returns\r\n*(Function)*:  Returns the new function.\r\n\r\n#### Example\r\n```js\r\nvar array = [0, 1, 2],\r\n    object = { 'a': array, 'b': array, 'c': array };\r\n\r\n_.map(['a[2]', 'c[0]'], _.propertyOf(object));\r\n// => [2, 0]\r\n\r\n_.map([['a', '2'], ['c', '0']], _.propertyOf(object));\r\n// => [2, 0]\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_rangestart0-end-step1\"></a>`_.range([start=0], end, [step=1])`\r\n<a href=\"#_rangestart0-end-step1\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11691 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.range \"See the npm package\")\r\n\r\nCreates an array of numbers (positive and/or negative) progressing from\r\n`start` up to, but not including, `end`. If `end` is not specified it's\r\nset to `start` with `start` then set to `0`. If `end` is less than `start`\r\na zero-length range is created unless a negative `step` is specified.\r\n\r\n#### Arguments\r\n1. `[start=0]` *(number)*: The start of the range.\r\n2. `end` *(number)*: The end of the range.\r\n3. `[step=1]` *(number)*: The value to increment or decrement by.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the new array of numbers.\r\n\r\n#### Example\r\n```js\r\n_.range(4);\r\n// => [0, 1, 2, 3]\r\n\r\n_.range(1, 5);\r\n// => [1, 2, 3, 4]\r\n\r\n_.range(0, 20, 5);\r\n// => [0, 5, 10, 15]\r\n\r\n_.range(0, -4, -1);\r\n// => [0, -1, -2, -3]\r\n\r\n_.range(1, 4, 0);\r\n// => [1, 1, 1]\r\n\r\n_.range(0);\r\n// => []\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_runincontextcontextroot\"></a>`_.runInContext([context=root])`\r\n<a href=\"#_runincontextcontextroot\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L723 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.runincontext \"See the npm package\")\r\n\r\nCreate a new pristine `lodash` function using the given `context` object.\r\n\r\n#### Arguments\r\n1. `[context=root]` *(Object)*: The context object.\r\n\r\n#### Returns\r\n*(Function)*:  Returns a new `lodash` function.\r\n\r\n#### Example\r\n```js\r\n_.mixin({ 'foo': _.constant('foo') });\r\n\r\nvar lodash = _.runInContext();\r\nlodash.mixin({ 'bar': lodash.constant('bar') });\r\n\r\n_.isFunction(_.foo);\r\n// => true\r\n_.isFunction(_.bar);\r\n// => false\r\n\r\nlodash.isFunction(lodash.foo);\r\n// => false\r\nlodash.isFunction(lodash.bar);\r\n// => true\r\n\r\n// using `context` to mock `Date#getTime` use in `_.now`\r\nvar mock = _.runInContext({\r\n  'Date': function() {\r\n    return { 'getTime': getTimeMock };\r\n  }\r\n});\r\n\r\n// or creating a suped-up `defer` in Node.js\r\nvar defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_timesn-iteratee_identity-thisarg\"></a>`_.times(n, [iteratee=_.identity], [thisArg])`\r\n<a href=\"#_timesn-iteratee_identity-thisarg\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11744 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.times \"See the npm package\")\r\n\r\nInvokes the iteratee function `n` times, returning an array of the results\r\nof each invocation. The `iteratee` is bound to `thisArg` and invoked with\r\none argument; (index).\r\n\r\n#### Arguments\r\n1. `n` *(number)*: The number of times to invoke `iteratee`.\r\n2. `[iteratee=_.identity]` *(Function)*: The function invoked per iteration.\r\n3. `[thisArg]` *(&#42;)*: The `this` binding of `iteratee`.\r\n\r\n#### Returns\r\n*(Array)*:  Returns the array of results.\r\n\r\n#### Example\r\n```js\r\nvar diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\r\n// => [3, 6, 4]\r\n\r\n_.times(3, function(n) {\r\n  mage.castSpell(n);\r\n});\r\n// => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\r\n\r\n_.times(3, function(n) {\r\n  this.cast(n);\r\n}, mage);\r\n// => also invokes `mage.castSpell(n)` three times\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_uniqueidprefix\"></a>`_.uniqueId([prefix])`\r\n<a href=\"#_uniqueidprefix\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L11782 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.uniqueid \"See the npm package\")\r\n\r\nGenerates a unique ID. If `prefix` is provided the ID is appended to it.\r\n\r\n#### Arguments\r\n1. `[prefix]` *(string)*: The value to prefix the ID with.\r\n\r\n#### Returns\r\n*(string)*:  Returns the unique ID.\r\n\r\n#### Example\r\n```js\r\n_.uniqueId('contact_');\r\n// => 'contact_104'\r\n\r\n_.uniqueId();\r\n// => '105'\r\n```\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `Methods`\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_templatesettingsimports_\"></a>`_.templateSettings.imports._`\r\n<a href=\"#_templatesettingsimports_\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L1122 \"View in source\") [&#x24C9;][1]\r\n\r\nA reference to the `lodash` function.\r\n\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n## `Properties`\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_version\"></a>`_.VERSION`\r\n<a href=\"#_version\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L12300 \"View in source\") [&#x24C9;][1]\r\n\r\n(string): The semantic version number.\r\n\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_support\"></a>`_.support`\r\n<a href=\"#_support\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L986 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.support \"See the npm package\")\r\n\r\n(Object): An object environment feature flags.\r\n\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_supportenumerrorprops\"></a>`_.support.enumErrorProps`\r\n<a href=\"#_supportenumerrorprops\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L1003 \"View in source\") [&#x24C9;][1]\r\n\r\n(boolean): Detect if `name` or `message` properties of `Error.prototype` are\r\nenumerable by default (IE < 9, Safari < 5.1).\r\n\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_supportenumprototypes\"></a>`_.support.enumPrototypes`\r\n<a href=\"#_supportenumprototypes\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L1017 \"View in source\") [&#x24C9;][1]\r\n\r\n(boolean): Detect if `prototype` properties are enumerable by default.\r\n<br>\r\n<br>\r\nFirefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1\r\n(if the prototype or a property on the prototype has been set)\r\nincorrectly set the `[[Enumerable]]` value of a function's `prototype`\r\nproperty to `true`.\r\n\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_supportnonenumshadows\"></a>`_.support.nonEnumShadows`\r\n<a href=\"#_supportnonenumshadows\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L1028 \"View in source\") [&#x24C9;][1]\r\n\r\n(boolean): Detect if properties shadowing those on `Object.prototype` are non-enumerable.\r\n<br>\r\n<br>\r\nIn IE < 9 an object's own properties, shadowing non-enumerable ones,\r\nare made non-enumerable as well (a.k.a the JScript `[[DontEnum]]` bug).\r\n\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_supportownlast\"></a>`_.support.ownLast`\r\n<a href=\"#_supportownlast\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L1036 \"View in source\") [&#x24C9;][1]\r\n\r\n(boolean): Detect if own properties are iterated after inherited properties (IE < 9).\r\n\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_supportspliceobjects\"></a>`_.support.spliceObjects`\r\n<a href=\"#_supportspliceobjects\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L1051 \"View in source\") [&#x24C9;][1]\r\n\r\n(boolean): Detect if `Array#shift` and `Array#splice` augment array-like objects\r\ncorrectly.\r\n<br>\r\n<br>\r\nFirefox < 10, compatibility modes of IE 8, and IE < 9 have buggy Array\r\n`shift()` and `splice()` functions that fail to remove the last element,\r\n`value[0]`, of array-like objects even though the \"length\" property is\r\nset to `0`. The `shift()` method is buggy in compatibility modes of IE 8,\r\nwhile `splice()` is buggy regardless of mode in IE < 9.\r\n\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_supportunindexedchars\"></a>`_.support.unindexedChars`\r\n<a href=\"#_supportunindexedchars\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L1062 \"View in source\") [&#x24C9;][1]\r\n\r\n(boolean): Detect lack of support for accessing string characters by index.\r\n<br>\r\n<br>\r\nIE < 8 can't access characters by index. IE 8 can only access characters\r\nby index on string literals, not string objects.\r\n\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_templatesettings\"></a>`_.templateSettings`\r\n<a href=\"#_templatesettings\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L1074 \"View in source\") [&#x24C9;][1] [&#x24C3;](https://www.npmjs.com/package/lodash.templatesettings \"See the npm package\")\r\n\r\n(Object): By default, the template delimiters used by lodash are like those in\r\nembedded Ruby (ERB). Change the following template settings to use\r\nalternative delimiters.\r\n\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_templatesettingsescape\"></a>`_.templateSettings.escape`\r\n<a href=\"#_templatesettingsescape\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L1082 \"View in source\") [&#x24C9;][1]\r\n\r\n(RegExp): Used to detect `data` property values to be HTML-escaped.\r\n\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_templatesettingsevaluate\"></a>`_.templateSettings.evaluate`\r\n<a href=\"#_templatesettingsevaluate\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L1090 \"View in source\") [&#x24C9;][1]\r\n\r\n(RegExp): Used to detect code to be evaluated.\r\n\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_templatesettingsimports\"></a>`_.templateSettings.imports`\r\n<a href=\"#_templatesettingsimports\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L1114 \"View in source\") [&#x24C9;][1]\r\n\r\n(Object): Used to import variables into the compiled template.\r\n\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_templatesettingsinterpolate\"></a>`_.templateSettings.interpolate`\r\n<a href=\"#_templatesettingsinterpolate\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L1098 \"View in source\") [&#x24C9;][1]\r\n\r\n(RegExp): Used to detect `data` property values to inject.\r\n\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- div -->\r\n\r\n### <a id=\"_templatesettingsvariable\"></a>`_.templateSettings.variable`\r\n<a href=\"#_templatesettingsvariable\">#</a> [&#x24C8;](https://github.com/lodash/lodash/blob/3.10.1/lodash.src.js#L1106 \"View in source\") [&#x24C9;][1]\r\n\r\n(string): Used to reference the data object in the template text.\r\n\r\n* * *\r\n\r\n<!-- /div -->\r\n\r\n<!-- /div -->\r\n\r\n<!-- /div -->\r\n\r\n [1]: #array \"Jump back to the TOC.\"\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}